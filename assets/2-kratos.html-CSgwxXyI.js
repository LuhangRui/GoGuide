import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as i,c as n,e as t}from"./app-v35IdkhA.js";const o={},r=t(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p><strong>Kratos</strong> is a microservice framework written in <strong>Go</strong> and open-sourced by <strong>Bilibili</strong>. It provides an all-in-one solution for microservice development, including interface definition, error code generation, client code generation, server code generation, and API documentation generation. Kratos aims to offer a simple, efficient, and reliable framework for building microservices, allowing developers to focus on business logic implementation without spending excessive effort on microservice development and maintenance.</p><div class="hint-container tip"><p class="hint-container-title">Pros and Cons</p><p><strong>Pros</strong>:</p><ul><li><strong>Ease of Use</strong>: Kratos provides an all-in-one solution for microservice development, allowing developers to focus on business logic implementation.</li><li><strong>Efficiency and Reliability</strong>: Kratos is designed to be a simple, efficient, and reliable microservice framework.</li><li><strong>Rich Features</strong>: Kratos integrates various engineering practices, including interface definition, error code generation, client code generation, server code generation, and API documentation generation.</li><li><strong>Comprehensive Documentation</strong>: Kratos has thorough documentation, offering detailed usage instructions and example code.</li></ul><p><strong>Cons</strong>:</p><ul><li><strong>Relatively Incomplete Ecosystem</strong>: Kratos&#39; ecosystem is relatively incomplete, with fewer plugins and tools.</li><li><strong>Small Community</strong>: Kratos has a smaller community, which may result in some issues being harder to resolve.</li></ul></div><h2 id="using-kratos" tabindex="-1"><a class="header-anchor" href="#using-kratos"><span>Using Kratos</span></a></h2><p>To use Kratos, you&#39;ll need to install the command-line tool called <strong>kratos</strong>. Kratos provides features such as interface definition, error code generation, client code generation, server code generation, and API documentation generation.</p><h3 id="installing-kratos" tabindex="-1"><a class="header-anchor" href="#installing-kratos"><span>Installing Kratos</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token assign-left variable">GO111MODULE</span><span class="token operator">=</span>on go get <span class="token parameter variable">-u</span> github.com/go-kratos/kratos/cmd/kratos/v2@latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="creating-a-simple-microservice" tabindex="-1"><a class="header-anchor" href="#creating-a-simple-microservice"><span>Creating a Simple Microservice</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>kratos new kratos-demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),a=[r];function s(l,c){return i(),n("div",null,a)}const m=e(o,[["render",s],["__file","2-kratos.html.vue"]]),p=JSON.parse('{"path":"/en/guide/library/Micro/2-kratos.html","title":"Kratos","lang":"en-US","frontmatter":{"order":2,"title":"Kratos","icon":"carbon:microservices-1","head":[["meta",{"name":"keywords","content":"Kratos, golang, microservice"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goguide.ryansu.tech/guide/library/Micro/2-kratos.html"}],["meta",{"property":"og:url","content":"https://goguide.ryansu.tech/en/guide/library/Micro/2-kratos.html"}],["meta",{"property":"og:site_name","content":"Go Guide"}],["meta",{"property":"og:title","content":"Kratos"}],["meta",{"property":"og:description","content":"Introduction Kratos is a microservice framework written in Go and open-sourced by Bilibili. It provides an all-in-one solution for microservice development, including interface ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T02:00:05.000Z"}],["meta",{"property":"article:author","content":"Go Guide"}],["meta",{"property":"article:modified_time","content":"2024-04-28T02:00:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kratos\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-28T02:00:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Go Guide\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]],"description":"Introduction Kratos is a microservice framework written in Go and open-sourced by Bilibili. It provides an all-in-one solution for microservice development, including interface ..."},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Using Kratos","slug":"using-kratos","link":"#using-kratos","children":[{"level":3,"title":"Installing Kratos","slug":"installing-kratos","link":"#installing-kratos","children":[]},{"level":3,"title":"Creating a Simple Microservice","slug":"creating-a-simple-microservice","link":"#creating-a-simple-microservice","children":[]}]}],"git":{"createdTime":1714267264000,"updatedTime":1714269605000,"contributors":[{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":2}]},"readingTime":{"minutes":0.84,"words":251},"filePathRelative":"en/guide/library/Micro/2-kratos.md","localizedDate":"April 28, 2024","autoDesc":true,"excerpt":"<h2>Introduction</h2>\\n<p><strong>Kratos</strong> is a microservice framework written in <strong>Go</strong> and open-sourced by <strong>Bilibili</strong>. It provides an all-in-one solution for microservice development, including interface definition, error code generation, client code generation, server code generation, and API documentation generation. Kratos aims to offer a simple, efficient, and reliable framework for building microservices, allowing developers to focus on business logic implementation without spending excessive effort on microservice development and maintenance.</p>"}');export{m as comp,p as data};
