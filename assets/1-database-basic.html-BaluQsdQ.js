import{_ as t}from"./sql-join-Bp3AkZJ8.js";import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,e as a}from"./app-BipP0Ue_.js";const s={},r=a('<h2 id="关系键" tabindex="-1"><a class="header-anchor" href="#关系键"><span>关系键</span></a></h2><p><strong>关系键用于标识数据表中的每一行或者标识与其他表的关系</strong></p><table><thead><tr><th>关系键</th><th>介绍</th></tr></thead><tbody><tr><td>主键 (Primary key - Unique key)</td><td>主键是数据列中用来唯一标识的字段，不允许为空，一个表只能有一个主键</td></tr><tr><td>超键 (Super key)</td><td>超键是能唯一标识数据列的所有属性集, 即若任意单个或多个字段如果也能唯一标识数据列，则都属于超键</td></tr><tr><td>候选键 (Candidate key)</td><td>候选键是超键的子集，候选键是不包含多余字段的超键，候选键中删除任意字段都不属于超键</td></tr><tr><td>外键 (Foreign key)</td><td>外键用于建立表之间的关系，如 A 表的主键是 B 表的字段，这时候 B 表中的 A 表的主键字段就是外键</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">注意</p><p>主键和唯一键的区别：</p><ul><li>一张表只能有一个主键，可以有多个唯一键</li><li>主键不能为空，唯一键可以为空</li></ul></div><details class="hint-container details"><summary>例子</summary><p>假设有两张表</p><table><thead><tr><th>student</th><th>teacher</th></tr></thead><tbody><tr><td>id</td><td>id</td></tr><tr><td>name</td><td>name</td></tr><tr><td>age</td><td>age</td></tr><tr><td>identify_card (身份证号)</td><td></td></tr><tr><td>teacher_id</td><td></td></tr></tbody></table><ul><li>主键： <code>student.id</code> <code>teacher.id</code></li><li>超键: 以 student 表为例: (<code>student.id</code>, <code>student.name</code>),(<code>student.id</code>, <code>student.name</code>, <code>student.age</code>) ... 任何和主键和身份证的组合都为超键</li><li>候选键： 以 <code>student</code> 表为例： <code>student.id</code> <code>student.identify_card</code></li><li>外键： <code>student.teacher_id</code></li></ul></details><h2 id="表连接" tabindex="-1"><a class="header-anchor" href="#表连接"><span>表连接</span></a></h2><p>要学习表连接，首先要了解<strong>笛卡尔积</strong></p><div class="hint-container info"><p class="hint-container-title">笛卡尔积</p><p>笛卡尔积（Cartesian product）指的是两个集合 X, Y 中 X 的所有元素分别乘以 Y 中所有元素的集合，又称为<strong>直积</strong></p><p>例如 <code>X={a,b}</code> <code>Y={1,2}</code> 则 X 和 Y 的笛卡尔积为</p><p><code>Z={(a,1),(a,2),(b,1),(b,2)}</code></p></div><p><strong>表连接是通过条件对两表之间的笛卡尔积进行筛选后的结果</strong></p><h3 id="表连接示意图" tabindex="-1"><a class="header-anchor" href="#表连接示意图"><span>表连接示意图</span></a></h3><figure><img src="'+t+`" alt="sql-join" tabindex="0" loading="lazy"><figcaption>sql-join</figcaption></figure><div class="hint-container info"><p class="hint-container-title">示例表</p><details class="hint-container details"><summary>示例表</summary><p>接下来的查询都是围绕该示例表</p><h4 id="course" tabindex="-1"><a class="header-anchor" href="#course"><span>course</span></a></h4><table><thead><tr><th>id</th><th>title</th></tr></thead><tbody><tr><td>1</td><td>Math</td></tr><tr><td>2</td><td>Art</td></tr><tr><td>3</td><td>Music</td></tr><tr><td>4</td><td>Geography</td></tr><tr><td>15</td><td>Sport</td></tr></tbody></table><h4 id="student" tabindex="-1"><a class="header-anchor" href="#student"><span>student</span></a></h4><table><thead><tr><th>id</th><th>name</th><th>age</th><th>course_id</th></tr></thead><tbody><tr><td>1</td><td>Elaine Morris</td><td>12</td><td>3</td></tr><tr><td>2</td><td>Beverly Turner</td><td>11</td><td>4</td></tr><tr><td>3</td><td>Connie Murphy</td><td>11</td><td>2</td></tr><tr><td>4</td><td>Jamie Romero</td><td>12</td><td>5</td></tr><tr><td>5</td><td>Clifford Reyes</td><td>10</td><td>1</td></tr><tr><td>6</td><td>Francisco Cook</td><td>12</td><td>2</td></tr><tr><td>7</td><td>Alan Sanchez</td><td>11</td><td>9</td></tr><tr><td>8</td><td>Tony Garcia</td><td>12</td><td>3</td></tr><tr><td>9</td><td>Bobby Burns</td><td>12</td><td>8</td></tr><tr><td>10</td><td>Glenn Adams</td><td>11</td><td>5</td></tr><tr><td>11</td><td>Glenn Griffin</td><td>12</td><td>4</td></tr><tr><td>12</td><td>Justin Rogers</td><td>13</td><td>8</td></tr></tbody></table></details></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>一般我们称第一个表为驱动表，第二个表为被驱动表，在例子中 <code>student</code> 为<strong>驱动表</strong>， <code>course</code> 为<strong>被驱动表</strong></p></div><h3 id="内连接-inner-join" tabindex="-1"><a class="header-anchor" href="#内连接-inner-join"><span>内连接 （inner Join）</span></a></h3><p>内连接 <code>inner join</code> 等同于 <code>join</code>, 用于只返回匹配的行。</p><p>以下三种写法相同</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> a<span class="token punctuation">,</span>b<span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> a <span class="token keyword">join</span> b<span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> a <span class="token keyword">inner</span> <span class="token keyword">join</span> b<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>例子</summary><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student s <span class="token keyword">inner</span> <span class="token keyword">join</span> course c <span class="token keyword">on</span> s<span class="token punctuation">.</span>course_id<span class="token operator">=</span>c<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果</p><table><thead><tr><th>id</th><th>name</th><th>age</th><th>course_id</th><th>id(1)</th><th>title</th></tr></thead><tbody><tr><td>5</td><td>Clifford Reyes</td><td>10</td><td>1</td><td>1</td><td>Math</td></tr><tr><td>6</td><td>Francisco Cook</td><td>12</td><td>2</td><td>2</td><td>Art</td></tr><tr><td>3</td><td>Connie Murphy</td><td>11</td><td>2</td><td>2</td><td>Art</td></tr><tr><td>8</td><td>Tony Garcia</td><td>12</td><td>3</td><td>3</td><td>Music</td></tr><tr><td>1</td><td>Elaine Morris</td><td>12</td><td>3</td><td>3</td><td>Music</td></tr><tr><td>11</td><td>Glenn Griffin</td><td>12</td><td>4</td><td>4</td><td>Geography</td></tr><tr><td>2</td><td>Beverly Turner</td><td>11</td><td>4</td><td>4</td><td>Geography</td></tr></tbody></table><p><strong>可以看到只有满足 <code>s.course_id=c.id</code> 的数据列被返回了</strong></p></details><h3 id="外连接-outer-join" tabindex="-1"><a class="header-anchor" href="#外连接-outer-join"><span>外连接 (outer join)</span></a></h3><h4 id="左连接-left-join" tabindex="-1"><a class="header-anchor" href="#左连接-left-join"><span>左连接 (left join)</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student s <span class="token keyword">left</span> <span class="token keyword">join</span> course c <span class="token keyword">on</span> s<span class="token punctuation">.</span>course_id<span class="token operator">=</span>c<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果</p><table><thead><tr><th>id</th><th>name</th><th>age</th><th>course_id</th><th>id(1)</th><th>title</th></tr></thead><tbody><tr><td>5</td><td>Clifford Reyes</td><td>10</td><td>1</td><td>1</td><td>Math</td></tr><tr><td>6</td><td>Francisco Cook</td><td>12</td><td>2</td><td>2</td><td>Art</td></tr><tr><td>3</td><td>Connie Murphy</td><td>11</td><td>2</td><td>2</td><td>Art</td></tr><tr><td>8</td><td>Tony Garcia</td><td>12</td><td>3</td><td>3</td><td>Music</td></tr><tr><td>1</td><td>Elaine Morris</td><td>12</td><td>3</td><td>3</td><td>Music</td></tr><tr><td>11</td><td>Glenn Griffin</td><td>12</td><td>4</td><td>4</td><td>Geography</td></tr><tr><td>2</td><td>Beverly Turner</td><td>11</td><td>4</td><td>4</td><td>Geography</td></tr><tr><td>10</td><td>Glenn Adams</td><td>11</td><td>5</td><td></td><td></td></tr><tr><td>4</td><td>Jamie Romero</td><td>12</td><td>5</td><td></td><td></td></tr><tr><td>12</td><td>Justin Rogers</td><td>13</td><td>8</td><td></td><td></td></tr><tr><td>9</td><td>Bobby Burns</td><td>12</td><td>8</td><td></td><td></td></tr><tr><td>7</td><td>Alan Sanchez</td><td>11</td><td>9</td><td></td><td></td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>可以看到不只有满足 <code>s.course_id=c.id</code> 的数据列被返回了，同时驱动表未匹配的其他数据也会返回</strong></p></div><h4 id="右连接-right-join" tabindex="-1"><a class="header-anchor" href="#右连接-right-join"><span>右连接 (right join)</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student s <span class="token keyword">right</span> <span class="token keyword">join</span> course c <span class="token keyword">on</span> s<span class="token punctuation">.</span>course_id<span class="token operator">=</span>c<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果</p><table><thead><tr><th>id</th><th>name</th><th>age</th><th>course_id</th><th>id(1)</th><th>title</th></tr></thead><tbody><tr><td>5</td><td>Clifford Reyes</td><td>10</td><td>1</td><td>1</td><td>Math</td></tr><tr><td>6</td><td>Francisco Cook</td><td>12</td><td>2</td><td>2</td><td>Art</td></tr><tr><td>3</td><td>Connie Murphy</td><td>11</td><td>2</td><td>2</td><td>Art</td></tr><tr><td>8</td><td>Tony Garcia</td><td>12</td><td>3</td><td>3</td><td>Music</td></tr><tr><td>1</td><td>Elaine Morris</td><td>12</td><td>3</td><td>3</td><td>Music</td></tr><tr><td>11</td><td>Glenn Griffin</td><td>12</td><td>4</td><td>4</td><td>Geography</td></tr><tr><td>2</td><td>Beverly Turner</td><td>11</td><td>4</td><td>4</td><td>Geography</td></tr><tr><td></td><td></td><td></td><td></td><td>15</td><td>Sport</td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>可以看到不只有满足 <code>s.course_id=c.id</code> 的数据列被返回了，同时被驱动表未匹配的其他数据也会返回</strong></p></div><h4 id="全外连接-full-outer-join" tabindex="-1"><a class="header-anchor" href="#全外连接-full-outer-join"><span>全外连接 (full outer join)</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student s <span class="token keyword">full</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> course c <span class="token keyword">on</span> s<span class="token punctuation">.</span>course_id<span class="token operator">=</span>c<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果</p><table><thead><tr><th>id</th><th>name</th><th>age</th><th>course_id</th><th>id(1)</th><th>title</th></tr></thead><tbody><tr><td>5</td><td>Clifford Reyes</td><td>10</td><td>1</td><td>1</td><td>Math</td></tr><tr><td>6</td><td>Francisco Cook</td><td>12</td><td>2</td><td>2</td><td>Art</td></tr><tr><td>3</td><td>Connie Murphy</td><td>11</td><td>2</td><td>2</td><td>Art</td></tr><tr><td>8</td><td>Tony Garcia</td><td>12</td><td>3</td><td>3</td><td>Music</td></tr><tr><td>1</td><td>Elaine Morris</td><td>12</td><td>3</td><td>3</td><td>Music</td></tr><tr><td>11</td><td>Glenn Griffin</td><td>12</td><td>4</td><td>4</td><td>Geography</td></tr><tr><td>2</td><td>Beverly Turner</td><td>11</td><td>4</td><td>4</td><td>Geography</td></tr><tr><td></td><td></td><td></td><td></td><td>15</td><td>Sport</td></tr><tr><td>10</td><td>Glenn Adams</td><td>11</td><td>5</td><td></td><td></td></tr><tr><td>4</td><td>Jamie Romero</td><td>12</td><td>5</td><td></td><td></td></tr><tr><td>12</td><td>Justin Rogers</td><td>13</td><td>8</td><td></td><td></td></tr><tr><td>9</td><td>Bobby Burns</td><td>12</td><td>8</td><td></td><td></td></tr><tr><td>7</td><td>Alan Sanchez</td><td>11</td><td>9</td><td></td><td></td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>可以看到不只有满足 <code>s.course_id=c.id</code> 的数据列被返回了，同时未匹配的其他数据也会返回</strong></p></div><div class="hint-container tip"><p class="hint-container-title">查询条件</p><p>在使用连接后支持两种过滤条件：</p><blockquote><p>where</p></blockquote><p>使用 where 子句只会返回满足 where 条件的列</p><blockquote><p>on</p></blockquote><p>使用 on 时，在内连接的查询中 on 和 where 的效果是一致的，在外连接中如<strong>左连接</strong>会返回驱动表不匹配的数据</p></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果有多个表连接如 <code>a inner join b inner join c</code> 首先会执行 <code>a inner join b</code>, 然后将结果再 <code>inner join c</code></p></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>在 <code>join</code> 的时候利用索引可以减少回表次数</p></div>`,37),o=[r];function i(c,l){return e(),n("div",null,o)}const g=d(s,[["render",i],["__file","1-database-basic.html.vue"]]),y=JSON.parse('{"path":"/guide/concepts/database/SQL/1-database-basic.html","title":"基础","lang":"zh-CN","frontmatter":{"order":1,"title":"基础","head":[["meta",{"name":"keywords","content":"数据库, SQL, 基础, 关系型数据库, 非关系型数据库, 关系键, 主键, 超键, 候选键, 外键"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://goguide.ryansu.tech/en/guide/concepts/database/SQL/1-database-basic.html"}],["meta",{"property":"og:url","content":"https://goguide.ryansu.tech/guide/concepts/database/SQL/1-database-basic.html"}],["meta",{"property":"og:site_name","content":"Go 面试宝典"}],["meta",{"property":"og:title","content":"基础"}],["meta",{"property":"og:description","content":"关系键 关系键用于标识数据表中的每一行或者标识与其他表的关系 注意 主键和唯一键的区别： 一张表只能有一个主键，可以有多个唯一键 主键不能为空，唯一键可以为空 例子 假设有两张表 主键： student.id teacher.id 超键: 以 student 表为例: (student.id, student.name),(student.id, st..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://goguide.ryansu.tech/assets/image/article/concept/sql-join.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:22:38.000Z"}],["meta",{"property":"article:author","content":"Go Guide"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:22:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础\\",\\"image\\":[\\"https://goguide.ryansu.tech/assets/image/article/concept/sql-join.png\\"],\\"dateModified\\":\\"2024-04-27T13:22:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Go Guide\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]],"description":"关系键 关系键用于标识数据表中的每一行或者标识与其他表的关系 注意 主键和唯一键的区别： 一张表只能有一个主键，可以有多个唯一键 主键不能为空，唯一键可以为空 例子 假设有两张表 主键： student.id teacher.id 超键: 以 student 表为例: (student.id, student.name),(student.id, st..."},"headers":[{"level":2,"title":"关系键","slug":"关系键","link":"#关系键","children":[]},{"level":2,"title":"表连接","slug":"表连接","link":"#表连接","children":[{"level":3,"title":"表连接示意图","slug":"表连接示意图","link":"#表连接示意图","children":[]},{"level":3,"title":"内连接 （inner Join）","slug":"内连接-inner-join","link":"#内连接-inner-join","children":[]},{"level":3,"title":"外连接 (outer join)","slug":"外连接-outer-join","link":"#外连接-outer-join","children":[{"level":4,"title":"左连接 (left join)","slug":"左连接-left-join","link":"#左连接-left-join","children":[]},{"level":4,"title":"右连接 (right join)","slug":"右连接-right-join","link":"#右连接-right-join","children":[]},{"level":4,"title":"全外连接 (full outer join)","slug":"全外连接-full-outer-join","link":"#全外连接-full-outer-join","children":[]}]}]}],"git":{"createdTime":1706254115000,"updatedTime":1714224158000,"contributors":[{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":2}]},"readingTime":{"minutes":4.31,"words":1292},"filePathRelative":"guide/concepts/database/SQL/1-database-basic.md","localizedDate":"2024年1月26日","autoDesc":true,"excerpt":"<h2>关系键</h2>\\n<p><strong>关系键用于标识数据表中的每一行或者标识与其他表的关系</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>关系键</th>\\n<th>介绍</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>主键 (Primary key - Unique key)</td>\\n<td>主键是数据列中用来唯一标识的字段，不允许为空，一个表只能有一个主键</td>\\n</tr>\\n<tr>\\n<td>超键 (Super key)</td>\\n<td>超键是能唯一标识数据列的所有属性集, 即若任意单个或多个字段如果也能唯一标识数据列，则都属于超键</td>\\n</tr>\\n<tr>\\n<td>候选键 (Candidate key)</td>\\n<td>候选键是超键的子集，候选键是不包含多余字段的超键，候选键中删除任意字段都不属于超键</td>\\n</tr>\\n<tr>\\n<td>外键 (Foreign key)</td>\\n<td>外键用于建立表之间的关系，如 A 表的主键是 B 表的字段，这时候 B 表中的 A 表的主键字段就是外键</td>\\n</tr>\\n</tbody>\\n</table>"}');export{g as comp,y as data};
