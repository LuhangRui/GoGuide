import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c as i,a as n,b as t,d as s,e as c}from"./app-BipP0Ue_.js";const l={},u=n("h2",{id:"ent-介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ent-介绍"},[n("span",null,"Ent 介绍")])],-1),r={class:"hint-container info"},d=n("p",{class:"hint-container-title"},"Ent 中文文档",-1),k={href:"https://ent.ryansu.tech/#/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://entgo.io",target:"_blank",rel:"noopener noreferrer"},h=n("strong",null,"Go",-1),m=c(`<ol><li><strong>以图结构建模数据库模式</strong>。</li><li><strong>将模式定义为 Go 代码</strong>。</li><li><strong>基于代码生成的静态类型</strong>。</li><li><strong>编写数据库查询和图遍历变得简单</strong>。</li><li><strong>使用 Go 模板轻松扩展和自定义</strong>。</li></ol><div class="hint-container tip"><p class="hint-container-title">优缺点</p><p><strong>优点</strong>：</p><ul><li><strong>简单</strong>：Ent通过代码生成生成了大量 API 方便开发者调用查询</li><li><strong>类型安全</strong>：Ent通过代码生成所有类型都是静态类型，且不使用反射，不会出现数据类型无法转换的情况</li><li><strong>易扩展</strong>：Ent 提供了模板功能，使得扩展 API 非常简单</li><li><strong>性能</strong>：Ent 生成的代码不使用反射，有着不错的性能</li><li><strong>支持多种数据库</strong>：Ent 支持多种数据库，如 MySQL、PostgreSQL、SQLite、Gremlin 等</li><li><strong>灵活</strong>: Ent 提供钩子和拦截器，使得构建复杂查询变得简单</li><li><strong>图遍历</strong>: Ent 将数据表之间的关系用图的方式表示，使得图遍历变得非常简单</li></ul><p><strong>缺点</strong>：</p><ul><li><strong>学习成本</strong>：Ent 有一定的学习成本，需要了解 Ent 的设计思想和 API</li><li><strong>占用空间</strong>：Ent 生成的代码比较多，会占用一定的空间，导致构建的二进制文件变大</li></ul></div><h2 id="ent-的使用示例" tabindex="-1"><a class="header-anchor" href="#ent-的使用示例"><span>Ent 的使用示例</span></a></h2><h3 id="创建数据" tabindex="-1"><a class="header-anchor" href="#创建数据"><span>创建数据</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>client<span class="token punctuation">.</span>Dictionary<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">SetTitle</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Title<span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">SetName</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">SetStatus</span><span class="token punctuation">(</span><span class="token function">uint8</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">SetDesc</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Desc<span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据"><span>更新数据</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>Client<span class="token punctuation">.</span>Dictionary<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetStatus</span><span class="token punctuation">(</span><span class="token function">uint8</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据"><span>查询数据</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>data<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span>Dictionary<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>dictionary<span class="token punctuation">.</span>
	<span class="token function">NameContains</span><span class="token punctuation">(</span><span class="token string">&quot;animal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">All</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>

details<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span>Dictionary<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>dictionary<span class="token punctuation">.</span>
	<span class="token function">NameEQ</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">QueryDictionaryDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">All</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据"><span>删除数据</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>client<span class="token punctuation">.</span>Dictionary<span class="token punctuation">.</span><span class="token function">DeleteOneID</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11);function v(f,b){const a=o("ExternalLinkIcon");return p(),i("div",null,[u,n("div",r,[d,n("p",null,[n("a",k,[t("中文文档"),s(a)])])]),n("p",null,[n("a",g,[t("Ent"),s(a)]),t(" 是一个简单而强大的 "),h,t(" 实体框架，它使得构建和维护具有大型数据模型的应用程序变得轻松，并遵循以下原则：")]),m])}const _=e(l,[["render",v],["__file","1-ent.html.vue"]]),x=JSON.parse('{"path":"/guide/library/ORM/1-ent.html","title":"Ent","lang":"zh-CN","frontmatter":{"order":1,"title":"Ent","icon":"material-symbols:database-outline","head":[["meta",{"name":"keywords","content":"golang, ent, orm, 数据库, 数据库模型"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://goguide.ryansu.tech/en/guide/library/ORM/1-ent.html"}],["meta",{"property":"og:url","content":"https://goguide.ryansu.tech/guide/library/ORM/1-ent.html"}],["meta",{"property":"og:site_name","content":"Go 面试宝典"}],["meta",{"property":"og:title","content":"Ent"}],["meta",{"property":"og:description","content":"Ent 介绍 Ent 中文文档 中文文档 Ent 是一个简单而强大的 Go 实体框架，它使得构建和维护具有大型数据模型的应用程序变得轻松，并遵循以下原则： 以图结构建模数据库模式。 将模式定义为 Go 代码。 基于代码生成的静态类型。 编写数据库查询和图遍历变得简单。 使用 Go 模板轻松扩展和自定义。 优缺点 优点： 简单：Ent通过代码生成生成了大..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:22:38.000Z"}],["meta",{"property":"article:author","content":"Go Guide"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:22:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Ent\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-27T13:22:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Go Guide\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]],"description":"Ent 介绍 Ent 中文文档 中文文档 Ent 是一个简单而强大的 Go 实体框架，它使得构建和维护具有大型数据模型的应用程序变得轻松，并遵循以下原则： 以图结构建模数据库模式。 将模式定义为 Go 代码。 基于代码生成的静态类型。 编写数据库查询和图遍历变得简单。 使用 Go 模板轻松扩展和自定义。 优缺点 优点： 简单：Ent通过代码生成生成了大..."},"headers":[{"level":2,"title":"Ent 介绍","slug":"ent-介绍","link":"#ent-介绍","children":[]},{"level":2,"title":"Ent 的使用示例","slug":"ent-的使用示例","link":"#ent-的使用示例","children":[{"level":3,"title":"创建数据","slug":"创建数据","link":"#创建数据","children":[]},{"level":3,"title":"更新数据","slug":"更新数据","link":"#更新数据","children":[]},{"level":3,"title":"查询数据","slug":"查询数据","link":"#查询数据","children":[]},{"level":3,"title":"删除数据","slug":"删除数据","link":"#删除数据","children":[]}]}],"git":{"createdTime":1714180748000,"updatedTime":1714224158000,"contributors":[{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":2}]},"readingTime":{"minutes":1.59,"words":477},"filePathRelative":"guide/library/ORM/1-ent.md","localizedDate":"2024年4月27日","autoDesc":true,"excerpt":"<h2>Ent 介绍</h2>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">Ent 中文文档</p>\\n<p><a href=\\"https://ent.ryansu.tech/#/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">中文文档</a></p>\\n</div>\\n<p><a href=\\"https://entgo.io\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Ent</a> 是一个简单而强大的 <strong>Go</strong> 实体框架，它使得构建和维护具有大型数据模型的应用程序变得轻松，并遵循以下原则：</p>"}');export{_ as comp,x as data};
