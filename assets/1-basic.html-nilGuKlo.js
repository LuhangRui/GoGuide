const e=JSON.parse('{"key":"v-4ba30527","path":"/guide/interview/golang/basic/1-basic.html","title":"基础","lang":"zh-CN","frontmatter":{"order":1,"title":"基础","description":"指针 什么是指针和指针变量? 展开查看 普通变量存储数据，而指针变量存储的是数据的地址。 学习指针，主要有两个运算符号&和`*。; 1. &`：地址运算符，从变量中取地址 2. *：引用运算符，取地址中数据 为什么使用指针？ 展开查看 意义一：容易编码 指针在数据结构中起着重要的作用。通过指针，我们可以创建复杂的数据结构，如链表、树和图。指针可在数据结...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goguide.ryansu.tech/en/guide/interview/golang/basic/1-basic.html"}],["meta",{"property":"og:url","content":"https://goguide.ryansu.tech/guide/interview/golang/basic/1-basic.html"}],["meta",{"property":"og:site_name","content":"Go 面试宝典"}],["meta",{"property":"og:title","content":"基础"}],["meta",{"property":"og:description","content":"指针 什么是指针和指针变量? 展开查看 普通变量存储数据，而指针变量存储的是数据的地址。 学习指针，主要有两个运算符号&和`*。; 1. &`：地址运算符，从变量中取地址 2. *：引用运算符，取地址中数据 为什么使用指针？ 展开查看 意义一：容易编码 指针在数据结构中起着重要的作用。通过指针，我们可以创建复杂的数据结构，如链表、树和图。指针可在数据结..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-21T03:43:56.000Z"}],["meta",{"property":"article:author","content":"Go Guide"}],["meta",{"property":"article:modified_time","content":"2024-01-21T03:43:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T03:43:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Go Guide\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"指针","slug":"指针","link":"#指针","children":[{"level":3,"title":"什么是指针和指针变量?","slug":"什么是指针和指针变量","link":"#什么是指针和指针变量","children":[]},{"level":3,"title":"为什么使用指针？","slug":"为什么使用指针","link":"#为什么使用指针","children":[]},{"level":3,"title":"哪些对象可以获取地址，哪些不行？","slug":"哪些对象可以获取地址-哪些不行","link":"#哪些对象可以获取地址-哪些不行","children":[]}]},{"level":2,"title":"字面量","slug":"字面量","link":"#字面量","children":[{"level":3,"title":"字面量是什么意思？","slug":"字面量是什么意思","link":"#字面量是什么意思","children":[]},{"level":3,"title":"什么是有类型常量和无类型常量？","slug":"什么是有类型常量和无类型常量","link":"#什么是有类型常量和无类型常量","children":[]},{"level":3,"title":"不同字面量可能同值吗？","slug":"不同字面量可能同值吗","link":"#不同字面量可能同值吗","children":[]},{"level":3,"title":"字面量和变量的区别是什么？","slug":"字面量和变量的区别是什么","link":"#字面量和变量的区别是什么","children":[]},{"level":3,"title":"什么是组合字面量？","slug":"什么是组合字面量","link":"#什么是组合字面量","children":[]}]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"Go 中的 rune 和 byte 有什么区别？","slug":"go-中的-rune-和-byte-有什么区别","link":"#go-中的-rune-和-byte-有什么区别","children":[]},{"level":3,"title":"Golang中的深拷贝和浅拷贝是什么？","slug":"golang中的深拷贝和浅拷贝是什么","link":"#golang中的深拷贝和浅拷贝是什么","children":[]},{"level":3,"title":"make 和 new 有什么区别？","slug":"make-和-new-有什么区别","link":"#make-和-new-有什么区别","children":[]},{"level":3,"title":"数组和切片有什么区别？","slug":"数组和切片有什么区别","link":"#数组和切片有什么区别","children":[]},{"level":3,"title":"如果 for range 同时添加数据， for range 会无限执行吗？","slug":"如果-for-range-同时添加数据-for-range-会无限执行吗","link":"#如果-for-range-同时添加数据-for-range-会无限执行吗","children":[]},{"level":3,"title":"多个 defer 的执行顺序是什么？","slug":"多个-defer-的执行顺序是什么","link":"#多个-defer-的执行顺序是什么","children":[]},{"level":3,"title":"什么是数据溢出？","slug":"什么是数据溢出","link":"#什么是数据溢出","children":[]},{"level":3,"title":"函数参数使用值还是指针？","slug":"函数参数使用值还是指针","link":"#函数参数使用值还是指针","children":[]}]},{"level":2,"title":"Map","slug":"map","link":"#map","children":[{"level":3,"title":"未初始化的 Map 可以读取 key 吗？","slug":"未初始化的-map-可以读取-key-吗","link":"#未初始化的-map-可以读取-key-吗","children":[]},{"level":3,"title":"如果对未初始化的 Map 赋值会怎么样？","slug":"如果对未初始化的-map-赋值会怎么样","link":"#如果对未初始化的-map-赋值会怎么样","children":[]},{"level":3,"title":"如果对未初始化的 Map 进行删除 key 的操作会发生什么？","slug":"如果对未初始化的-map-进行删除-key-的操作会发生什么","link":"#如果对未初始化的-map-进行删除-key-的操作会发生什么","children":[]}]}],"git":{"createdTime":1705370780000,"updatedTime":1705808636000,"contributors":[{"name":"qingyansu","email":"qingyansu@qq.com","commits":5},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":4}]},"readingTime":{"minutes":9.84,"words":2952},"filePathRelative":"guide/interview/golang/basic/1-basic.md","localizedDate":"2024年1月16日","autoDesc":true,"excerpt":""}');export{e as data};
