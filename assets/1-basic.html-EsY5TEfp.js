const e=JSON.parse('{"key":"v-d57bd0da","path":"/en/guide/interview/golang/basic/1-basic.html","title":"Basic","lang":"en-US","frontmatter":{"order":1,"title":"Basic","description":"Pointer What is a pointer and a pointer variable? Click to expand Ordinary variables store data, while pointer variables store the address of the data. Learning about pointers m...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goguide.ryansu.tech/guide/interview/golang/basic/1-basic.html"}],["meta",{"property":"og:url","content":"https://goguide.ryansu.tech/en/guide/interview/golang/basic/1-basic.html"}],["meta",{"property":"og:site_name","content":"Go Guide"}],["meta",{"property":"og:title","content":"Basic"}],["meta",{"property":"og:description","content":"Pointer What is a pointer and a pointer variable? Click to expand Ordinary variables store data, while pointer variables store the address of the data. Learning about pointers m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-16T02:39:21.000Z"}],["meta",{"property":"article:author","content":"Go Guide"}],["meta",{"property":"article:modified_time","content":"2024-01-16T02:39:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Basic\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-16T02:39:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Go Guide\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"Pointer","slug":"pointer","link":"#pointer","children":[{"level":3,"title":"What is a pointer and a pointer variable?","slug":"what-is-a-pointer-and-a-pointer-variable","link":"#what-is-a-pointer-and-a-pointer-variable","children":[]},{"level":3,"title":"Why use pointers?","slug":"why-use-pointers","link":"#why-use-pointers","children":[]},{"level":3,"title":"How to use object selectors for automatic dereferencing?","slug":"how-to-use-object-selectors-for-automatic-dereferencing","link":"#how-to-use-object-selectors-for-automatic-dereferencing","children":[]}]},{"level":2,"title":"Literal","slug":"literal","link":"#literal","children":[{"level":3,"title":"What does literal mean?","slug":"what-does-literal-mean","link":"#what-does-literal-mean","children":[]},{"level":3,"title":"Can different literals have the same value?","slug":"can-different-literals-have-the-same-value","link":"#can-different-literals-have-the-same-value","children":[]},{"level":3,"title":"What is the difference between a literal and a variable?","slug":"what-is-the-difference-between-a-literal-and-a-variable","link":"#what-is-the-difference-between-a-literal-and-a-variable","children":[]},{"level":3,"title":"What is a composite literal?","slug":"what-is-a-composite-literal","link":"#what-is-a-composite-literal","children":[]}]},{"level":2,"title":"Others","slug":"others","link":"#others","children":[{"level":3,"title":"What is the difference between rune and byte in Go?","slug":"what-is-the-difference-between-rune-and-byte-in-go","link":"#what-is-the-difference-between-rune-and-byte-in-go","children":[]}]}],"git":{"createdTime":1705370780000,"updatedTime":1705372761000,"contributors":[{"name":"qingyansu","email":"qingyansu@qq.com","commits":2},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":1}]},"readingTime":{"minutes":3.94,"words":1183},"filePathRelative":"en/guide/interview/golang/basic/1-basic.md","localizedDate":"January 16, 2024","autoDesc":true}');export{e as data};
