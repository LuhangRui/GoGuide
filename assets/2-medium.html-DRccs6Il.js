import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as d,o as c,c as n,a as e,b as r,f as s,d as t}from"./app-aQj_lELc.js";const i={},l=t('<h3 id="使用过-context-吗-context-有哪些使用场景" tabindex="-1"><a class="header-anchor" href="#使用过-context-吗-context-有哪些使用场景" aria-hidden="true">#</a> 使用过 <code>context</code> 吗？ <code>context</code> 有哪些使用场景？</h3><details><summary>展开查看</summary><table><thead><tr><th>场景</th><th>介绍</th></tr></thead><tbody><tr><td>超时处理</td><td>通过使用 <code>context</code> 可以方便地设置超时时间，在超时后自动终止协程</td></tr><tr><td>终止协程</td><td>通过使用 <code>cancel()</code> 方法，协程可以很方便地终止</td></tr><tr><td>传递数据</td><td>我们可以将数据写入 <code>context</code>, 在不同协程间传递数据</td></tr></tbody></table></details><h3 id="channel-是线程安全的吗" tabindex="-1"><a class="header-anchor" href="#channel-是线程安全的吗" aria-hidden="true">#</a> channel 是线程安全的吗？</h3><details><summary>展开查看</summary><p><code>channel</code> 是线程安全的，原因是 channel 内部实现了锁的机制，</p></details><h3 id="map-使用-range-遍历时是有序还是无序的" tabindex="-1"><a class="header-anchor" href="#map-使用-range-遍历时是有序还是无序的" aria-hidden="true">#</a> Map 使用 range 遍历时是有序还是无序的？</h3><details><summary>展开查看</summary><p><strong>无序的</strong></p><p>Map 在内部使用哈希算法放置元素，在自动扩容时又会重新计算哈希值，因此元素的地址会不断变化，官方为了避免用户认为 Map 元素排列是有序的，直接采用随机顺序返回，所以遍历是无序的。</p></details><h3 id="map-并发安全吗" tabindex="-1"><a class="header-anchor" href="#map-并发安全吗" aria-hidden="true">#</a> Map 并发安全吗？</h3><details><summary>展开查看</summary><p><strong>Map不能保证并发安全</strong></p><p>要保证并发安全，使用以下方式：</p><ul><li>手动加读写锁</li><li>使用 <code>sync.Map</code></li></ul></details><h3 id="map-的-key-删除后-key-的内存会被释放吗" tabindex="-1"><a class="header-anchor" href="#map-的-key-删除后-key-的内存会被释放吗" aria-hidden="true">#</a> Map 的 key 删除后 key 的内存会被释放吗？</h3>',9),h=t("<summary>展开查看</summary><p>若 map 的 value 为</p><ul><li><strong>值类型</strong> (<code>int</code> <code>uint</code> <code>float32</code> <code>string</code> <code>struct{}</code>...), 则 key 被删除后 value 不会被内存回收</li><li><strong>引用类型</strong> (<code>map</code> <code>slices</code> <code>chan</code> ...), 则 key 被删除后 value 会被内存回收</li></ul><blockquote><p>如果我们想强制回收，如何操作？</p></blockquote><ul><li>将 map 设置为 nil</li><li>将 map 需要保留的值放置到一个新的 map 并赋值给当前的 map</li></ul>",5),m={class:"hint-container tip"},p=e("p",{class:"hint-container-title"},"会员专属",-1),u={href:"https://articles.zsxq.com/id_4w1a11i6xrw0.html",target:"_blank",rel:"noopener noreferrer"};function _(x,y){const a=d("ExternalLinkIcon");return c(),n("div",null,[l,e("details",null,[h,e("div",m,[p,e("p",null,[e("a",u,[r("代码实战解析"),s(a)])])])])])}const b=o(i,[["render",_],["__file","2-medium.html.vue"]]);export{b as default};
