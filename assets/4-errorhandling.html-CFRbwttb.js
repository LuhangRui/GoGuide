import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as n,d as i}from"./app-CeGilRH-.js";const r={},l=i(`<h2 id="接口" tabindex="-1"><a class="header-anchor" href="#接口"><span>接口</span></a></h2><p>golang 提供了 <code>error</code> 类型的接口</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">type</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> error</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> interface</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">    Error</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() </span><span style="color:#D73A49;--shiki-dark:#C678DD;">string</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只要结构体实现了 <code>Error()</code> 方法就属于 <code>error</code> 类型</p><h2 id="创建错误" tabindex="-1"><a class="header-anchor" href="#创建错误"><span>创建错误</span></a></h2><p>golang 提供了多种创建 <code>error</code> 的方法</p><p>我们可以使用 <code>errors.New()</code> <code>fmt.Errorf()</code> 来创建错误</p><details class="hint-container details"><summary>例子</summary><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">package</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="color:#6F42C1;--shiki-dark:#98C379;">errors</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="color:#6F42C1;--shiki-dark:#98C379;">fmt</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    // 使用 New 创建错误</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err1</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> errors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">New</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;first error&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    // 使用 fmt 创建错误</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err2</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Errorf</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;second </span><span style="color:#005CC5;--shiki-dark:#D19A66;">%s</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;error&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Println</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">err2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="errors-join" tabindex="-1"><a class="header-anchor" href="#errors-join"><span>errors.Join</span></a></h2><p>在 go 1.20 提供了 <code>errors.Join</code> 方法将多个 <code>error</code> 组合成一个数组</p><details class="hint-container details"><summary>例子</summary><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">package</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="color:#6F42C1;--shiki-dark:#98C379;">errors</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="color:#6F42C1;--shiki-dark:#98C379;">fmt</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 使用 New 创建错误</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err1</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> errors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">New</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;first error&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 使用 fmt 创建错误</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err2</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Errorf</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;second </span><span style="color:#005CC5;--shiki-dark:#D19A66;">%s</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;error&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 使用 join 将多个 error 合并</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err3</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> errors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Join</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">err2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Println</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">err2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 结果: first error second error</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Println</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 结果： </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// first error</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// second error</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="errors-is" tabindex="-1"><a class="header-anchor" href="#errors-is"><span>errors.Is</span></a></h2><p>使用 <code>errors.Is()</code> 方法可以判断当前 <code>error</code> 是否包含目标类型的 <code>error</code></p><details class="hint-container details"><summary>例子</summary><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">package</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="color:#6F42C1;--shiki-dark:#98C379;">errors</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="color:#6F42C1;--shiki-dark:#98C379;">fmt</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 使用 New 创建错误</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err1</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> errors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">New</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;first error&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 使用 fmt 创建错误</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err2</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Errorf</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;second </span><span style="color:#005CC5;--shiki-dark:#D19A66;">%s</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;error&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 使用 join 将多个 error 合并</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err3</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> errors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Join</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">err2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Println</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">err2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 结果: first error second error</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Println</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 结果： </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// first error</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// second error</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 使用 errors.Is() 判断错误是否是目标错误， err3 包含 err1 所以为 true</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Println</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">errors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Is</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">err2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 结果: false</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Println</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">errors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Is</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">err1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 结果： true</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="errors-as" tabindex="-1"><a class="header-anchor" href="#errors-as"><span>errors.As</span></a></h2><p>使用 <code>errors.As()</code> 方法可以将 error 中第一个符合目标类型的错误赋值到目标对象</p><details class="hint-container details"><summary>例子</summary><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">package</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="color:#6F42C1;--shiki-dark:#98C379;">errors</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="color:#6F42C1;--shiki-dark:#98C379;">fmt</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">type</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> NormalErr</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> struct</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	e</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> string</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">func</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">t </span><span style="color:#6F42C1;--shiki-dark:#E5C07B;">NormalErr</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Error</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() </span><span style="color:#D73A49;--shiki-dark:#C678DD;">string</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">	return</span><span style="color:#24292E;--shiki-dark:#E06C75;"> t</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E06C75;">e</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">func</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 使用 New 创建错误</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err1</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> errors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">New</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;first error&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 创建 T</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err2</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> NormalErr</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">{</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;second error&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 使用 join 将多个 error 合并</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	err3</span><span style="color:#D73A49;--shiki-dark:#E5C07B;"> :=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> errors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Join</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E06C75;">err2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">	var</span><span style="color:#24292E;--shiki-dark:#E06C75;"> err4</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> NormalErr</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	errors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">As</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err3</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">&amp;</span><span style="color:#24292E;--shiki-dark:#E06C75;">err4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">	fmt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">Println</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">err4</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">	// 结果： second error</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,17),e=[l];function o(p,t){return n(),a("div",null,e)}const k=s(r,[["render",o],["__file","4-errorhandling.html.vue"]]),h=JSON.parse('{"path":"/guide/concepts/golang/4-errorhandling.html","title":"错误处理","lang":"zh-CN","frontmatter":{"order":4,"title":"错误处理","icon":"line-md:star-filled","head":[["meta",{"name":"keywords","content":"错误处理, golang, error"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://goguide.ryansu.tech/en/guide/concepts/golang/4-errorhandling.html"}],["meta",{"property":"og:url","content":"https://goguide.ryansu.tech/guide/concepts/golang/4-errorhandling.html"}],["meta",{"property":"og:site_name","content":"Go 面试宝典"}],["meta",{"property":"og:title","content":"错误处理"}],["meta",{"property":"og:description","content":"接口 golang 提供了 error 类型的接口 只要结构体实现了 Error() 方法就属于 error 类型 创建错误 golang 提供了多种创建 error 的方法 我们可以使用 errors.New() fmt.Errorf() 来创建错误 例子 errors.Join 在 go 1.20 提供了 errors.Join 方法将多个 err..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-28T02:45:37.000Z"}],["meta",{"property":"article:author","content":"Go Guide"}],["meta",{"property":"article:modified_time","content":"2024-04-28T02:45:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"错误处理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-28T02:45:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Go Guide\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]],"description":"接口 golang 提供了 error 类型的接口 只要结构体实现了 Error() 方法就属于 error 类型 创建错误 golang 提供了多种创建 error 的方法 我们可以使用 errors.New() fmt.Errorf() 来创建错误 例子 errors.Join 在 go 1.20 提供了 errors.Join 方法将多个 err..."},"headers":[{"level":2,"title":"接口","slug":"接口","link":"#接口","children":[]},{"level":2,"title":"创建错误","slug":"创建错误","link":"#创建错误","children":[]},{"level":2,"title":"errors.Join","slug":"errors-join","link":"#errors-join","children":[]},{"level":2,"title":"errors.Is","slug":"errors-is","link":"#errors-is","children":[]},{"level":2,"title":"errors.As","slug":"errors-as","link":"#errors-as","children":[]}],"git":{"createdTime":1705481186000,"updatedTime":1714272337000,"contributors":[{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":4}]},"readingTime":{"minutes":1.5,"words":451},"filePathRelative":"guide/concepts/golang/4-errorhandling.md","localizedDate":"2024年1月17日","autoDesc":true,"excerpt":"<h2>接口</h2>\\n<p>golang 提供了 <code>error</code> 类型的接口</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\" style=\\"background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">type</span><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\"> error</span><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\"> interface</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">    Error</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">() </span><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">string</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{k as comp,h as data};
