const e=JSON.parse(`{"key":"v-d57bd0da","path":"/en/guide/interview/golang/basic/1-basic.html","title":"Basic","lang":"en-US","frontmatter":{"order":1,"title":"Basic","description":"Pointer What is a pointer and a pointer variable? Click to expand Ordinary variables store data, while pointer variables store the address of the data. Learning about pointers m...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goguide.ryansu.tech/guide/interview/golang/basic/1-basic.html"}],["meta",{"property":"og:url","content":"https://goguide.ryansu.tech/en/guide/interview/golang/basic/1-basic.html"}],["meta",{"property":"og:site_name","content":"Go Guide"}],["meta",{"property":"og:title","content":"Basic"}],["meta",{"property":"og:description","content":"Pointer What is a pointer and a pointer variable? Click to expand Ordinary variables store data, while pointer variables store the address of the data. Learning about pointers m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-24T03:07:10.000Z"}],["meta",{"property":"article:author","content":"Go Guide"}],["meta",{"property":"article:modified_time","content":"2024-01-24T03:07:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Basic\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-24T03:07:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Go Guide\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"Pointer","slug":"pointer","link":"#pointer","children":[{"level":3,"title":"What is a pointer and a pointer variable?","slug":"what-is-a-pointer-and-a-pointer-variable","link":"#what-is-a-pointer-and-a-pointer-variable","children":[]},{"level":3,"title":"Why use pointers?","slug":"why-use-pointers","link":"#why-use-pointers","children":[]},{"level":3,"title":"Which objects can be addressed and which cannot?","slug":"which-objects-can-be-addressed-and-which-cannot","link":"#which-objects-can-be-addressed-and-which-cannot","children":[]}]},{"level":2,"title":"Literal","slug":"literal","link":"#literal","children":[{"level":3,"title":"What does literal mean?","slug":"what-does-literal-mean","link":"#what-does-literal-mean","children":[]},{"level":3,"title":"Can different literals have the same value?","slug":"can-different-literals-have-the-same-value","link":"#can-different-literals-have-the-same-value","children":[]},{"level":3,"title":"What is the difference between a literal and a variable?","slug":"what-is-the-difference-between-a-literal-and-a-variable","link":"#what-is-the-difference-between-a-literal-and-a-variable","children":[]},{"level":3,"title":"What is a composite literal?","slug":"what-is-a-composite-literal","link":"#what-is-a-composite-literal","children":[]}]},{"level":2,"title":"Others","slug":"others","link":"#others","children":[{"level":3,"title":"What is the difference between rune and byte in Go?","slug":"what-is-the-difference-between-rune-and-byte-in-go","link":"#what-is-the-difference-between-rune-and-byte-in-go","children":[{"level":4,"title":"Different types:","slug":"different-types","link":"#different-types","children":[]},{"level":4,"title":"Different stored characters:","slug":"different-stored-characters","link":"#different-stored-characters","children":[]},{"level":4,"title":"Different byte sizes occupied: byte occupies 1 byte, rune occupies 4 bytes.","slug":"different-byte-sizes-occupied-byte-occupies-1-byte-rune-occupies-4-bytes","link":"#different-byte-sizes-occupied-byte-occupies-1-byte-rune-occupies-4-bytes","children":[]},{"level":4,"title":"Different character ranges represented:","slug":"different-character-ranges-represented","link":"#different-character-ranges-represented","children":[]}]},{"level":3,"title":"What are deep copy and shallow copy in golang?","slug":"what-are-deep-copy-and-shallow-copy-in-golang","link":"#what-are-deep-copy-and-shallow-copy-in-golang","children":[]},{"level":3,"title":"What's the difference between make and new?","slug":"what-s-the-difference-between-make-and-new","link":"#what-s-the-difference-between-make-and-new","children":[]},{"level":3,"title":"What's the difference between arrays and slices?","slug":"what-s-the-difference-between-arrays-and-slices","link":"#what-s-the-difference-between-arrays-and-slices","children":[]},{"level":3,"title":"If for range adds data at the same time, will for range execute indefinitely?","slug":"if-for-range-adds-data-at-the-same-time-will-for-range-execute-indefinitely","link":"#if-for-range-adds-data-at-the-same-time-will-for-range-execute-indefinitely","children":[]},{"level":3,"title":"What is the execution order of multiple defers?","slug":"what-is-the-execution-order-of-multiple-defers","link":"#what-is-the-execution-order-of-multiple-defers","children":[]},{"level":3,"title":"What is data overflow?","slug":"what-is-data-overflow","link":"#what-is-data-overflow","children":[]},{"level":3,"title":"Should function parameters use value or pointer?","slug":"should-function-parameters-use-value-or-pointer","link":"#should-function-parameters-use-value-or-pointer","children":[]}]},{"level":2,"title":"Map","slug":"map","link":"#map","children":[{"level":3,"title":"Can an uninitialized Map read a key?","slug":"can-an-uninitialized-map-read-a-key","link":"#can-an-uninitialized-map-read-a-key","children":[]},{"level":3,"title":"What happens if you assign a value to an uninitialized Map?","slug":"what-happens-if-you-assign-a-value-to-an-uninitialized-map","link":"#what-happens-if-you-assign-a-value-to-an-uninitialized-map","children":[]},{"level":3,"title":"What happens if you delete a key from an uninitialized Map?","slug":"what-happens-if-you-delete-a-key-from-an-uninitialized-map","link":"#what-happens-if-you-delete-a-key-from-an-uninitialized-map","children":[]}]}],"git":{"createdTime":1705370780000,"updatedTime":1706065630000,"contributors":[{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":5},{"name":"qingyansu","email":"qingyansu@qq.com","commits":2}]},"readingTime":{"minutes":6.94,"words":2081},"filePathRelative":"en/guide/interview/golang/basic/1-basic.md","localizedDate":"January 16, 2024","autoDesc":true,"excerpt":""}`);export{e as data};
