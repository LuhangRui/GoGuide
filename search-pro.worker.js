const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/en/\":{\"documentCount\":303,\"nextId\":303,\"documentIds\":{\"0\":\"3\",\"1\":\"3#introduction\",\"2\":\"5\",\"3\":\"5#basic-guidelines\",\"4\":\"5#limit-line-length\",\"5\":\"5#group-related-declarations-avoid-unrelated-ones\",\"6\":\"5#single-variable-declarations\",\"7\":\"5#import-grouping\",\"8\":\"5#import-aliases\",\"9\":\"5#package-names\",\"10\":\"5#function-names\",\"11\":\"5#function-ordering\",\"12\":\"5#reduce-nesting\",\"13\":\"5#minimize-unnecessary-else-blocks\",\"14\":\"5#top-level-variable-declarations\",\"15\":\"5#use-as-a-prefix-for-unexported-top-level-constants-and-variables\",\"16\":\"5#separate-embedded-types-in-structs-with-an-empty-line\",\"17\":\"5#nil-is-a-valid-slice\",\"18\":\"5#reduce-variable-scope\",\"19\":\"5#use-raw-strings-instead-of-escaped-strings\",\"20\":\"5#struct-initialization\",\"21\":\"5#initialize-structs-using-field-names\",\"22\":\"5#omit-fields-with-zero-values\",\"23\":\"5#if-initializing-a-struct-variable-with-all-zero-values-use-var\",\"24\":\"5#initialize-struct-pointers\",\"25\":\"5#use-make-to-initialize-maps\",\"26\":\"5#if-defining-a-format-string-outside-printf-use-const\",\"27\":\"5#development-principles\",\"28\":\"5#error-handling\",\"29\":\"5#types-of-errors\",\"30\":\"5#error-wrapping\",\"31\":\"5#error-naming\",\"32\":\"5#sequential-error-handling\",\"33\":\"5#type-assertions\",\"34\":\"5#minimize-the-use-of-panic\",\"35\":\"5#use-atomic-operations\",\"36\":\"5#avoid-embedding-types-in-public-structures\",\"37\":\"5#avoid-using-built-in-names\",\"38\":\"5#avoid-using-init-functions\",\"39\":\"5#preallocate-slice-capacity\",\"40\":\"5#exiting-the-main-program-using-exit-or-fatal\",\"41\":\"5#declaring-tags-in-serialized-structs\",\"42\":\"5#pay-attention-to-goroutine-usage\",\"43\":\"5#waiting-for-goroutines-to-exit\",\"44\":\"5#avoid-using-goroutines-in-init\",\"45\":\"5#performance-optimization\",\"46\":\"5#prefer-strconv-over-fmt\",\"47\":\"5#specify-map-and-slice-capacities\",\"48\":\"30\",\"49\":\"30#keywords\",\"50\":\"30#declaration-types\",\"51\":\"30#const\",\"52\":\"30#func\",\"53\":\"30#import\",\"54\":\"30#package\",\"55\":\"30#type\",\"56\":\"30#var\",\"57\":\"30#composite-types\",\"58\":\"30#chan\",\"59\":\"30#interface\",\"60\":\"30#map\",\"61\":\"30#struct\",\"62\":\"30#control-flow\",\"63\":\"30#if-else\",\"64\":\"30#switch-fallthrough\",\"65\":\"30#for-break-continue-range\",\"66\":\"30#goto\",\"67\":\"30#select\",\"68\":\"30#function-modifiers\",\"69\":\"30#defer\",\"70\":\"30#go\",\"71\":\"31\",\"72\":\"31#integers-int\",\"73\":\"31#floating-point-numbers-float\",\"74\":\"31#complex-numbers-complex\",\"75\":\"31#strings-string\",\"76\":\"31#booleans-bool\",\"77\":\"31#arrays-array\",\"78\":\"31#slices-slices\",\"79\":\"31#map-map\",\"80\":\"31#structures-struct\",\"81\":\"31#pointers-pointer\",\"82\":\"31#zero-value-table\",\"83\":\"32\",\"84\":\"32#arithmetic-operators\",\"85\":\"32#relational-operators\",\"86\":\"32#logical-operators\",\"87\":\"32#bitwise-operators\",\"88\":\"32#assignment-operators\",\"89\":\"32#other-symbols\",\"90\":\"32#symbol-precedence\",\"91\":\"33\",\"92\":\"33#interface\",\"93\":\"33#creating-errors\",\"94\":\"33#errors-join\",\"95\":\"33#errors-is\",\"96\":\"33#errors-as\",\"97\":\"34\",\"98\":\"34#creating-a-map\",\"99\":\"34#traversing-a-map\",\"100\":\"34#deleting-key-value-pairs\",\"101\":\"34#check-if-a-key-exists\",\"102\":\"34#get-the-length-of-a-map\",\"103\":\"34#concurrency\",\"104\":\"35\",\"105\":\"35#creating-slices\",\"106\":\"35#slicing-slices\",\"107\":\"35#length-and-capacity\",\"108\":\"35#appending-data\",\"109\":\"35#cloning-slices\",\"110\":\"36\",\"111\":\"36#introduction\",\"112\":\"36#creating-a-channel\",\"113\":\"36#sending-and-receiving-data\",\"114\":\"36#closing-a-channel\",\"115\":\"36#select\",\"116\":\"36#example\",\"117\":\"36#precautions\",\"118\":\"37\",\"119\":\"37#introduction\",\"120\":\"37#context-interface\",\"121\":\"37#root-nodes-and-derived-nodes\",\"122\":\"37#creating-root-nodes\",\"123\":\"37#creating-derived-nodes\",\"124\":\"37#withvalue\",\"125\":\"37#withdeadline-withtimeout\",\"126\":\"37#withcancel\",\"127\":\"38\",\"128\":\"38#osi-seven-layer-model\",\"129\":\"38#tcp-and-ip-model\",\"130\":\"38#http\",\"131\":\"38#request-methods\",\"132\":\"38#http-status-codes\",\"133\":\"38#https-vs-http\",\"134\":\"38#working-principle\",\"135\":\"38#http-1-0-vs-1-1-vs-2-0\",\"136\":\"38#digital-certificate\",\"137\":\"38#how-digital-signature-works\",\"138\":\"39\",\"139\":\"39#ip\",\"140\":\"39#ipv4-structure\",\"141\":\"39#fragmentation\",\"142\":\"39#reassembly\",\"143\":\"39#ipv6\",\"144\":\"39#what-is-ip-spoofing\",\"145\":\"40\",\"146\":\"40#tcp\",\"147\":\"40#tcp-header-structure\",\"148\":\"40#tcp-state-machine\",\"149\":\"40#tcp-three-way-handshake\",\"150\":\"40#how-does-tcp-ensure-the-reliability-of-transmission\",\"151\":\"40#sequence-numbers-and-acknowledgment-signals\",\"152\":\"40#timeout-retransmission\",\"153\":\"40#flow-control\",\"154\":\"40#congestion-control\",\"155\":\"40#slow-start\",\"156\":\"40#congestion-avoidance\",\"157\":\"40#fast-retransmit-and-fast-recovery\",\"158\":\"40#checksum\",\"159\":\"40#udp\",\"160\":\"40#characteristics\",\"161\":\"40#structure\",\"162\":\"40#broadcast-types\",\"163\":\"40#common-tcp-udp-attacks\",\"164\":\"41\",\"165\":\"41#introduction\",\"166\":\"41#dns-resolution-process\",\"167\":\"41#dns-record-types\",\"168\":\"41#common-dns-attacks\",\"169\":\"42\",\"170\":\"42#introduction\",\"171\":\"42#arp-packet\",\"172\":\"42#working-principle\",\"173\":\"42#common-arp-attack-methods\",\"174\":\"43\",\"175\":\"43#introduction\",\"176\":\"43#working-principle\",\"177\":\"43#advantages-of-nat\",\"178\":\"43#disadvantages-of-nat\",\"179\":\"44\",\"180\":\"44#introduction-to-docker\",\"181\":\"44#why-use-docker\",\"182\":\"44#common-docker-commands\",\"183\":\"45\",\"184\":\"45#commonly-used-git-commands\",\"185\":\"45#steps-for-committing-code\",\"186\":\"46\",\"187\":\"46#goland\",\"188\":\"46#recommended-plugins\",\"189\":\"46#quick-dependency-update\",\"190\":\"47\",\"191\":\"47#vscode\",\"192\":\"47#recommended-plugins\",\"193\":\"47#launch-json-configuration-guide\",\"194\":\"47#configuration-fields\",\"195\":\"48\",\"196\":\"48#introduction\",\"197\":\"48#example-of-using-gin\",\"198\":\"48#creating-a-simple-web-service\",\"199\":\"49\",\"200\":\"49#introduction\",\"201\":\"49#using-go-zero\",\"202\":\"49#installing-goctl\",\"203\":\"49#creating-a-simple-microservice\",\"204\":\"50\",\"205\":\"50#introduction\",\"206\":\"50#using-kratos\",\"207\":\"50#installing-kratos\",\"208\":\"50#creating-a-simple-microservice\",\"209\":\"51\",\"210\":\"51#introduction-to-ent\",\"211\":\"51#examples-of-using-ent\",\"212\":\"51#creating-data\",\"213\":\"51#updating-data\",\"214\":\"51#querying-data\",\"215\":\"51#deleting-data\",\"216\":\"52\",\"217\":\"52#introduction-to-gorm\",\"218\":\"52#examples-of-using-gorm\",\"219\":\"52#creating-data\",\"220\":\"52#updating-data\",\"221\":\"52#querying-data\",\"222\":\"52#deleting-data\",\"223\":\"53\",\"224\":\"53#introduction\",\"225\":\"53#main-features\",\"226\":\"53#example\",\"227\":\"60\",\"228\":\"60#relationship-keys\",\"229\":\"60#table-join\",\"230\":\"60#table-join-diagram\",\"231\":\"60#course\",\"232\":\"60#student\",\"233\":\"60#inner-join\",\"234\":\"60#outer-join\",\"235\":\"60#left-join\",\"236\":\"60#right-join\",\"237\":\"60#full-outer-join\",\"238\":\"61\",\"239\":\"61#select-statement\",\"240\":\"61#return-all-fields\",\"241\":\"61#return-specific-fields\",\"242\":\"61#remove-duplicates\",\"243\":\"61#order-by-statement\",\"244\":\"61#limit-statement\",\"245\":\"61#where-clause\",\"246\":\"61#and-or-not\",\"247\":\"61#group-by-statement\",\"248\":\"61#exists-statement\",\"249\":\"61#common-aggregate-functions\",\"250\":\"62\",\"251\":\"62#index-types\",\"252\":\"62#logical-function-division\",\"253\":\"62#ordinary-index\",\"254\":\"62#unique-index\",\"255\":\"62#primary-key-index\",\"256\":\"62#full-text-index\",\"257\":\"62#physical-division\",\"258\":\"62#clustered-index\",\"259\":\"62#non-clustered-index\",\"260\":\"62#field-number-division\",\"261\":\"62#single-column-index\",\"262\":\"62#composite-index\",\"263\":\"62#principles-for-creating-indexes\",\"264\":\"62#index-pushdown\",\"265\":\"62#data-structure-of-indexes\",\"266\":\"62#b-tree\",\"267\":\"62#b-tree-1\",\"268\":\"63\",\"269\":\"63#isolation-levels\",\"270\":\"64\",\"271\":\"64#pointer\",\"272\":\"64#what-is-a-pointer-and-a-pointer-variable\",\"273\":\"64#why-use-pointers\",\"274\":\"64#which-objects-can-be-addressed-and-which-cannot\",\"275\":\"64#literal\",\"276\":\"64#what-does-literal-mean\",\"277\":\"64#can-different-literals-have-the-same-value\",\"278\":\"64#what-is-the-difference-between-a-literal-and-a-variable\",\"279\":\"64#what-is-a-composite-literal\",\"280\":\"64#others\",\"281\":\"64#what-is-the-difference-between-rune-and-byte-in-go\",\"282\":\"64#different-types\",\"283\":\"64#different-stored-characters\",\"284\":\"64#different-byte-sizes-occupied-byte-occupies-1-byte-rune-occupies-4-bytes\",\"285\":\"64#different-character-ranges-represented\",\"286\":\"64#what-are-deep-copy-and-shallow-copy-in-golang\",\"287\":\"64#what-s-the-difference-between-make-and-new\",\"288\":\"64#what-s-the-difference-between-arrays-and-slices\",\"289\":\"64#if-for-range-adds-data-at-the-same-time-will-for-range-execute-indefinitely\",\"290\":\"64#what-is-the-execution-order-of-multiple-defers\",\"291\":\"64#what-is-data-overflow\",\"292\":\"64#should-function-parameters-use-value-or-pointer\",\"293\":\"64#map\",\"294\":\"64#can-an-uninitialized-map-read-a-key\",\"295\":\"64#what-happens-if-you-assign-a-value-to-an-uninitialized-map\",\"296\":\"64#what-happens-if-you-delete-a-key-from-an-uninitialized-map\",\"297\":\"65\",\"298\":\"65#have-you-used-context-what-are-the-use-cases-for-context\",\"299\":\"65#is-channel-thread-safe\",\"300\":\"65#is-the-traversal-of-a-map-using-range-ordered-or-unordered\",\"301\":\"65#is-map-concurrency-safe\",\"302\":\"65#will-the-memory-of-a-key-be-released-after-the-key-is-deleted-from-the-map\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,71],\"2\":[3,9],\"3\":[2],\"4\":[3,20],\"5\":[6,77],\"6\":[3,32],\"7\":[2,56],\"8\":[2,48],\"9\":[2,57],\"10\":[2,26],\"11\":[2,53],\"12\":[2,44],\"13\":[3,12],\"14\":[4,40],\"15\":[11,11],\"16\":[9,138],\"17\":[4,58],\"18\":[3,41],\"19\":[6,32],\"20\":[2],\"21\":[5,30],\"22\":[5,27],\"23\":[10,7],\"24\":[3,19],\"25\":[4,41],\"26\":[8,38],\"27\":[2],\"28\":[2],\"29\":[3,73],\"30\":[2,55],\"31\":[2,77],\"32\":[3,130],\"33\":[2,28],\"34\":[4,25],\"35\":[3,66],\"36\":[6,63],\"37\":[5,49],\"38\":[3,60],\"39\":[3,46],\"40\":[6,86],\"41\":[5,44],\"42\":[5,77],\"43\":[5,68],\"44\":[4,22],\"45\":[2],\"46\":[2,23],\"47\":[5,19],\"48\":[1],\"49\":[1,47],\"50\":[2],\"51\":[1,55],\"52\":[1,32],\"53\":[1,57],\"54\":[1,8],\"55\":[1,27],\"56\":[1,33],\"57\":[2],\"58\":[1,26],\"59\":[1,16],\"60\":[1,36],\"61\":[1,17],\"62\":[2],\"63\":[1,21],\"64\":[1,76],\"65\":[1,50],\"66\":[1,38],\"67\":[1,54],\"68\":[2],\"69\":[1,62],\"70\":[1,33],\"71\":[2],\"72\":[3,60],\"73\":[5,14],\"74\":[4,39],\"75\":[3,44],\"76\":[3,18],\"77\":[3,30],\"78\":[3,43],\"79\":[3,42],\"80\":[3,24],\"81\":[3,34],\"82\":[3,41],\"83\":[1],\"84\":[2,25],\"85\":[2,35],\"86\":[2,21],\"87\":[2,39],\"88\":[2,30],\"89\":[2,5],\"90\":[2,29],\"91\":[2],\"92\":[1,17],\"93\":[2,31],\"94\":[2,37],\"95\":[2,45],\"96\":[2,48],\"97\":[1],\"98\":[3,44],\"99\":[3,45],\"100\":[4,36],\"101\":[5,30],\"102\":[6,11],\"103\":[1,20],\"104\":[1],\"105\":[2,39],\"106\":[2,23],\"107\":[3,30],\"108\":[2,32],\"109\":[2,64],\"110\":[1],\"111\":[1,16],\"112\":[3,34],\"113\":[4,19],\"114\":[3,44],\"115\":[1,40],\"116\":[1,28],\"117\":[1,16],\"118\":[1],\"119\":[1,49],\"120\":[2,38],\"121\":[4,32],\"122\":[3,12],\"123\":[3,29],\"124\":[2,21],\"125\":[3,47],\"126\":[2,40],\"127\":[1],\"128\":[4,118],\"129\":[4,84],\"130\":[1],\"131\":[2,76],\"132\":[3,254],\"133\":[3,68],\"134\":[2,96],\"135\":[5,73],\"136\":[2,141],\"137\":[4,142],\"138\":[1],\"139\":[1,69],\"140\":[1,239],\"141\":[1,107],\"142\":[1,35],\"143\":[1,75],\"144\":[5,45],\"145\":[2],\"146\":[1,17],\"147\":[3,194],\"148\":[3,2],\"149\":[4,181],\"150\":[9,20],\"151\":[1,25],\"152\":[1,211],\"153\":[1,38],\"154\":[1,26],\"155\":[1,25],\"156\":[1,53],\"157\":[1,43],\"158\":[1,20],\"159\":[1,37],\"160\":[1,75],\"161\":[1,39],\"162\":[2,84],\"163\":[4,266],\"164\":[1],\"165\":[1,49],\"166\":[3,92],\"167\":[3,27],\"168\":[3,98],\"169\":[1],\"170\":[1,92],\"171\":[2,75],\"172\":[2,164],\"173\":[4,159],\"174\":[1,4],\"175\":[1,67],\"176\":[2,74],\"177\":[3,62],\"178\":[3,48],\"179\":[1],\"180\":[3,107],\"181\":[4,135],\"182\":[3,42],\"183\":[1,11],\"184\":[4,71],\"185\":[4],\"186\":[1],\"187\":[1,40],\"188\":[2,50],\"189\":[3,24],\"190\":[1],\"191\":[1,33],\"192\":[2,118],\"193\":[2,91],\"194\":[2,175],\"195\":[1],\"196\":[1,125],\"197\":[4],\"198\":[5,22],\"199\":[2],\"200\":[1,138],\"201\":[3,35],\"202\":[2,11],\"203\":[4,16],\"204\":[1],\"205\":[1,98],\"206\":[2,29],\"207\":[2,11],\"208\":[4,4],\"209\":[1],\"210\":[3,132],\"211\":[4],\"212\":[2,17],\"213\":[2,12],\"214\":[2,19],\"215\":[2,9],\"216\":[1],\"217\":[3,166],\"218\":[4],\"219\":[2,8],\"220\":[2,7],\"221\":[2,8],\"222\":[2,4],\"223\":[1],\"224\":[1,54],\"225\":[2,160],\"226\":[1,45],\"227\":[1],\"228\":[2,94],\"229\":[2,51],\"230\":[3,14],\"231\":[1,12],\"232\":[1,56],\"233\":[2,69],\"234\":[2],\"235\":[2,74],\"236\":[2,64],\"237\":[3,123],\"238\":[1],\"239\":[2,12],\"240\":[3,5],\"241\":[3,7],\"242\":[2,7],\"243\":[3,9],\"244\":[2,28],\"245\":[2,74],\"246\":[3,18],\"247\":[3,32],\"248\":[2,22],\"249\":[3,41],\"250\":[1,47],\"251\":[2,99],\"252\":[3],\"253\":[2,8],\"254\":[2,9],\"255\":[3,9],\"256\":[3,9],\"257\":[2],\"258\":[2,69],\"259\":[3,94],\"260\":[3],\"261\":[3,8],\"262\":[2,13],\"263\":[4,135],\"264\":[2,70],\"265\":[4],\"266\":[2,58],\"267\":[2,115],\"268\":[1],\"269\":[2,186],\"270\":[1],\"271\":[1],\"272\":[7,44],\"273\":[4,87],\"274\":[9,35],\"275\":[1],\"276\":[5,64],\"277\":[8,40],\"278\":[10,59],\"279\":[6,104],\"280\":[1],\"281\":[9,21],\"282\":[3,10],\"283\":[4,28],\"284\":[10,21],\"285\":[5,29],\"286\":[9,111],\"287\":[7,43],\"288\":[9,46],\"289\":[11,38],\"290\":[9,25],\"291\":[5,61],\"292\":[8,76],\"293\":[1],\"294\":[8,36],\"295\":[12,24],\"296\":[12,29],\"297\":[1],\"298\":[10,36],\"299\":[4,15],\"300\":[12,40],\"301\":[5,19],\"302\":[14,49]},\"averageFieldLength\":[2.904290429042905,51.52762875575967],\"storedFields\":{\"0\":{\"h\":\"Guide\"},\"1\":{\"h\":\"Introduction\",\"t\":[\"This section mainly provides guides related to Golang development, including but not limited to Golang basics, advanced topics, tools, and frameworks. It aims to help developers quickly grasp knowledge related to Golang development and also provides interview questions for learning and job-seeking.\",\"Welcome to Submit PR\",\"If you have good Golang-related knowledge points, interview questions, tools, etc., feel free to submit a pull request (PR). We will review and publish it on this site promptly.\",\"Requirements: The content submitted in PRs must be original; direct reposts are not accepted.\"]},\"2\":{\"h\":\"Golang Dev Specifications\",\"t\":[\"Source\",\"These guidelines are based on uber-go.\"]},\"3\":{\"h\":\"Basic Guidelines\"},\"4\":{\"h\":\"Limit Line Length\",\"t\":[\"Go code lines should be limited to 80 characters. This helps improve readability in both smaller and larger windows.\"]},\"5\":{\"h\":\"Group Related Declarations, Avoid Unrelated Ones\",\"t\":[\"Group related declarations together, such as imports, constants, variables, types, and functions. Separate unrelated declarations with an empty line.\",\"Not Recommended\",\"Recommended\",\"import \\\"a\\\" import \\\"b\\\" \",\"import ( \\\"a\\\" \\\"b\\\" ) \",\"const a = 1 const b = 2 var a = 1 var b = 2 type Area float64 type Volume float64 \",\"const ( a = 1 b = 2 ) var ( a = 1 b = 2 ) type ( Area float64 Volume float64 ) \",\"EnvVar is not related to iota.\",\"type Operation int const ( Add Operation = iota + 1 Subtract Multiply EnvVar = \\\"MY_ENV\\\" ) \",\"type Operation int const ( Add Operation = iota + 1 Subtract Multiply ) const EnvVar = \\\"MY_ENV\\\" \",\"func f() string { red := color.New(0xff0000) green := color.New(0x00ff00) blue := color.New(0x0000ff) ... } \",\"Grouping within a function is also acceptable:\",\"func f() string { var ( red = color.New(0xff0000) green = color.New(0x00ff00) blue = color.New(0x0000ff) ) ... } \",\"func (c *client) request() { caller := c.name format := \\\"json\\\" timeout := 5*time.Second var err error // Separate var declaration is not recommended // ... } \",\"func (c *client) request() { var ( caller = c.name format = \\\"json\\\" timeout = 5*time.Second err error ) // ... } \"]},\"6\":{\"h\":\"Single Variable Declarations\",\"t\":[\"For single variable assignments, prefer using :=. However, for slices, it's recommended to use var declarations.\",\"Not Recommended\",\"Recommended\",\"var s = \\\"foo\\\" \",\"s := \\\"foo\\\" \",\"func f(list []int) { filtered := []int{} for _, v := range list { if v > 10 { filtered = append(filtered, v) } } } \",\"func f(list []int) { var filtered []int for _, v := range list { if v > 10 { filtered = append(filtered, v) } } } \"]},\"7\":{\"h\":\"Import Grouping\",\"t\":[\"Group imported packages, separating each group with an empty line, and sort them alphabetically within each group.\",\"Common Grouping Patterns\",\"Two common grouping patterns:\",\"Standard library vs. third-party libraries.\",\"Standard library vs. third-party libraries vs. local/private libraries.\",\"Not Recommended\",\"Recommended\",\"import ( \\\"fmt\\\" \\\"os\\\" \\\"go.uber.org/atomic\\\" \\\"golang.org/x/sync/errgroup\\\" ) \",\"import ( \\\"fmt\\\" \\\"os\\\" \\\"go.uber.org/atomic\\\" \\\"golang.org/x/sync/errgroup\\\" ) \",\"Certainly! Here's the translation of your Go code snippets into English:\"]},\"8\":{\"h\":\"Import Aliases\",\"t\":[\"When the package name you're importing doesn't match the last word in the import path, it's recommended to use an alias. You can also use an alias if the package name is too long. However, in most cases, it's best to avoid aliases unless there's a package name conflict.\",\"import ( \\\"net/http\\\" client \\\"example.com/client-go\\\" trace \\\"example.com/trace/v2\\\" ) \"]},\"9\":{\"h\":\"Package Names\",\"t\":[\"When defining package names, follow these guidelines:\",\"Use all lowercase letters; avoid uppercase or special characters.\",\"In most cases, you don't need to rename packages when using named imports.\",\"Choose simple yet meaningful package names for easy recall and reference.\",\"Avoid using plurals; for example, use net/url instead of net/urls.\",\"Refrain from using generic names like \\\"common,\\\" \\\"util,\\\" \\\"shared,\\\" or \\\"lib.\\\"\"]},\"10\":{\"h\":\"Function Names\",\"t\":[\"Use camel case for function names; avoid underscores to separate words (except for some test functions).\",\"Function names should describe their purpose as clearly as possible; avoid using meaningless names.\"]},\"11\":{\"h\":\"Function Ordering\",\"t\":[\"Follow these rules for function ordering:\",\"Arrange function definitions in the order of their expected invocation.\",\"Within the same file, place functions after struct, const, and var declarations.\",\"For receiver functions, those starting with new or New should come before others.\",\"Not Recommended\",\"Recommended\",\"func (s *something) Cost() { return calcCost(s.weights) } type something struct{ ... } func calcCost(n []int) int {...} func (s *something) Stop() {...} func newSomething() *something { return &something{} } \",\"type something struct{ ... } func newSomething() *something { return &something{} } func (s *something) Cost() { return calcCost(s.weights) } func (s *something) Stop() {...} func calcCost(n []int) int {...} \"]},\"12\":{\"h\":\"Reduce Nesting\",\"t\":[\"Code should handle errors or special cases and return early rather than nesting code blocks. This approach leads to more straightforward and concise code.\",\"Not Recommended\",\"Recommended\",\"for _, v := range data { if v.F1 == 1 { v = process(v) if err := v.Call(); err == nil { v.Send() } else { return err } } else { log.Printf(\\\"Invalid v: %v\\\", v) } } \",\"for _, v := range data { if v.F1 != 1 { log.Printf(\\\"Invalid v: %v\\\", v) continue } v = process(v) if err := v.Call(); err != nil { return err } v.Send() } \"]},\"13\":{\"h\":\"Minimize Unnecessary Blocks\",\"t\":[\"Not Recommended\",\"Recommended\",\"var a int if b { a = 100 } else { a = 10 } \",\"a := 10 if b { a = 100 } \"]},\"14\":{\"h\":\"Top-Level Variable Declarations\",\"t\":[\"Not Recommended\",\"Recommended\",\"var _s string = F() func F() string { return \\\"A\\\" } \",\"var _s = F() // Since F already explicitly returns a string type, // we don't need to specify the type of _s explicitly. func F() string { return \\\"A\\\" } \",\"If we want _e to be of type error, the following definition is incorrect; _e would be defined as the myError type.\",\"type myError struct{} func (myError) Error() string { return \\\"error\\\" } func F() myError { return myError{} } var _e = F() \",\"type myError struct{} func (myError) Error() string { return \\\"error\\\" } func F() myError { return myError{} } var _e error = F() \"]},\"15\":{\"h\":\"Use as a Prefix for Unexported Top-Level Constants and Variables\",\"t\":[\"Bad\",\"Good\",\"// foo.go const ( defaultPort = 8080 defaultUser = \\\"user\\\" ) \",\"// foo.go const ( _defaultPort = 8080 _defaultUser = \\\"user\\\" ) \"]},\"16\":{\"h\":\"Separate Embedded Types in Structs with an Empty Line\",\"t\":[\"Not Recommended\",\"Recommended\",\"type Client struct { version int http.Client } \",\"type Client struct { http.Client version int } \",\"Pros and Cons of Embedded Types\",\"Pros:\",\"Concise code\",\"Direct access to methods and fields of embedded types\",\"Ability to implement interfaces\",\"Cons:\",\"May expose unexported fields and methods to external packages\",\"Imports the special zero value of embedded methods\",\"Exposes all fields and methods of the embedded type, which may not be desired\",\"Can lead to method call ambiguity if the embedded type has the same method names\",\"Assigning values to fields of embedded types can be cumbersome, as they mix with other embedded types\",\"Not Recommended\",\"Recommended\",\"type A struct { // Bad: A.Lock() and A.Unlock() are now available, // providing no functional benefit and allowing // users to control internal details of A. sync.Mutex } \",\"type countingWriteCloser struct { // Good: Write() is provided at the outer level for a specific purpose, // and the work is delegated to the Write() of the inner type. io.WriteCloser count int } func (w *countingWriteCloser) Write(bs []byte) (int, error) { w.count += len(bs) return w.WriteCloser.Write(bs) } \",\"type Book struct { // Bad: Pointers change the usefulness of zero values io.ReadWriter // other fields } // later var b Book b.Read(...) // panic: nil pointer b.String() // panic: nil pointer b.Write(...) // panic: nil pointer \",\"type Book struct { // Good: Useful zero value bytes.Buffer // other fields } // later var b Book b.Read(...) // ok b.String() // ok b.Write(...) // ok \",\"type Client struct { sync.Mutex sync.WaitGroup bytes.Buffer url.URL } \",\"type Client struct { mtx sync.Mutex wg sync.WaitGroup buf bytes.Buffer url url.URL } \",\"Certainly! Here's the translation of your Go code snippets into English:\"]},\"17\":{\"h\":\"Is a Valid Slice\",\"t\":[\"When a slice is nil, it represents a slice with a length of 0.\",\"When returning an empty slice, it's better to return nil instead of an empty slice.\",\"Not Recommended\",\"Recommended\",\"if x == \\\"\\\" { return []int{} } \",\"if x == \\\"\\\" { return nil } \",\"Use len(s) == 0 to check for emptiness rather than s != nil.\",\"Not Recommended\",\"Recommended\",\"func isEmpty(s []string) bool { return s == nil } \",\"func isEmpty(s []string) bool { return len(s) == 0 } \",\"Zero-value slices (declared using var) can be used immediately without calling make().\",\"Not Recommended\",\"Recommended\",\"nums := []int{} // or, nums := make([]int) if add1 { nums = append(nums, 1) } if add2 { nums = append(nums, 2) } \",\"var nums []int if add1 { nums = append(nums, 1) } if add2 { nums = append(nums, 2) } \"]},\"18\":{\"h\":\"Reduce Variable Scope\",\"t\":[\"Minimize variable scope unless the variable is used elsewhere.\",\"Bad\",\"Good\",\"err := os.WriteFile(name, data, 0644) if err != nil { return err } \",\"if err := os.WriteFile(name, data, 0644); err != nil { return err } \",\"if data, err := os.ReadFile(name); err == nil { err = cfg.Decode(data) if err != nil { return err } fmt.Println(cfg) return nil } else { return err } \",\"By declaring the err variable within the if statement, its scope is limited to the if block. This avoids using the same variable name in the else statement.\",\"data, err := os.ReadFile(name) if err != nil { return err } if err := cfg.Decode(data); err != nil { return err } fmt.Println(cfg) return nil \"]},\"19\":{\"h\":\"Use Raw Strings Instead of Escaped Strings\",\"t\":[\"When a string contains escape characters, prefer wrapping it in backticks (==), indicating that it's a raw string and doesn't require escaping.\",\"Not Recommended\",\"Recommended\",\"wantError := \\\"unknown name:\\\\\\\"test\\\\\\\"\\\" \",\"wantError := `unknown error:\\\"test\\\"` \"]},\"20\":{\"h\":\"Struct Initialization\"},\"21\":{\"h\":\"Initialize Structs Using Field Names\",\"t\":[\"When initializing a struct, it's better to include field names to avoid errors due to changes in the struct's fields.\",\"Bad\",\"Good\",\"k := User{\\\"John\\\", \\\"Doe\\\", true} \",\"k := User{ FirstName: \\\"John\\\", LastName: \\\"Doe\\\", Admin: true, } \"]},\"22\":{\"h\":\"Omit Fields with Zero Values\",\"t\":[\"If the fields being initialized have default zero values, you can omit the field names.\",\"Not Recommended\",\"Recommended\",\"user := User{ FirstName: \\\"John\\\", LastName: \\\"Doe\\\", MiddleName: \\\"\\\", Admin: false, } \",\"user := User{ FirstName: \\\"John\\\", LastName: \\\"Doe\\\", } \"]},\"23\":{\"h\":\"If Initializing a Struct Variable with All Zero Values, Use\",\"t\":[\"Not Recommended\",\"Recommended\",\"user := User{} \",\"var user User \"]},\"24\":{\"h\":\"Initialize Struct Pointers\",\"t\":[\"When initializing a struct pointer, use the & symbol instead of new().\",\"Not Recommended\",\"Recommended\",\"sptr := new(T) sptr.Name = \\\"bar\\\" \",\"sptr := &T{Name: \\\"bar\\\"} \"]},\"25\":{\"h\":\"Use to Initialize Maps\",\"t\":[\"When initializing a map, if it has initial values, use := instead of make(). If there are no initial values, use make(), and consider estimating the map's size by setting an initial capacity.\",\"Not Recommended\",\"Recommended\",\"m := make(map[T1]T2, 3) m[k1] = v1 m[k2] = v2 m[k3] = v3 \",\"m := map[T1]T2{ k1: v1, k2: v2, k3: v3, } \",\"m := make(map[T1]T2) \",\"m := make(map[T1]T2, 3) \"]},\"26\":{\"h\":\"If Defining a Format String Outside Printf, Use\",\"t\":[\"When defining a format string outside of Printf, it's recommended to use a const constant. This avoids duplicate format string definitions and helps go vet perform static analysis.\",\"Bad\",\"Good\",\"msg := \\\"unexpected values %v, %v\\\\n\\\" fmt.Printf(msg, 1, 2) \",\"const msg = \\\"unexpected values %v, %v\\\\n\\\" fmt.Printf(msg, 1, 2) \"]},\"27\":{\"h\":\"Development Principles\"},\"28\":{\"h\":\"Error Handling\"},\"29\":{\"h\":\"Types of Errors\",\"t\":[\"There are typically two types of errors:\",\"Static Errors: These are errors created using errors.New(). They are often used for predefined errors where the error message remains constant.\",\"Dynamic Errors: These are errors created using fmt.Errorf() or custom error types. They are suitable for cases where the error message needs to be dynamic.\",\"Error Matching\",\"When checking error types, avoid using == for comparison. Instead, use errors.Is() or errors.As() for comparison. Also, create top-level error variables for better handling.\",\"// package foo var ErrCouldNotOpen = errors.New(\\\"could not open\\\") func Open() error { return ErrCouldNotOpen } // package bar if err := foo.Open(); err != nil { if errors.Is(err, foo.ErrCouldNotOpen) { // handle the error } else { panic(\\\"unknown error\\\") } } \"]},\"30\":{\"h\":\"Error Wrapping\",\"t\":[\"We can wrap errors using fmt.Errorf() or errors.Wrap() to preserve the original error information while adding additional context.\",\"Warning\",\"Starting from Go 1.13, you can use %w as a formatting verb with fmt.Errorf(). This allows proper error type matching using errors.Is() and errors.As(). Avoid using %v as it loses error type information.\",\"s, err := store.New() if err != nil { return fmt.Errorf( \\\"new store: %w\\\", err) } \"]},\"31\":{\"h\":\"Error Naming\",\"t\":[\"For regular error variables, use names starting with Err, followed by a description of the error using camel case:\",\"var ( // Export these errors so users of this package can match them with errors.Is. ErrBrokenLink = errors.New(\\\"link is broken\\\") ErrCouldNotOpen = errors.New(\\\"could not open\\\") // This error is not exported to avoid making it part of our public API. errNotFound = errors.New(\\\"not found\\\") ) \",\"For custom error types, consider using Error as a suffix:\",\"// Similarly, export this error so users of this package can match it with errors.As. type NotFoundError struct { File string } func (e *NotFoundError) Error() string { return fmt.Sprintf(\\\"file %q not found\\\", e.File) } // This error is not exported to avoid making it part of our public API. type resolveError struct { Path string } func (e *resolveError) Error() string { return fmt.Sprintf(\\\"resolve %q\\\", e.Path) } \"]},\"32\":{\"h\":\"Sequential Error Handling\",\"t\":[\"When handling errors, use errors.Is() and errors.As() to determine the error type. Handle different error types differently, and if an error cannot be handled, explicitly return it to allow higher-level handling.\",\"Description\",\"Code Example\",\"Not Recommended: Log and return the error\",\"This approach may clutter application logs with similar error messages, but it doesn't provide significant benefits.\",\"u, err := getUser(id) if err != nil { // BAD: See description log.Printf(\\\"Could not get user %q: %v\\\", id, err) return err } \",\"Recommended: Wrap the error and return it\",\"Higher-level callers in the stack will handle this error. Using %w ensures that they can match the error using errors.Is() or errors.As().\",\"u, err := getUser(id) if err != nil { return fmt.Errorf(\\\"get user %q: %w\\\", id, err) } \",\"Recommended: Log the error and gracefully degrade\",\"If the operation is not absolutely critical, we can provide a degraded but uninterrupted experience by recovering from it.\",\"if err := emitMetrics(); err != nil { // Failure to write metrics should not // break the application. log.Printf(\\\"Could not emit metrics: %v\\\", err) } \",\"Recommended: Match the error and gracefully degrade\",\"If the callee defines a specific error in its contract and the failure is recoverable, match that error case and degrade gracefully. For all other cases, wrap the error and return it.\",\"Higher-level callers in the stack will handle other error cases.\",\"tz, err := getUserTimeZone(id) if err != nil { if errors.Is(err, ErrUserNotFound) { // User doesn't exist. Use UTC. tz = time.UTC } else { return fmt.Errorf(\\\"get user %q: %w\\\", id, err) } } \"]},\"33\":{\"h\":\"Type Assertions\",\"t\":[\"When performing type assertions, always use the ok return value to avoid causing a panic.\",\"Not Recommended\",\"Recommended\",\"t := i.(string) // May cause panic \",\"t, ok := i.(string) if !ok { // Handle the error gracefully } \"]},\"34\":{\"h\":\"Minimize the Use of\",\"t\":[\"In production code, it's best to avoid using panic. panic is a major contributor to cascading failures. If you must use panic, make sure to handle it using recover().\"]},\"35\":{\"h\":\"Use Atomic Operations\",\"t\":[\"In concurrent programming, use the atomic operations provided by the atomic package to ensure thread safety. These operations guarantee that basic types like int32 and int64 can only be accessed by one goroutine at a time.\",\"For other types, consider using channels or sync locks for control.\",\"Not Recommended\",\"Recommended\",\"type foo struct { running int32 // atomic } func (f* foo) start() { if atomic.SwapInt32(&f.running, 1) == 1 { // already running… return } // start the Foo } func (f *foo) isRunning() bool { return f.running == 1 // race! } \",\"type foo struct { running atomic.Bool } func (f *foo) start() { if f.running.Swap(true) { // already running… return } // start the Foo } func (f *foo) isRunning() bool { return f.running.Load() } \"]},\"36\":{\"h\":\"Avoid Embedding Types in Public Structures\",\"t\":[\"Avoid embedding types in public structures. When multiple types are embedded, it can lead to a mix of exposed interfaces and variables, making management and configuration difficult. Additionally, conflicts may arise between identical variables and functions. There's no guarantee that future versions won't introduce conflicts.\",\"Not Recommended\",\"Recommended\",\"// ConcreteList represents an entity list. type ConcreteList struct { *AbstractList } \",\"// ConcreteList represents an entity list. type ConcreteList struct { list *AbstractList } // Add adds an entity to the list. func (l *ConcreteList) Add(e Entity) { l.list.Add(e) } // Remove removes an entity from the list. func (l *ConcreteList) Remove(e Entity) { l.list.Remove(e) } \"]},\"37\":{\"h\":\"Avoid Using Built-in Names\",\"t\":[\"When declaring variables, avoid using built-in names such as len, cap, append, copy, new, make, close, delete, complex, real, imag, panic, recover, print, println, error, string, int, uint, uintptr, byte, rune, float32, float64, bool, true, false, iota, nil, true, false, iota, nil, append, cap, close, complex, copy, delete, imag, len, make, new, panic, print, println, real, recover, string, uint, uintptr, byte, rune, float32, float64, int, int8, int16, int32, int64, uint, uint8, uint16, uint32, uint64, uintptr, bool, etc.\"]},\"38\":{\"h\":\"Avoid Using Functions\",\"t\":[\"The init function is automatically executed when a package is imported. However, since the order of execution of init functions is not guaranteed, initializing variables within an init function can lead to unpredictable results. Therefore, it's best to avoid using init functions.\",\"When to Use `init()`\",\"When the assignment process during package import is complex and cannot be done with a single variable assignment\",\"When using pluggable hook functions (e.g., database/sql)\",\"For optimizing precomputed methods\"]},\"39\":{\"h\":\"Preallocate Slice Capacity\",\"t\":[\"If you can know the approximate amount of data in advance, you should configure capacity for slice in advance to reduce the number of slice expansions and improve performance.\",\"Not Recommended\",\"Recommended\",\"for n := 0; n < b.N; n++ { data := make([]int, 0) for k := 0; k < size; k++{ data = append(data, k) } } \",\"for n := 0; n < b.N; n++ { data := make([]int, 0, size) for k := 0; k < size; k++{ data = append(data, k) } } \",\"BenchmarkBad-4 100000000 2.48s \",\"BenchmarkGood-4 100000000 0.21s \"]},\"40\":{\"h\":\"Exiting the Main Program Using or\",\"t\":[\"In the main program, if an error occurs, it's preferable to use os.Exit or log.Fatal to exit the program rather than using panic. While panic can cause the program to crash, os.Exit or log.Fatal will allow the program to exit gracefully. Additionally, errors should be propagated to the ultimate caller rather than handling fatal errors in every function.\",\"Info\",\"It's best to call either os.Exit or log.Fatal*only inmain(). All other functions should return errors to the main program.\",\"Reasons:\",\"Allowing too many functions to call Fatal can make it difficult to control the program flow.\",\"Fatal errors may prevent all tests from running.\",\"Fatal errors may prevent defer from executing.\",\"Bad\",\"Good\",\"func main() { body := readFile(path) fmt.Println(body) } func readFile(path string) string { f, err := os.Open(path) if err != nil { log.Fatal(err) } b, err := os.ReadAll(f) if err != nil { log.Fatal(err) } return string(b) } \",\"func main() { body, err := readFile(path) if err != nil { log.Fatal(err) } fmt.Println(body) } func readFile(path string) (string, error) { f, err := os.Open(path) if err != nil { return \\\"\\\", err } b, err := os.ReadAll(f) if err != nil { return \\\"\\\", err } return string(b), nil } \"]},\"41\":{\"h\":\"Declaring Tags in Serialized Structs\",\"t\":[\"In serialized structs, it's essential to declare tags (such as json or xml) to ensure correct parsing during serialization and deserialization.\",\"Recommended\",\"Not Recommended\",\"type Stock struct { Price int Name string } bytes, err := json.Marshal(Stock{ Price: 137, Name: \\\"UBER\\\", }) \",\"type Stock struct { Price int `json:\\\"price\\\"` Name string `json:\\\"name\\\"` // Safe to rename Name to Symbol. } bytes, err := json.Marshal(Stock{ Price: 137, Name: \\\"UBER\\\", }) \"]},\"42\":{\"h\":\"Pay Attention to Goroutine Usage\",\"t\":[\"Warning\",\"When using goroutines, consider the following:\",\"Limit the number of goroutines to avoid unbounded creation.\",\"Ensure goroutines have predictable termination times.\",\"Provide a method for stopping goroutines.\",\"Bad\",\"Good\",\"go func() { for { flush() time.Sleep(delay) } }() \",\"var ( stop = make(chan struct{}) // Signal to stop the goroutine done = make(chan struct{}) // Signal that our goroutine has exited ) go func() { defer close(done) ticker := time.NewTicker(delay) defer ticker.Stop() for { select { case <-tick.C: flush() case <-stop: return } } }() // Other code... close(stop) // Signal the goroutine to stop <-done // Wait for it to exit \",\"This goroutine cannot be stopped. It will keep running until the application exits.\",\"This goroutine can be stopped using close(stop), and we can wait for it to exit using <-done.\"]},\"43\":{\"h\":\"Waiting for Goroutines to Exit\",\"t\":[\"When a goroutine is executing, use a mechanism to ensure that the main program doesn't exit prematurely. Otherwise, it might terminate the goroutine.\",\"Two common approaches are:\",\"Use sync.WaitGroup: If you need to wait for multiple goroutines, use this approach.\",\"var wg sync.WaitGroup for i := 0; i < N; i++ { wg.Add(1) go func() { defer wg.Done() // ... }() } // To wait for all to finish: wg.Wait() \",\"Add another chan struct{} that the goroutine closes when it's done. If you have only one goroutine, use this approach.\",\"done := make(chan struct{}) go func() { defer close(done) // ... }() // To wait for the goroutine to finish: <-done \"]},\"44\":{\"h\":\"Avoid Using Goroutines in\",\"t\":[\"Using goroutines in init() functions can complicate program initialization. Since init() functions execute when the program starts, and goroutines run asynchronously, the initialization order may become unpredictable.\"]},\"45\":{\"h\":\"Performance Optimization\"},\"46\":{\"h\":\"Prefer Over\",\"t\":[\"When converting strings, prefer using the strconv package over fmt. The fmt package is heavier, while strconv is lighter. strconv provides faster conversion and requires fewer resources.\"]},\"47\":{\"h\":\"Specify Map and Slice Capacities\",\"t\":[\"If you know the approximate capacity in advance, preallocate it to avoid unnecessary memory allocation and automatic resizing.\"]},\"48\":{\"h\":\"Keywords\"},\"49\":{\"h\":\"Keywords\",\"t\":[\"Golang has 25 reserved keywords that cannot be used as program identifiers.\",\"Type\",\"Keywords\",\"Introduction\",\"Declaration\",\"constfuncimportpackagetypevar\",\"These keywords are used to declare various elements in the code.\",\"Composite Types\",\"chaninterfacemapstruct\",\"These keywords are used to declare some special compound types.\",\"Control Flow\",\"breakcasecontinuedefaultelsefallthroughforgotoifrangereturnselectswitch\",\"These keywords are used to control the flow of program execution.\",\"Function Modifiers\",\"defergo\",\"Used to modify special functions.\"]},\"50\":{\"h\":\"Declaration Types\"},\"51\":{\"h\":\"\",\"t\":[\"const is used to declare constants, which once declared cannot be changed, and must specify an initial value when declaring a constant.\",\"Example\",\"const identifier T = value // T is the data type, which can be omitted, and the compiler will infer it. const identifier1, identifier2 = value1, value2 // Declare multiple, such as const a, b, c = \\\"hello\\\", 100, true const ( FeMale = 0 Male = 1 ) // Enumeration const ( a = iota b c ) // iota \"]},\"52\":{\"h\":\"\",\"t\":[\"func is used to declare functions, supports multiple return values, and does not support default parameters.\",\"Example\",\"// p is the parameter, T is the type func Test(p T) {} func Test(p T) (T1, T2) {} func Test(p T, p1 T1, list ...T3) (T4, T5) {} // variadic parameters \"]},\"53\":{\"h\":\"\",\"t\":[\"import is used to import packages to use their public identifiers.\",\"import supports single-line and multi-line imports.\",\"Example\",\"import \\\"flag\\\" // single import import ( \\\"flag\\\" \\\"fmt\\\" ) // multiple imports \",\"We can also use ., _, and aliases to modify imported packages.\",\"Import Command\",\"Usage\",\"Explanation\",\"import \\\"lib/math\\\"\",\"math.Sin\",\"Normal import requires the package name\",\"import m \\\"lib/math\\\"\",\"m.Sin\",\"Aliases can be set during import\",\"import . \\\"lib/math\\\"\",\"Sin\",\"Using . allows direct use of functions without the package name\",\"We can also use _ to modify imported packages, which will only execute the package's initialization function init().\"]},\"54\":{\"h\":\"\",\"t\":[\"package is used to define the package name.\"]},\"55\":{\"h\":\"\",\"t\":[\"type is used to define variable types.\",\"Example\",\"// Define an interface type Animal interface { eat() } // Define a structure type Tiger struct { Name string } // Define equivalent types type Num int32 // Define a new type type Num = int32 // Only define an alias \"]},\"56\":{\"h\":\"\",\"t\":[\"var is used to declare public or private variables.\",\"Example\",\"var Name T // public variable var name T // private variable var name1, name2 T // declare multiple variables of the same type var name1, name2 T = val1, val2 // declare and initialize multiple variables of the same type var name1, name2 = val1, val2 // infer types and initialize based on val1, val2 // Using parentheses var ( name1 = val1 name2 = val2 ) \"]},\"57\":{\"h\":\"Composite Types\"},\"58\":{\"h\":\"\",\"t\":[\"chan (Channel) is used to declare channels.\",\"Example\",\"// Channel for sending and receiving data of type T chan T // Channel for sending data of type T <-chan T // Channel for receiving data of type T chan<- T \",\"ch := make(chan T) // unbuffered channel ch := make(chan T, 20) // buffered channel \"]},\"59\":{\"h\":\"\",\"t\":[\"interface is used to declare interfaces.\",\"Example\",\"type File interface { Read(b Buffer) bool Write(b Buffer) bool Close() } \"]},\"60\":{\"h\":\"\",\"t\":[\"map is used to declare collections, consisting of unordered key-value pairs, with an underlying hash map. Although map will automatically expand, it is recommended to configure the capacity at initialization.\",\"Example\",\"m := make(map[string]string) // empty map m := make(map[string]string, 10) // map with an initial capacity of 10 \"]},\"61\":{\"h\":\"\",\"t\":[\"struct is used to declare structures.\",\"Example\",\"type Person struct { Name string } \",\"Here is the translation into English:\"]},\"62\":{\"h\":\"Control Flow\"},\"63\":{\"h\":\"\",\"t\":[\"ifelse is used for conditional judgments and can be nested.\",\"Example\",\"if a > 0 { fmt.Println(\\\"hello\\\") } else { fmt.Println(\\\"world\\\") } \"]},\"64\":{\"h\":\"\",\"t\":[\"switch is used to perform different actions based on different conditions. By default, each case comes with a break, and after executing one case, it will automatically exit. If you want to continue executing the following statements, you need to use fallthrough.\",\"Example\",\"a := \\\"2\\\" switch a { case \\\"1\\\": fmt.Println(\\\"hello\\\") case \\\"2\\\": fmt.Println(\\\"world\\\") default: // default action fmt.Println(\\\"default\\\") } // Result: world \",\"Using fallthrough, you can directly execute the action of the next case after completing the corresponding case.\",\"package main import \\\"fmt\\\" func main() { var dayOfWeek int = 4 switch dayOfWeek { case 1: fmt.Println(\\\"Monday\\\") fallthrough case 2: fmt.Println(\\\"Tuesday\\\") fallthrough case 3: fmt.Println(\\\"Wednesday\\\") fallthrough case 4: fmt.Println(\\\"Thursday\\\") fallthrough case 5: fmt.Println(\\\"Friday\\\") fallthrough case 6: fmt.Println(\\\"Saturday\\\") case 7: fmt.Println(\\\"Sunday\\\") default: fmt.Println(\\\"Invalid Day\\\") } } // Result: // Thursday // Friday // Saturday \"]},\"65\":{\"h\":\"\",\"t\":[\"for is used to loop actions, using break to interrupt the current for loop, and continue to skip the remaining statements of the current loop and continue with the next round.\",\"Example\",\"// Single condition for i <= 10 { fmt.Println(i) i = i + 1 } // Initialization and judgment for i:=0; i < 3; i++ { fmt.Println(i) } // for range iteration array :=[]int{1, 2, 3, 4, 5} for i, v :=range array{ fmt.Println(i,v) } // break for i, v :=range array{ if i >= 2 { break } fmt.Println(i,v) } // continue for i, v :=range array{ if i == 2 { continue } fmt.Println(i,v) } \"]},\"66\":{\"h\":\"\",\"t\":[\"goto can jump to a specified location to continue executing actions.\",\"Example\",\"package main import \\\"fmt\\\" func main() { for i := 0; i < 10; i ++ { if i == 5 { goto end // Jump to the end position to execute } fmt.Println(i) } end: fmt.Println(\\\"end\\\") } // Result: // 0 // 1 // 2 // 3 // 4 // end \"]},\"67\":{\"h\":\"\",\"t\":[\"select allows goroutine to wait for multiple communication operations. select will block until one case receives information. If multiple channels receive data at the same time, a random case will be executed.\",\"Example\",\"package main import \\\"fmt\\\" func fibonacci(c, quit chan int) { x, y := 0, 1 for { select { case c <- x: x, y = y, x+y case <-quit: fmt.Println(\\\"quit\\\") return } } } func main() { c := make(chan int) quit := make(chan int) go func() { for i := 0; i < 10; i++ { fmt.Println(<-c) } quit <- 0 }() fibonacci(c, quit) } \"]},\"68\":{\"h\":\"Function Modifiers\"},\"69\":{\"h\":\"\",\"t\":[\"return is used to terminate the execution of a function and return zero or more return values. defer is used to perform actions before the function's return or after it has finished executing.\",\"Example\",\"package main import \\\"fmt\\\" func main() { defer fmt.Println(\\\"world\\\") fmt.Println(\\\"hello\\\") } // Result // hello // world \",\"Note:\",\"The execution order of defer is last-in-first-out.\",\"defer executing before return means you can use defer to get the final result of variables before return.\",\"package main import \\\"fmt\\\" func main() { num := 1 defer func() { fmt.Println(num) }() for i := 0; i < 4; i ++ { num += i } } // Result: // 7 \"]},\"70\":{\"h\":\"\",\"t\":[\"go is used to create a coroutine (goroutine) and perform actions in the background of the program.\",\"Example\",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { go func(){ fmt.Println(\\\"no.1\\\") }() go func(){ fmt.Println(\\\"no.2\\\") }() fmt.Println(\\\"start goroutine\\\") time.Sleep(5*time.Second) } // Result: // start goroutine // no.1 // no.2 \"]},\"71\":{\"h\":\"Data Type\"},\"72\":{\"h\":\"Integers (int)\",\"t\":[\"Integers come in two types:\",\"Type\",\"Range\",\"Description\",\"Signed integers\",\"-∞ ~ +∞\",\"Signed integers include positive and negative numbers\",\"Unsigned integers\",\"0 ~ +∞\",\"Unsigned integers include 0 and all positive numbers\",\"In Golang, types starting with int are signed integers, and those starting with uint are unsigned integers.\",\"Integer types in Golang:\",\"Bits\",\"Type\",\"8\",\"int8uint8\",\"16\",\"int16uint16\",\"32\",\"int32uint32\",\"64\",\"int64uint64\",\"32 or 64 (based on system architecture)\",\"intuint\",\"There are also two equivalent types:\",\"rune: equivalent to int32 , used to store Unicode characters\",\"byte: equivalent to uint8 , used to store ASCII characters\"]},\"73\":{\"h\":\"Floating-point Numbers (float)\",\"t\":[\"Floating-point numbers are numbers that contain a decimal point.\",\"Bits\",\"Type\",\"32\",\"float32\",\"64\",\"float64\"]},\"74\":{\"h\":\"Complex Numbers (complex)\",\"t\":[\"Complex numbers contain imaginary and real numbers, with the real part being a floating-point number.\",\"Bits\",\"Type\",\"32-bit float + imaginary\",\"complex64\",\"64-bit float + imaginary\",\"complex128\",\"Example\",\"// Initialize a complex number var complexData complex64 = complex(5, 3) // Equals: 5 + 3i // Another way to initialize complexData2 := 5 + 3i \"]},\"75\":{\"h\":\"Strings (string)\",\"t\":[\"Strings are composed of a sequence of characters, and the type name is string.\",\"Once a string is created, it cannot be modified.\",\"Example\",\"package main import \\\"fmt\\\" func main() { var str string := \\\"Hi! Jack\\\" // Cannot modify, the following commented code will cause an error // str[2] = 'c' fmt.Printf(\\\"%s\\\",str) } \"]},\"76\":{\"h\":\"Booleans (bool)\",\"t\":[\"The boolean type values are true or false, and the type name is bool.\",\"Example\",\"var isNumber bool isNumber = true isNumber = false \"]},\"77\":{\"h\":\"Arrays (array)\",\"t\":[\"Arrays are composed of a series of data, which can be accessed by index.\",\"The capacity of an array cannot be modified once created.\",\"Example\",\"data := [5]int{1, 2, 3, 4, 5} \"]},\"78\":{\"h\":\"Slices (slices)\",\"t\":[\"Slices are dynamic arrays that can automatically adjust their capacity size based on the data.\",\"Example\",\"package main import \\\"fmt\\\" func main() { var data []int for i := 0; i < 10; i ++ { data = append(data, i) } fmt.Println(data) } // Result // [0 1 2 3 4 5 6 7 8 9] \"]},\"79\":{\"h\":\"Map (map)\",\"t\":[\"A map is a key-value mapping table, where you can get the corresponding value through the key.\",\"The declaration of a map is as follows:\",\"map[KeyType]ValueType \",\"KeyType is the data type of the key, and ValueType is the data type of the value.\",\"Example\",\"// Declare a map var m map[string]int // Initialize the map using make m = make(map[string]int) // Set the value m[\\\"path\\\"] = 66 // Output the value fmt.Println(m[\\\"path\\\"]) \"]},\"80\":{\"h\":\"Structures (struct)\",\"t\":[\"Structures are composed of a series of custom fields, which can be accessed using ..\",\"Example\",\"type Animal struct { Name string } a := Animal{ Name: \\\"Lucky\\\" } fmt.Println(a.Name) \"]},\"81\":{\"h\":\"Pointers (pointer)\",\"t\":[\"Pointers store the memory address of a variable. Use * in front of a variable to define it as a pointer, and & to get the variable's address. Pointers allow you to modify data outside of a function within the function.\",\"Example\",\"var num *int n := 10 num = &n \"]},\"82\":{\"h\":\"Zero Value Table\",\"t\":[\"Type\",\"Zero Value\",\"uint/uint8/uint16/uint32/uint64\",\"0\",\"int/int8/int16/int32/int64\",\"0\",\"float32/float64\",\"0\",\"complex64/complex128\",\"0+0i\",\"bool\",\"false\",\"uintptr\",\"0\",\"byte\",\"0\",\"rune\",\"0\",\"string\",\"\\\"\\\"\",\"struct\",\"All internal attributes are their corresponding zero values\",\"interface\",\"nil\",\"slice\",\"nil\",\"map\",\"nil\",\"chan\",\"nil\",\"func\",\"nil\",\"pointer\",\"nil\"]},\"83\":{\"h\":\"Operators\"},\"84\":{\"h\":\"Arithmetic Operators\",\"t\":[\"A\",\"B\",\"50\",\"20\",\"Operator\",\"Operation\",\"Result\",\"Description\",\"+\",\"A + B\",\"70\",\"Addition\",\"-\",\"A - B\",\"30\",\"Subtraction\",\"*\",\"A * B\",\"1000\",\"Multiplication\",\"/\",\"A / B\",\"2\",\"Division\",\"%\",\"A % B\",\"10\",\"Modulus\",\"++\",\"A++\",\"51\",\"Increment\",\"--\",\"A--\",\"49\",\"Decrement\"]},\"85\":{\"h\":\"Relational Operators\",\"t\":[\"A\",\"B\",\"50\",\"20\",\"Operator\",\"Operation\",\"Result\",\"Description\",\"==\",\"A == B\",\"false\",\"Check if two numbers are equal, if yes then true, otherwise false\",\"!=\",\"A != B\",\"true\",\"Check if two numbers are not equal, if yes then true, otherwise false\",\">\",\"A > B\",\"true\",\"Check if left side is greater than right side, if yes then true, otherwise false\",\"<\",\"A < B\",\"false\",\"Check if left side is less than right side, if yes then true, otherwise false\",\">=\",\"A >= B\",\"true\",\"Check if left side is greater than or equal to right side, if yes then true, otherwise false\",\"<=\",\"A <= B\",\"false\",\"Check if left side is less than or equal to right side, if yes then true, otherwise false\"]},\"86\":{\"h\":\"Logical Operators\",\"t\":[\"A\",\"B\",\"true\",\"false\",\"Operator\",\"Operation\",\"Result\",\"Description\",\"&&\",\"A && B\",\"false\",\"If both sides are true, then true, otherwise false\",\"!=\",\"A != B\",\"true\",\"If either side is true, then true, if both sides are false, then false\",\"!\",\"!A\",\"false\",\"If the condition is true, then false, otherwise true\"]},\"87\":{\"h\":\"Bitwise Operators\",\"t\":[\"Truth Table\",\"p\",\"q\",\"p & q\",\"p | q\",\"p ^ q\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"0\",\"1\",\"0\",\"0\",\"1\",\"1\",\"Assuming\",\"Variable\",\"Value\",\"A\",\"0110 1000\",\"B\",\"0111 0011\",\"Operator\",\"Operation\",\"Result\",\"Description\",\"&\",\"A & B\",\"0110 0000\",\"Bitwise AND\",\"|\",\"A | B\",\"0111 1011\",\"Bitwise OR\",\"^\",\"A ^ B\",\"0001 1011\",\"Bitwise XOR\",\"<<\",\"A << 2\",\"1010 0000\",\"Left shift by 2 bits, padded with 0\",\">>\",\"A >> 2\",\"0001 1010\",\"Right shift by 2 bits, padded with 0\"]},\"88\":{\"h\":\"Assignment Operators\",\"t\":[\"We can use = to assign the result on the right to the left, such as C = A + B\",\"Operator\",\"Operation\",\"Equivalent to\",\"+=\",\"A += B\",\"A = A + B\",\"-=\",\"A -= B\",\"A = A - B\",\"*=\",\"A *= B\",\"A = A * B\",\"/=\",\"A /= B\",\"A = A / B\",\"%=\",\"A %= B\",\"A = A % B\",\"<<=\",\"A <<= 2\",\"A = A << 2\",\">>=\",\"A >>= 2\",\"A = A >> 2\",\"&=\",\"A &= 2\",\"A = A & 2\",\"|=\",\"A |= 2\",\"A = A | 2\",\"^=\",\"A ^= 2\",\"A = A ^ 2\"]},\"89\":{\"h\":\"Other Symbols\",\"t\":[\"Operator\",\"Description\",\"&\",\"Address of\",\"*\",\"Pointer\"]},\"90\":{\"h\":\"Symbol Precedence\",\"t\":[\"From high to low:\",\"Precedence\",\"Operator\",\"5\",\"* / % << >> & &^\",\"4\",\"+ - | ^\",\"3\",\"== != < <= > >=\",\"2\",\"&&\",\"1\",\"||\",\"Parentheses can be used to increase precedence\"]},\"91\":{\"h\":\"Error Handling\"},\"92\":{\"h\":\"Interface\",\"t\":[\"Golang provides an interface type error:\",\"type error interface { Error() string } \",\"Any structure that implements the Error() method belongs to the error type.\"]},\"93\":{\"h\":\"Creating Errors\",\"t\":[\"Golang provides several ways to create an error.\",\"We can use errors.New() or fmt.Errorf() to create errors.\",\"Example\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" ) func main() { // Create error using New err1 := errors.New(\\\"first error\\\") // Create error using fmt err2 := fmt.Errorf(\\\"second %s\\\", \\\"error\\\") fmt.Println(err1, err2) } \"]},\"94\":{\"h\":\"errors.Join\",\"t\":[\"In Go 1.20, errors.Join was introduced to combine multiple errors into one array.\",\"Example\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" ) func main() { // Create error using New err1 := errors.New(\\\"first error\\\") // Create error using fmt err2 := fmt.Errorf(\\\"second %s\\\", \\\"error\\\") // Use join to combine multiple errors err3 := errors.Join(err1, err2) fmt.Println(err1, err2) // Output: first error second error fmt.Println(err3) // Output: // first error // second error } \"]},\"95\":{\"h\":\"errors.Is\",\"t\":[\"We can use errors.Is() to determine whether the current error contains the target type of error.\",\"Example\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" ) func main() { // Create error using New err1 := errors.New(\\\"first error\\\") // Create error using fmt err2 := fmt.Errorf(\\\"second %s\\\", \\\"error\\\") // Use join to combine multiple errors err3 := errors.Join(err1, err2) fmt.Println(err1, err2) // Output: first error second error fmt.Println(err3) // Output: // first error // second error // Use errors.Is() to determine whether the error is the target error. Since err3 contains err1, it is true. fmt.Println(errors.Is(err1, err2)) // Output: false fmt.Println(errors.Is(err3, err1)) // Output: true } \"]},\"96\":{\"h\":\"errors.As\",\"t\":[\"We can use errors.As() to assign the first error in the error that matches the target type to the target object.\",\"Example\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" ) type NormalErr struct { e string } func (t NormalErr) Error() string { return t.e } func main() { // Create error using New err1 := errors.New(\\\"first error\\\") // Create T err2 := NormalErr{\\\"second error\\\"} // Use join to combine multiple errors err3 := errors.Join(err1, err2) var err4 NormalErr errors.As(err3, &err4) fmt.Println(err4) // Output： second error } \"]},\"97\":{\"h\":\"Map\"},\"98\":{\"h\":\"Creating a Map\",\"t\":[\"map is a key-value mapping table, where you can get the corresponding value by using the key.\",\"The declaration of map is as follows:\",\"map[KeyType]ValueType \",\"KeyType is the data type of the key, and ValueType is the data type of the value.\",\"Example\",\"// Declare a map var m map[string]int // Initialize the map using make m = make(map[string]int) // Initialize the map using make and set capacity // m = make(map[string]int, 10) // Set the value m[\\\"path\\\"] = 66 // Print the value fmt.Println(m[\\\"path\\\"]) \"]},\"99\":{\"h\":\"Traversing a Map\",\"t\":[\"Use range to traverse a map.\",\"Example\",\"package main import \\\"fmt\\\" func main() { // Initialize the map var dataMap map[string]string dataMap = make(map[string]string) // Alternatively, you can initialize like this //dataMap := map[string]string{} // Add key-value pairs dataMap[\\\"first\\\"] = \\\"first value\\\" dataMap[\\\"second\\\"] = \\\"second value\\\" dataMap[\\\"third\\\"] = \\\"third value\\\" fmt.Println(\\\"print key and value: \\\") // Use range to traverse key-value pairs for key, val := range dataMap { fmt.Printf(\\\"key: %s - value: %s \\\\n\\\", key, val) } fmt.Println(\\\"print key: \\\") // Use range to traverse keys for key := range dataMap { fmt.Printf(\\\"key: %s \\\\n\\\", key) } fmt.Println(\\\"print value: \\\") // Use range to traverse values for _, val := range dataMap { fmt.Printf(\\\"Value: %s \\\\n\\\", val) } } // Result // print key and value: // key: third - value: third value // key: first - value: first value // key: second - value: second value // print key: // key: first // key: second // key: third // print value: // Value: first value // Value: second value // Value: third value \"]},\"100\":{\"h\":\"Deleting Key-Value Pairs\",\"t\":[\"To delete a key-value pair in a map, use the delete() method.\",\"Example\",\"package main import \\\"fmt\\\" func main() { // Initialize the map var dataMap map[string]string dataMap = make(map[string]string) // Alternatively, you can initialize like this //dataMap := map[string]string{} dataMap[\\\"first\\\"] = \\\"first value\\\" dataMap[\\\"second\\\"] = \\\"second value\\\" dataMap[\\\"third\\\"] = \\\"third value\\\" fmt.Println(dataMap) // Delete a key-value pair delete(dataMap, \\\"first\\\") fmt.Println(dataMap) } // Result: // map[first:first value second:second value third:third value] // map[second:second value third:third value] \"]},\"101\":{\"h\":\"Check if a key exists\",\"t\":[\"Example\",\"package main import \\\"fmt\\\" func main() { // Initialize Map var dataMap map[string]string dataMap = make(map[string]string) dataMap[\\\"first\\\"] = \\\"first value\\\" dataMap[\\\"second\\\"] = \\\"second value\\\" dataMap[\\\"third\\\"] = \\\"third value\\\" // Check if a key exists if val, ok := dataMap[\\\"first\\\"]; ok { fmt.Println(val) } else { fmt.Println(\\\"key not exists\\\") } if val, ok := dataMap[\\\"fourth\\\"]; ok { fmt.Println(val) } else { fmt.Println(\\\"key not exists\\\") } } \"]},\"102\":{\"h\":\"Get the length of a Map\",\"t\":[\"Use len() to get the length of a Map\",\"len(dataMap) \"]},\"103\":{\"h\":\"Concurrency\",\"t\":[\"Maps are not thread-safe in concurrent operations. You can use the official sync.Map{} to solve this problem.\"]},\"104\":{\"h\":\"Slices\"},\"105\":{\"h\":\"Creating Slices\",\"t\":[\"There are three ways to create slices.\",\"package main import \\\"fmt\\\" func main() { // First way: Declare directly var dataSlice []string // Second way: Initialize directly dataSlice1 := []string{} // Third way: Use make dataSlice2 := make([]string, 10) fmt.Println(dataSlice, dataSlice1, dataSlice2) } \",\"You can initialize data directly when creating it.\",\"dataSlice1 := []string{\\\"Jack\\\", \\\"Mike\\\"} \"]},\"106\":{\"h\":\"Slicing Slices\",\"t\":[\"arr[beginIndex:endIndex] can slice the slice, including the data of the beginIndex and excluding the data of the endIndex.\",\"data := []int{0,1,2,3,4,5} fmt.Println(data[2:4]) // Result // [2 3] \"]},\"107\":{\"h\":\"Length and Capacity\",\"t\":[\"Use len() to get the length of the slice and cap() to get the capacity of the slice.\",\"Example\",\"package main import \\\"fmt\\\" func main() { // Create a slice with a length of 5 and a capacity of 9 data := make([]int, 5, 9) fmt.Println(data, len(data), cap(data)) } // Result: // [0 0 0 0 0] 5 9 \"]},\"108\":{\"h\":\"Appending Data\",\"t\":[\"Use the append() function to append data.\",\"Example\",\"package main import \\\"fmt\\\" func main() { data := []int{0,1,2} // Append one piece of data data1 := append(data, 3) // Append multiple pieces of data data2 := append(data, 4, 5, 6) fmt.Println(data) fmt.Println(data1) fmt.Println(data2) } // Result: // [0 1 2] // [0 1 2 3] // [0 1 2 4 5 6] \"]},\"109\":{\"h\":\"Cloning Slices\",\"t\":[\"We know that slices are reference types. If you assign a slice to another variable, the data sharing the same memory address is actually shared. If you want to create two slices with the same data, you can use the copy() method.\",\"Example\",\"package main import \\\"fmt\\\" func main() { data := []int{0,1,2} // Create a slice with the same length data1 := make([]int, len(data)) // Copy data to data1 copy(data1, data) // Add data to data1 data1 = append(data1, 3, 4, 5) fmt.Println(data) fmt.Println(data1) // You will find that data has not been changed. } // Result: // [0 1 2] // [0 1 2 3 4 5] \"]},\"110\":{\"h\":\"Channel\"},\"111\":{\"h\":\"Introduction\",\"t\":[\"A channel is a conduit for end-to-end data communication, often used for data sharing between goroutines.\"]},\"112\":{\"h\":\"Creating a channel\",\"t\":[\"We use make to create a channel\",\"ch1 := make(chan T) // Unbuffered ch2 := make(chan T, 2) // Buffered \",\"T is the data type.\",\"Warning\",\"An unbuffered channel will be blocked until the data is received\",\"A buffered channel will be blocked when the sent data reaches the buffer size\"]},\"113\":{\"h\":\"Sending and receiving data\",\"t\":[\"Using <- pointing to the channel means sending data to that channel, such as ch <- 10\",\"Using <- on the left side of the channel means receiving data, such as <-ch\"]},\"114\":{\"h\":\"Closing a channel\",\"t\":[\"Use close() to close a channel\",\"close(ch) \",\"Warning\",\"If you send a message to a channel that has already been close(), it will cause a panic\",\"Reading from a closed channel can get a zero value, if using range to read channel, then close will terminate the loop\",\"We can use val, ok := <- ch to determine whether it is a zero value, if ok is false then the channel is already close\"]},\"115\":{\"h\":\"Select\",\"t\":[\"We usually use select to receive channel data, you can also use default to set the default action, select can receive multiple channel at the same time, if multiple channel send data at the same time, it will randomly select a channel to complete the operation\",\"select { case <-ch1: // Receive ch1 data fmt.Println(\\\"ch1\\\") case <-ch2: // Receive ch2 data fmt.Println(\\\"ch2\\\") case val := <-ch3: fmt.Println(ch3) //Receive ch3 data and print default: fmt.Println(\\\"default\\\") } \"]},\"116\":{\"h\":\"Example\",\"t\":[\"The timer is implemented through channel to return the timing result\",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { t := time.NewTicker(3*time.Second) fmt.Println(\\\"start\\\") <-t.C fmt.Println(\\\"finish\\\") } \"]},\"117\":{\"h\":\"Precautions\",\"t\":[\"When using channel, be aware that there must be a data receiving end to avoid deadlock problems\"]},\"118\":{\"h\":\"Context\"},\"119\":{\"h\":\"Introduction\",\"t\":[\"Context is a very important interface in Golang, used to define the context information in goroutine. Context is commonly used in the following situations:\",\"Data transfer: Transfer data among multiple goroutines.\",\"Timeout management: By setting a timeout, the termination time of the coroutine can be conveniently configured.\",\"Terminate coroutine: By using the cancel() method, the coroutine can be easily terminated, and multiple coroutines can be managed in batches.\"]},\"120\":{\"h\":\"Context Interface\",\"t\":[\"// A Context carries a deadline, a cancelation signal, and other values across // API boundaries. // // Context's methods may be called by multiple goroutines simultaneously. type Context interface { Done() <-chan struct{} Deadline() (deadline time.Time, ok bool) Err() error Value(key interface{}) interface{} } \"]},\"121\":{\"h\":\"Root Nodes and Derived Nodes\",\"t\":[\"We can create root nodes and derived nodes for context, forming a tree structure. When the root node is cancel() or terminated due to timeout, all its derived nodes will also be terminated, and the data of the root node will be shared by all derived nodes.\",\"context structure\"]},\"122\":{\"h\":\"Creating Root Nodes\",\"t\":[\"ctx := context.Background() // Create a blank context ctx2 := context.TODO() // TODO is also a blank context \"]},\"123\":{\"h\":\"Creating Derived Nodes\",\"t\":[\"Use context.WithXXX() to create derived context\",\"package main import ( \\\"context\\\" \\\"fmt\\\" ) func main() { ctx := context.WithValue(context.Background(), \\\"base\\\", \\\"baseVal\\\") ctx1 := context.WithValue(ctx, \\\"ctx1\\\", \\\"ctx1Val\\\") ctx2 := context.WithValue(ctx, \\\"ctx2\\\", \\\"ctx2Val\\\") ctx3 := context.WithValue(ctx, \\\"ctx3\\\", \\\"ctx3Val\\\") fmt.Println(ctx) fmt.Println(ctx1) fmt.Println(ctx2) fmt.Println(ctx3) } // Results： // context.Background.WithValue(type string, val baseVal) // context.Background.WithValue(type string, val baseVal).WithValue(type string, val ctx1Val) // context.Background.WithValue(type string, val baseVal).WithValue(type string, val ctx2Val) // context.Background.WithValue(type string, val baseVal).WithValue(type string, val ctx3Val) \"]},\"124\":{\"h\":\"WithValue()\",\"t\":[\"context.WithValue() can be used to create derived nodes and add key-value data, while retaining all data of the parent context.\"]},\"125\":{\"h\":\"WithDeadline() WithTimeout()\",\"t\":[\"context.WithDeadline() and context.WithTimeout() can be used to create a context with timeout control.\",\"Warning\",\"WithTimeout(1*time.Second) is equivalent to WithDeadline(time.Now().Add(1*time.Second))\",\"package main import ( \\\"context\\\" \\\"fmt\\\" \\\"time\\\" ) func main() { ctx, _ := context.WithTimeout(context.Background(), 3*time.Second) go func(ctx1 context.Context) { for { select { case <-ctx1.Done(): fmt.Println(\\\"time out\\\") return default: fmt.Println(\\\"running...\\\") time.Sleep(time.Second) } } }(ctx) time.Sleep(5 * time.Second) } // Results： // running... // running... // running... // time out \"]},\"126\":{\"h\":\"WithCancel()\",\"t\":[\"Using WithCancel() can create a manually terminated context. Executing cancel() can manually terminate it.\",\"package main import ( \\\"context\\\" \\\"fmt\\\" \\\"time\\\" ) func main() { ctx, cancel := context.WithCancel(context.Background()) go func(ctx1 context.Context) { for { select { case <-ctx1.Done(): fmt.Println(\\\"canceled\\\") return default: fmt.Println(\\\"running...\\\") time.Sleep(time.Second) } } }(ctx) time.Sleep(3*time.Second) cancel() time.Sleep(5 * time.Second) } // Results： // running... // running... // running... // canceled \"]},\"127\":{\"h\":\"Basic\"},\"128\":{\"h\":\"OSI Seven-Layer Model\",\"t\":[\"Layer\",\"Function\",\"Physical\",\"Mainly implements transparent transmission of bitstreams between adjacent nodes, defines the standards of physical devices, such as the type of network cable, the network card also works at this layer.\",\"Data Link\",\"Assembles the bit data packets passed down from the network layer into frames and sends frames on the link of adjacent nodes. The data link layer divides the 0,1 sequence into meaningful data frames and sends them to the other end.\",\"Network\",\"Selects the appropriate route and switch node, can timely transmit data, the data of this layer is called data packet, the focus is on IP protocol.\",\"Transport\",\"Provides a general data transmission service to the host process. The protocol that needs to be focused on in the transport layer is TCP protocol and UDP protocol.\",\"Session\",\"Responsible for establishing, maintaining and terminating communication between two nodes in the network, common protocols are ADSP, RPC, etc.\",\"Presentation\",\"Mainly responsible for data format conversion, solving communication syntax problems between different systems\",\"Application\",\"Provides interactive services for applications, the purpose is to make it more convenient for applications to receive data from the network, the focus is on HTTP protocol\",\"osi\"]},\"129\":{\"h\":\"TCP and IP Model\",\"t\":[\"OSI Seven-Layer Model\",\"TCP/IP Five-Layer Model\",\"TCP/IP Four-Layer Model\",\"Function\",\"TCP/IP Protocol Suite\",\"Application\",\"Application\",\"Application\",\"File transfer, email, file service, virtual terminal, etc.\",\"SMTP, DNS, Telnet, TFTP, HTTP, SNHP, FTP\",\"Presentation\",\"Application\",\"Application\",\"Data formatting, code conversion, data encryption\",\"None\",\"Session\",\"Application\",\"Application\",\"Dissolve or establish contact with other nodes\",\"None\",\"Transport\",\"Transport\",\"Transport\",\"Provides end-to-end interface\",\"TCP, UDP\",\"Network\",\"Network\",\"Network\",\"Selects routes for data packets\",\"IP, ICHP, RIP, OSPF, BCP, ICMF\",\"Data Link\",\"Data Link\",\"Network Interface\",\"Transmits addressed stops and error detection functions\",\"SLIP, CSLIP, PPP, ARP, RARP, MTU\",\"Physical\",\"Physical\",\"Network Interface\",\"Transmits data in binary form on physical media\",\"IS02110, IEEE802, IEEE802.2\"]},\"130\":{\"h\":\"HTTP\"},\"131\":{\"h\":\"Request Methods\",\"t\":[\"Info\",\"HTTP 1.0 supports three request methods:\",\"GET\",\"POST\",\"HEAD\",\"HTTP 1.1 additionally supports 6 request methods\",\"OPTIONS\",\"PUT\",\"PATCH\",\"DELETE\",\"TRACE\",\"CONNECT\",\"Method\",\"Description\",\"GET\",\"Requests a specified resource, used to get data\",\"HEAD\",\"Similar to GET, but only returns the response header, does not return the response body\",\"POST\",\"Used to submit information to the target address, used for data submission and file upload\",\"PUT\",\"Submits updated information, used to replace original data\",\"DELETE\",\"Deletes the specified resource\",\"CONNECT\",\"Establishes a tunnel with the server\",\"OPTIONS\",\"Returns the HTTP request methods supported by a specific server address, can also be used to test the functionality supported by the server\",\"TRACE\",\"Echoes the request received by the server, mainly used for testing or diagnosis\",\"PATCH\",\"Similar to PUT, mainly used for partial updates\"]},\"132\":{\"h\":\"HTTP Status Codes\",\"t\":[\"Number\",\"Meaning\",\"1XX\",\"Indicative information, indicates that the request has been received, continue processing\",\"2XX\",\"Success, indicates that the request has been successfully received, understood, accepted\",\"3XX\",\"The status code indicates that the resource requested by the client has changed, and the client needs to resend the request with a new URL to get the resource, which is redirection\",\"4XX\",\"The status code indicates that the client's request message is incorrect, the server cannot process, which is the meaning of the error code\",\"5XX\",\"The status code indicates that the client's request message is correct, but an internal error occurred during server processing, which is the server-side error code\",\"Common Status Codes\",\"Sure, here is the English translation of your text:\",\"HTTP Status Code\",\"Name\",\"Description\",\"100\",\"Continue\",\"Continue indicates that the client can continue to submit the request\",\"101\",\"Switching Protocols\",\"Switching Protocols switches the transmission protocol, can only switch from a lower version to a higher version, such as HTTP1.0 switching to HTTP1.1\",\"200\",\"OK\",\"OK indicates that the server has successfully returned the data\",\"201\",\"Created\",\"Created indicates that the server has successfully received the request and created the corresponding resource\",\"202\",\"Accepted\",\"Accepted indicates that the server has accepted the request, the request will be processed\",\"203\",\"Non-Authoritative Information\",\"Non-Authoritative Information indicates that the request was successful, but the returned meta information is not on the original server, but a copy\",\"204\",\"No Content\",\"No Content indicates that the server has successfully processed the request\",\"205\",\"Reset Content\",\"Reset Content the server has successfully processed, the user terminal (e.g., browser) should reset the document view. This return code can clear the browser's form field\",\"206\",\"Partial Content\",\"Partial Content the server has successfully processed part of the GET request\",\"300\",\"Multiple Choices\",\"Multiple Choices the requested resource can include multiple locations, the response can return a list of resource characteristics and addresses for the user terminal (e.g., browser) to choose\",\"301\",\"Moved Permanently\",\"Moved Permanently the requested resource has been permanently moved to a new URI, the return information will include the new URI, the browser will automatically redirect to the new URI. Any new requests in the future should use the new URI instead\",\"302\",\"Found\",\"Found similar to 301. But the resource is only temporarily moved. The client should continue to use the original URI\",\"303\",\"See Other\",\"See Other similar to 301. Use GET and POST requests to view\",\"304\",\"Not Modified\",\"Not Modified the requested resource has not been modified, the server returns this status code, will not return any resources. Clients usually cache accessed resources, by providing a header information indicating that the client wants to only return resources modified after a specified date\",\"305\",\"Use Proxy\",\"Use Proxy the requested resource must be accessed through a proxy\",\"307\",\"Temporary Redirect\",\"Temporary Redirect similar to 302. Use GET request to redirect\",\"400\",\"Bad Request\",\"Bad Request indicates that the client's request message is incorrect\",\"401\",\"Unauthorized\",\"Unauthorized missing or incorrect authentication, this status code must be used with the WWW-Authenticate header field\",\"403\",\"Forbidden\",\"Forbidden indicates that the server prohibits access to resources, it is not the client's request error\",\"404\",\"Not Found\",\"Not Found indicates that the requested resource does not exist or was not found on the server, so it cannot be provided to the client\",\"501\",\"Not Implemented\",\"Not Implemented indicates that the functionality requested by the client is not yet supported\",\"502\",\"Bad Gateway\",\"Bad Gateway is usually an error code returned by the server when it acts as a gateway or proxy, indicating that the server itself is working normally, but an error occurred when accessing the backend server\",\"503\",\"Service Unavailable\",\"Service Unavailable indicates that the server is currently very busy and temporarily unable to respond to the server\",\"504\",\"Gateway Timeout\",\"Gateway Timeout is a gateway timeout, used by the server as a proxy or gateway, indicating that it cannot get a response from the remote server in a timely manner\"]},\"133\":{\"h\":\"HTTPS vs HTTP\",\"t\":[\"Feature\",\"HTTP\",\"HTTPS\",\"Definition\",\"HTTP is the Hypertext Transfer Protocol, used to transfer hypertext from the World Wide Web server to the local browser.\",\"HTTPS is HTTP with security, providing encryption processing, data integrity checking and identity authentication through SSL/TLS.\",\"Port\",\"The default HTTP port is 80.\",\"The default HTTPS port is 443.\",\"Security\",\"HTTP itself is not secure, because data is not encrypted during transmission, it may be obtained by third parties.\",\"HTTPS is secure, because data is encrypted during transmission, preventing it from being obtained by third parties.\",\"Speed\",\"HTTP is relatively fast, because there is no encryption and decryption process.\",\"HTTPS is relatively slow, because data needs to be encrypted and decrypted during transmission.\"]},\"134\":{\"h\":\"Working Principle\",\"t\":[\"The HTTPS protocol will encrypt the transmitted data, and the encryption process uses asymmetric encryption\",\"The Client initiates an HTTPS request\",\"The Server returns the pre-configured public key certificate to the client.\",\"The Client verifies the public key certificate: for example, whether it is within the validity period, whether the purpose of the certificate matches the site requested by the Client, whether it is in the CRL revocation list, whether its superior certificate is valid, this is a recursive process, until it is verified to the root certificate (the Root certificate built into the operating system or the Client), if the verification passes, continue, if not, display a warning message.\",\"The Client uses a pseudorandom number generator to generate the symmetric key used for encryption, then encrypts this symmetric key with the certificate's public key, and sends it to the Server.\",\"The Server uses its own private key to decrypt this message, obtaining the symmetric key. At this point, both the Client and Server hold the same symmetric key.\",\"The Server uses the symmetric key to encrypt the plaintext content A and sends it to the Client.\",\"The Client uses the symmetric key to decrypt the response ciphertext, obtaining the plaintext content A.\",\"The Client initiates an HTTPS request again, encrypts the plaintext content B of the request with the symmetric key, and then the Server uses the symmetric key to decrypt the ciphertext, obtaining the plaintext content B.\",\"https\"]},\"135\":{\"h\":\"HTTP 1.0 vs 1.1 vs 2.0\",\"t\":[\"Differences\",\"Feature\",\"HTTP 1.0\",\"HTTP 1.1\",\"HTTP 2.0\",\"Connection\",\"Non-persistent, each request requires a new connection\",\"Persistent, reduces the overhead of repeated TCP connection establishment and termination\",\"Multiplexing, multiple HTTP requests can be concurrent on a single TCP connection\",\"Head-of-line blocking\",\"Exists, the next request can only be sent after the response of the previous request arrives\",\"Exists, although multiple requests can be initiated, the server must send responses in the order of received requests\",\"Solved, multiple requests or responses can be concurrent in a single connection without having to correspond one by one\",\"Header compression\",\"Not supported\",\"Not supported\",\"Supported, uses HPACK algorithm to compress headers\",\"Server push\",\"Not supported\",\"Not supported\",\"Supported\"]},\"136\":{\"h\":\"Digital Certificate\",\"t\":[\"A digital certificate is an authoritative electronic document that provides a way to verify identity on the Internet. Digital certificates verify the online credentials and identity of individuals or organizations, and let network users and recipients know that the data they enter will go to a trusted source. They are similar to security badges for websites and users, and help ensure the security of the Internet.\",\"Digital certificates are issued by Certificate Authorities (CAs) for encrypting online data. Digital certificates are also known as public key certificates or identity certificates. For example, TLS/SSL certificates have two purposes: to encrypt and protect data transmitted between websites, browsers, and web servers, and to help identify and verify the owner of the website.\",\"The basic architecture of a digital certificate is Public Key Infrastructure (PKI), which uses a pair of keys to implement encryption and decryption. The keys include a private key and a public key. The private key is mainly used for signing and decryption, is user-defined, and is known only to the user; the public key is used for signature verification and encryption, and can be shared by multiple users.\",\"The application of digital certificates is very wide. For example, using digital certificates in secure email can construct secure email certificates, mainly for encrypting the transmission of emails, protecting the security of emails during transmission and reception. In addition, digital certificates can also be used for terminal protection. For example, if a digital certificate is installed during the process of e-commerce activities, then even if its account or password and other personal information are stolen, the information and financial security in its account can still be effectively guaranteed.\"]},\"137\":{\"h\":\"How Digital Signature Works\",\"t\":[\"signature\",\"Signature Process\",\"Use the signature hash algorithm (such as sha256md5) to calculate information including the issuer's information, the certificate holder's information, the certificate validity period, the certificate holder's public key, etc. (as in the example of x.509), to generate a certificate digest α.\",\"The issuer generates a pair of private and public keys, then uses the private key to encrypt the fingerprint, and the encrypted data is the issuer's digital signature γ.\",\"Attach the digital signature γ to the digital certificate to form a signed digital certificate.\",\"The issuer gives the signed digital certificate and the public key to the certificate holder.\",\"Verification Process\",\"The user obtains the signed digital certificate through some means (for example, browser access), and after parsing, the digital signature γ and the digital certificate can be obtained.\",\"The user uses the fingerprint algorithm in the digital certificate to recalculate the relevant content of the digital certificate, generating a new fingerprint β.\",\"At the same time, the user uses the obtained issuer's public key to decrypt the digital signature, and obtains the decrypted fingerprint α.\",\"Compare the two fingerprints α and β. If they are the same, it proves that the certificate is legal, and the user can trust and use the information in the certificate (for example, the holder's public key).\",\"Example: Information contained in an X.509 certificate\",\"Certificate version information\",\"Certificate serial number\",\"Signature algorithm used by the certificate\",\"Name of the certificate issuing authority\",\"Certificate validity period, now commonly used certificates generally use UTC time format, its timing range is 1950-2049\",\"Name of the certificate owner\",\"Public key of the certificate owner\",\"Signature of the certificate issuer on the certificate\",\"Functions\",\"Data encryption: Encrypt data to ensure data security\",\"Identity confirmation: Ensure the correct identity of both parties\",\"Non-tampering: Unable to modify signed files\",\"Non-repudiation: Under the supervision of CA, ensure that transactions cannot be denied after they are concluded\"]},\"138\":{\"h\":\"IP\"},\"139\":{\"h\":\"IP\",\"t\":[\"IP (Internet Protocol) and TCP together form the TCP/IP protocol stack, which is one of the core protocols of the Internet.\",\"IP has the following characteristics:\",\"Stateless: It does not store any state information, which means that IP packets can be unordered and duplicated.\",\"Connectionless: It does not require establishing a connection, and both the sender and receiver do not need to store information about each other. The destination IP address needs to be specified for each transmission.\",\"Unreliable: IP cannot guarantee that packets will always be delivered. They may be lost or discarded due to timeouts.\"]},\"140\":{\"h\":\"Structure\",\"t\":[\"ipv4 header\",\"Field Descriptions\",\"Field\",\"Description\",\"Version\",\"Occupies 4 bits and is used to identify the version number of the IP header. The IPv4 version number is 4.\",\"Header Length\",\"Represents the size of the IP header, with a minimum value of 5 (54 = 20 bytes) and a maximum value of 15 (154 = 60 bytes).\",\"Differentiated Services (DS)\",\"Used to represent the type of service. It can be divided into DSCP and ECN (Explicit Congestion Notification).\",\"Total Length\",\"Represents the total number of bytes of the IP header and the data section combined.\",\"Identification\",\"Used for fragmentation and reassembly. This field is incremented by 1 for each generated datagram during fragmentation.\",\"Flags\",\"Represents the relevant information about packet fragmentation.\",\"Fragment Offset\",\"Used to identify the position of each segment being fragmented relative to the original data, in units of 8 bytes.\",\"Time to Live (TTL)\",\"Decreases by one for each router the packet passes through. When it reaches zero, the packet is discarded.\",\"Protocol\",\"The protocol used in the data section of the packet.\",\"Header Checksum\",\"Used to check if the packet is damaged.\",\"Source Address\",\"Represents the IP address of the sender.\",\"Destination Address\",\"Represents the IP address of the receiver.\",\"Options\",\"Additional information.\",\"Data\",\"The content of the transmitted data.\",\"Version Number Corresponding to Digits\",\"Version\",\"Description\",\"Status\",\"0\",\"Pre-Internet Protocol, before v4\",\"Reserved\",\"1–3\",\"Unassigned\",\"4\",\"Internet Protocol version 4 (IPv4)\",\"Active\",\"5\",\"Internet Stream Protocol or ST\",\"Deprecated\",\"5\",\"Internet Stream Protocol or ST-II\",\"Deprecated\",\"6\",\"Simple Internet Protocol (SIP)\",\"Deprecated\",\"6\",\"Internet Protocol version 6 (IPv6)\",\"Active\",\"7\",\"TP/IX Next Generation Internet (IPv7)\",\"Deprecated\",\"8\",\"P Internet Protocol (PIP)\",\"Deprecated\",\"9\",\"TCP and UDP Large Addresses (TUBA)\",\"Deprecated\",\"10–14\",\"Unassigned\",\"15\",\"Version field reserved value\",\"Reserved\",\"Flags Description\",\"This 3-bit field is used to control and identify fragmentation. They are:\",\"Bit\",\"Description\",\"0\",\"Reserved, must be set to 0\",\"1\",\"Don't Fragment (DF)\",\"2\",\"More Fragments (MF)\",\"Warning\",\"If the DF flag is set to 1 but the route requires the packet to be fragmented, the packet will be discarded.\",\"For fragmented packets, except for the last fragment, the MF flag is set to 1, and the fragment offset field of the last fragment is not 0.\",\"Common IP Options\",\"Security Options: Used to provide network security functions, such as data encryption, authentication, and access control.\",\"Record Route Option: Enables the IP datagram to record the IP addresses of the routers it passes through in the transmission path, for diagnosing network problems or tracing the path of packets.\",\"Loose Source Routing: Specifies the transmission path of the data packet, requiring the packet to pass through specified intermediate nodes, but allowing other nodes on the path to make certain choices.\",\"Strict Source Routing: Specifies the transmission path of the data packet, requiring the packet to be delivered in the specified node order, and other nodes cannot participate.\",\"Timestamp Option: Inserts timestamp information into the packet to measure the time required for the packet to be transmitted from the source to the destination.\"]},\"141\":{\"h\":\"Fragmentation\",\"t\":[\"MTU\",\"Maximum Transmission Unit (MTU) refers to the maximum packet size (in bytes) that can be transmitted at the data link layer.\",\"When an IP packet is transmitted over a link layer and the packet size exceeds the link layer's MTU, the packet needs to be fragmented. The length of each fragment must be less than or equal to the MTU minus the IP header length.\",\"Fragmentation Process\",\"Each fragmented data segment is placed in an independent IP datagram, and the corresponding fields in the datagram need to be modified:\",\"Modify the total length field to the length of the current fragment.\",\"Except for the last fragment, set the More Fragments (MF) flag to 1.\",\"Adjust the fragment offset.\",\"Recalculate the checksum.\",\"Example\",\"An IP datagram with a header length of 20 bytes and a data payload of 4000 bytes (total length: 4020 bytes) is transmitted over a link with an MTU of 2500 bytes. It will be divided into two fragments:\",\"Total Length\",\"Header\",\"Data\",\"More Fragments (MF)?\",\"DF\",\"Fragment Offset\",\"2500\",\"20\",\"2480\",\"Yes\",\"0\",\"0\",\"1540\",\"20\",\"1520\",\"No\",\"0\",\"310 (2480/8)\",\"Similarly, when the MTU becomes smaller, the cut fragments will be further divided.\"]},\"142\":{\"h\":\"Reassembly\",\"t\":[\"How to Determine if Data is Fragmented?\",\"DF flag is 0\",\"Fragment offset field is not 0\",\"The receiver collects the fragments and sorts them based on the offset. Once all the fragments are collected, they are reassembled and submitted to the upper protocol stack.\"]},\"143\":{\"h\":\"IPV6\",\"t\":[\"IPV6\",\"Differences between IPv4 and IPv6\",\"Feature\",\"IPv4\",\"IPv6\",\"Address Length\",\"32 bits, providing about 4.3 billion addresses\",\"128 bits, providing a vast number of addresses\",\"Address Notation\",\"Dotted decimal notation, e.g., 192.168.0.1\",\"Colon hexadecimal notation, e.g., 2001:0db8:85a3:0000:0000:8a2e:0370:7334\",\"Header Length\",\"Fixed, 20 bytes\",\"Fixed, 40 bytes\",\"Quality of Service (QoS)\",\"Limited native support\",\"Native support, including flow labels and flow priorities\",\"Security\",\"Requires the use of IPSec\",\"Native support for IPSec\",\"Configuration\",\"Manual or DHCP\",\"Manual, automatic (based on link-local addresses and router announcements), or DHCPv6\"]},\"144\":{\"h\":\"What is IP Spoofing?\",\"t\":[\"IP spoofing refers to the technique of forging the IP address of a host. An attacker can send a large number of data segments with different IP addresses and the RST flag set to a server, causing the server to disconnect from the host. If other hosts need to access the server, they will need to establish a new connection. Alternatively, the attacker can impersonate another host and establish a connection with the server to steal data.\"]},\"145\":{\"h\":\"TCP/UDP\"},\"146\":{\"h\":\"TCP\",\"t\":[\"Transmission Control Protocol (TCP) is a connection-oriented, reliable, byte-stream-based transport layer communication protocol.\"]},\"147\":{\"h\":\"TCP Header Structure\",\"t\":[\"tcp header\",\"TCP Header Field\",\"Description\",\"Source Port\",\"Sender's port number, range (0~65535)\",\"Destination Port\",\"Receiver's port number, range (0~65535)\",\"Sequence Number\",\"If the TCP data is too large (greater than the allowable degree of IP packet), it needs to be segmented. This sequence number records the sequence number of each packet, allowing the receiver to reassemble the TCP data. The value of the sequence number field refers to the sequence number of the first byte of data sent by this segment. Abbreviated as seq\",\"Acknowledgment Number\",\"To confirm that the receiver has indeed received the packet data sent out by the sender, when the sender receives this acknowledgment code, it can confirm that the previous packet has been correctly received. This acknowledgment number is the sequence number of the first byte of data from the next segment expected to be received from the other party. Abbreviated as ack\",\"Header Length\",\"Indicates the length of the TCP header, range (0~15), unit 32bit, for example, when the value is 5, it means that the header length is 20Byte(160bit), if the option field is empty, then the TCP header length is 20Byte, that is, the value is 5\",\"URG\",\"URG=1 indicates that there is urgent data, the last byte of the urgent data is pointed out by the urgent data pointer, generally less used\",\"ACK\",\"ACK=1 indicates that the value in the acknowledgment number field is valid, 0 indicates invalid\",\"PSH\",\"URG=1 indicates that the urgent pointer field is valid, representing that this packet is an urgent packet. It tells the system that there is urgent data in this segment and should be transmitted as soon as possible (equivalent to high-priority data)\",\"RST\",\"RSP=1 rebuilds the connection, if the RST bit is received, some errors usually occur\",\"SYN\",\"SYN=1 indicates that this is a connection request or connection acceptance message, generally used in the handshake stage\",\"FIN\",\"FIN=1 indicates that the data of the sender of this segment has been sent and requests to release the transport connection\",\"Receive Window\",\"Used for flow control, indicating the number of bytes the receiver is willing to receive, range 0~65535 bytes\",\"Checksum\",\"The checksum covers the entire TCP segment, i.e., the TCP header and TCP data. This is a mandatory field, it must be calculated and stored by the sender, and verified by the receiver\",\"Urgent Data Pointer\",\"When URG=1 is valid, it is a positive offset, and the sum with the value in the sequence number represents the sequence number of the last byte of urgent data\",\"Options\",\"Used when the sender and receiver negotiate the maximum segment length (MSS) (only exists in SYN messages) or used as a window adjustment factor in high-speed network environments, can also store timestamp data\"]},\"148\":{\"h\":\"TCP State Machine\",\"t\":[\"TCP Stateful\"]},\"149\":{\"h\":\"TCP Three-Way Handshake\",\"t\":[\"TCP Connection\",\"Three-Way Handshake Process\",\"The client sends SYN=1, and specifies the client's initial sequence number ISN, i.e., x.\",\"The server sends its own SYN segment as an acknowledgment, also specifying its own ISN, i.e., y. To acknowledge the client's SYN, it sets ACK to x+1. In this way, each time a SYN is sent, the sequence number will increase by 1. If there is a loss, it will be retransmitted.\",\"To acknowledge the server's SYN, the client sets ACK to y+1 in the returned value.\",\"TCP Four-Way Handshake\",\"The client sends FIN=1, and includes its current sequence number x+2. It also includes an ACK=y+1 to acknowledge the data most recently received from the other side.\",\"The server adds 1 to the value x+2 as the ACK sequence number, indicating that the previous packet has been received. At this time, the upper-layer application will be notified that the other end has initiated a shutdown operation, which usually causes the application to initiate its own shutdown operation.\",\"The server initiates its own FIN=1, seq=y+1.\",\"The client acknowledges, sends ACK=y+2 to the server.\",\"Why is a three-way handshake needed? What is its purpose?\",\"Details\",\"The process of TCP establishing a connection is the process of synchronizing sequence numbers, SYN (Synchronize Sequence Numbers) is to synchronize sequence numbers. Therefore, the purpose of the three-way handshake is to allow the client (Client) and the server (Service) to obtain each other's sequence number.\",\"Why is a four-way handshake needed? What is its purpose?\",\"Details\",\"The reason why a four-way handshake is needed is because TCP is a full-duplex protocol, i.e., both the client and the server can actively send messages, so both ends need to send disconnect instructions after the transmission is completed, and need to send FIN=1 separately to disconnect, and use ACK to determine whether the sending was successful.\",\"What happens if SYN times out during connection?\",\"Details\",\"If the client sends a SYN command, and drops the line before the server returns the SYN command, the server will try to resend the SYN-ACK command. Under Linux, the default is to retry 5 times, the interval time starts to double from 1s, i.e., 1s, 2s, 4s, 8s, 16s, so the timeout time is 1s + 2s + 4s+ 8s+ 16s + 32s = 63s. After the timeout, TCP will disconnect.\"]},\"150\":{\"h\":\"How does TCP ensure the reliability of transmission?\",\"t\":[\"TCP ensures the reliability of data transmission through the following features\",\"Sequence numbers and acknowledgments\",\"Timeout retransmission\",\"Flow control\",\"Congestion control\",\"Checksum\"]},\"151\":{\"h\":\"\",\"t\":[\"TCP uses sequence numbers to sort and deduplicate packets, and through the ACK acknowledgment mechanism, it ensures that packets are successfully delivered, ensuring the integrity of the data.\"]},\"152\":{\"h\":\"\",\"t\":[\"TCP can retransmit packets until an ACK acknowledgment is received when packets are lost or delayed, through the timeout retransmission mechanism.\",\"What is RTT? What is RTO?\",\"Details\",\"RTT stands for Round Trip Time, which refers to the time required for data to be transmitted from the sender to the receiver and back. RTT is used to measure network latency, that is, the total time that data passes through during transmission.\",\"RTO stands for Retransmission Timeout, which refers to the time that the sender waits for acknowledgment (ACK) after sending data in network communication. If the sender does not receive an acknowledgment within the RTO time, it will assume that the data is lost and resend the data.\",\"The calculation of RTO is usually based on the measurement of RTT. The sender estimates the RTO of the next data transmission based on the previous RTT. In general, the value of RTO will be larger than RTT to ensure that data can be successfully retransmitted even in cases of high or unstable network latency.\",\"The calculation method of RTO can vary depending on the specific network protocol or implementation, but its purpose is to ensure the reliable transmission of data to cope with problems such as packet loss, delay, and congestion in the network.\",\"What is the impact of RTO length on retransmission?\",\"Details\",\"If the RTO is too long, the retransmission time will be greatly extended, reducing transmission efficiency. If the RTO is too short, it may lead to frequent retransmissions, exacerbating network congestion, and further triggering more retransmissions.\",\"Common retransmission mechanisms\",\"Details\",\"Timeout retransmission\",\"timeout retransmission\",\"There are two situations for timeout retransmission, the timeout caused by the loss of the sent data packet, and the timeout caused by the loss of the returned ACK data packet. Under the timeout retransmission mechanism, a timer is started every time a data packet is sent. If the timer expires, retransmission will be triggered. If the retransmission fails, the next timeout time will be twice the current value. The disadvantage of timeout retransmission is that the cycle is long, which may reduce efficiency.\",\"Fast retransmission\",\"tcp\",\"Under the fast retransmission mechanism, after a data packet is lost, the receiving end immediately returns a duplicate acknowledgment packet for each out-of-order packet received, informing the sending end of the missing packet. When the sender receives three duplicate acknowledgment packets, it will immediately retransmit the missing packet.\",\"Under the fast retransmission mechanism, we can see that the packets 3,4,5 all return ACK=2, so we need to retransmit the packets 3,4,5. Is there a way to not need to retransmit packets 3,4,5?\",\"SACK (Selective Acknowledgment)\",\"SACK\",\"The SACK method (RFC 2018) adds a buffer to the tcp option field to record the transmitted packets, so that the sender can see the packets that have not been successfully transmitted, allowing the sender to only transmit the missing packets without needing to retransmit other packets.\",\"D-SACK (Duplicate SACK)\",\"D-SACK (RFC 2883) mainly solves the problem of ACK loss. D-SACK uses the first segment of SACK as a flag to mark the packets that have been ACKed. When the receiving end receives a duplicate packet, it will write the packet into the D-SACK flag, telling the sender that the packet has been received, and the ACK may have been lost.\"]},\"153\":{\"h\":\"\",\"t\":[\"TCP uses a sliding window to control traffic, allowing the sender to control the speed of data transmission based on the receiver's receiving capacity.\",\"Warning\",\"The receiver will write the currently available window size into the TCP header when responding with ACK, and the sender adjusts the transmission rate based on the window size.\"]},\"154\":{\"h\":\"\",\"t\":[\"Algorithms\",\"Slow Start\",\"Congestion Avoidance\",\"Fast Retransmit\",\"Fast Recovery\",\"Congestion Control\",\"Related Terms\",\"cwnd - Congestion Window\",\"ssthresh - Slow Start Threshold\",\"Important\",\"If cwnd < ssthresh, use the Slow Start algorithm.\",\"If cwnd > ssthresh, use the Congestion Avoidance algorithm.\",\"If cwnd = ssthresh, use either the Slow Start or Congestion Avoidance algorithm.\"]},\"155\":{\"h\":\"\",\"t\":[\"In the Slow Start phase, the initial value of cwnd is 1, and cwnd will double every time a propagation round passes, until it reaches ssthresh.\"]},\"156\":{\"h\":\"\",\"t\":[\"When cwnd reaches ssthresh, the Congestion Avoidance algorithm will be executed. At this time, the growth of cwnd changes from doubling to adding 1 every time a propagation round passes. If the sender detects network congestion (i.e., the sent message does not get a timely response), it will set ssthresh to half of the cwnd value when network congestion occurs, and the value of cwnd will be reset to 1, and Slow Start will be re-executed.\"]},\"157\":{\"h\":\"\",\"t\":[\"Fast Retransmit has been introduced earlier, that is, if three consecutive duplicate acknowledgments are received, the yet-to-be-received packet segment will be sent immediately. The Fast Recovery algorithm needs to be used in conjunction with the Fast Retransmit algorithm.\",\"Fast Recovery Algorithm\",\"When the sender receives three consecutive duplicate acknowledgments, it halves ssthresh.\",\"Set cwnd to the size of ssthresh\"]},\"158\":{\"h\":\"\",\"t\":[\"TCP will also calculate a checksum for the data to ensure that the data is not lost or erroneous during transmission.\"]},\"159\":{\"h\":\"UDP\",\"t\":[\"UDP, short for User Datagram Protocol, is a connectionless transport layer protocol in the OSI (Open Systems Interconnection) reference model. It provides a simple, unreliable transaction-oriented message delivery service, and its official specification is IETF RFC 768.\"]},\"160\":{\"h\":\"Characteristics\",\"t\":[\"Connectionless: UDP does not need to establish a connection between the client and the server before transmitting data.\",\"Fast: Since UDP does not need to handshake or check whether the data has arrived correctly, it can transmit data faster than TCP.\",\"Unreliability: Once the datagram is sent, it is impossible to know whether it has arrived safely and completely. If the UDP datagram is lost during transmission, it will not be resent.\",\"Widely used: UDP is used to support network applications that need to transmit data between computers. Many client/server model network applications, including network video conferencing systems, need to use the UDP protocol. For example, many Internet phone services use IP voice (VoIP) usually sent using UDP.\"]},\"161\":{\"h\":\"Structure\",\"t\":[\"Field\",\"Size\",\"Description\",\"Source Port\",\"16-bit\",\"Source port number. If all are 0, no reply is allowed\",\"Destination Port\",\"16-bit\",\"Destination port number\",\"Length\",\"16-bit\",\"Length of the UDP user datagram, its minimum value is 8 (header only)\",\"Checksum\",\"16-bit\",\"Detect whether the data is lost or modified during transmission\"]},\"162\":{\"h\":\"Broadcast Types\",\"t\":[\"Type\",\"Description\",\"Unicast\",\"Used for end-to-end communication between two hosts. That is, one-to-one (client and server point-to-point connection)\",\"Broadcast\",\"Used for a host to communicate with all hosts on the entire LAN. That is, one to all. Broadcasting is prohibited from transmitting on the Internet broadband network (broadcast storm)\",\"Multicast\",\"Communicate with a specific group of hosts, not all hosts on the entire LAN. That is, one to a group\",\"Warning\",\"TCP only supports one-to-one\",\"UDP multicast is more commonly used, broadcast is only used for LAN\",\"Difference between TCP and UDP\",\"Feature\",\"TCP\",\"UDP\",\"Reliable Transmission\",\"Yes\",\"No\",\"Connection\",\"Connection-oriented\",\"Connectionless\",\"Data Orderliness\",\"Yes\",\"Not guaranteed\",\"Data Boundary\",\"Not preserved\",\"Preserved\",\"Transmission Speed\",\"Relatively slow\",\"Fast\",\"Flow Control and Congestion Control\",\"Yes\",\"No\",\"Protocol Type\",\"Heavyweight\",\"Lightweight\",\"Header Length\",\"20 bytes\",\"8 bytes\"]},\"163\":{\"h\":\"Common TCP/UDP Attacks\",\"t\":[\"SYN Flood Attack\",\"The principle of a SYN Flood attack is very simple. It takes advantage of the server's timeout mechanism. When the receiver receives a SYN request, it responds with a SYN + ACK reply. If the receiver doesn't receive a response to its reply, it retries the connection (learn more about what happens when SYN times out in the TCP three-way handshake and four-way handshake). This creates a half-open connection state. An attacker can exploit this by sending a large number of half-open connection requests from multiple hosts to the server, eventually causing the server's resources to be exhausted and unable to provide services.\",\"Tips\",\"How to detect SYN Flood attacks?\",\"Increased inbound network traffic: SYN Flood causes a sudden increase in inbound network traffic to the server.\",\"Decreased network performance: SYN Flood leads to a decline in network performance.\",\"Numerous SYN half-open connections: SYN Flood generates a large number of half-open connections.\",\"Unresponsive server: SYN Flood prevents the server from responding to requests.\",\"How to mitigate?\",\"Defense Measure\",\"Description\",\"Increase maximum half-open connections\",\"Increasing the maximum number of half-open connections allows the server to handle a large number of incoming SYN requests, providing a buffer against flood attempts.\",\"Filtering\",\"Set up rules in network devices to identify and block malicious SYN requests based on specific patterns or known malicious IP addresses.\",\"Reduce SYN-RECEIVED timer\",\"By reducing the time the server waits for an ACK response after sending SYN-ACK, resources allocated to half-open connections can be released more quickly.\",\"SYN cache\",\"The server uses a cache to store minimal information about each request, minimizing resource consumption.\",\"SYN Cookies\",\"The server responds with a SYN-ACK without immediately allocating resources for the connection. Resources are allocated only upon receiving a legitimate ACK response.\",\"Load balancer\",\"Distribute incoming network traffic across multiple servers, ensuring that no single server becomes the primary target of the attack.\",\"Firewall and proxy\",\"Deploying firewalls and proxies can filter out malicious traffic before it reaches the target server, providing an additional layer of defense.\",\"Honeypots and honeynets\",\"Honeypots absorb and divert attacks, providing valuable distractions to attackers and protecting critical infrastructure. Honeynets gather threat intelligence by collecting data on attacker strategies.\",\"Rate limiting\",\"Limiting the rate of incoming connection requests is an important strategy to prevent SYN flood attacks.\",\"Hybrid approaches\",\"Combining multiple techniques can create layered defenses against TCP SYN Flood attacks, ensuring that protection remains even if one method fails.\",\"Cloud-based DDoS protection solutions\",\"Utilizing cloud-based DDoS protection solutions can offload and filter traffic to dedicated platforms capable of handling large-scale attacks.\",\"What is a UDP Flood Attack?\",\"Important\",\"When a server receives a UDP packet, it performs the following operations:\",\"Checks if any program is listening on the corresponding port.\",\"If no program is found, the server responds with an ICMP packet indicating the destination is unreachable.\",\"Therefore, an attacker can overwhelm the server's resources by frequently sending a large number of UDP requests to multiple ports, causing the server to exhaust its resources while handling a large number of responses.\",\"How to mitigate?\",\"One way to mitigate UDP Flood attacks is by limiting the ICMP response time. However, this can also impact legitimate PING requests.\"]},\"164\":{\"h\":\"DNS\"},\"165\":{\"h\":\"Introduction\",\"t\":[\"DNS (Domain Name System) is a distributed database used to store the mapping between domain names and IP addresses. It allows users to access target addresses using domain names without needing to remember the IP addresses. The process of obtaining the IP address from a domain name is called DNS resolution.\",\"Steps for accessing a website in a browser\",\"Send a domain name request to the DNS server.\",\"Obtain the IP address corresponding to the domain name.\",\"Send a request to the target website using the IP address.\",\"dns\"]},\"166\":{\"h\":\"DNS Resolution Process\",\"t\":[\"Check local DNS cache: First, check the browser cache. If the DNS information for the domain name is not cached in the browser, the computer will check the system cache to see if there is any configuration in the Hosts file or cached information for the domain name. If it still doesn't exist, it will check the cache in the router.\",\"ISP cache: If there is no cache in the local DNS, it will enter the ISP's DNS cache to search. Internet service providers usually cache some DNS information.\",\"Root domain server query: If the corresponding data is not found in the above two caches, a query request will be sent to the root server. If the domain name belongs to another top-level domain server, the root server will send the IP address of the top-level server to the client. Otherwise, it will directly return the corresponding IP information.\",\"Top-level domain server query: If the top-level domain server cannot find the record, it will return the IP address of the authoritative domain server within its jurisdiction.\",\"Authoritative domain (primary domain) server query: If the authoritative domain server still cannot find the information, it will recursively query the next-level server until the result is found.\",\"Save the result: When the domain server obtains the IP address information, it will return the data to the client, which will cache the IP address information and then send a request to the IP address.\"]},\"167\":{\"h\":\"DNS Record Types\",\"t\":[\"Record Type\",\"Description\",\"A\",\"Host IP address\",\"AAAA\",\"Host IPv6 address\",\"ALIAS\",\"Automatically resolved alias\",\"CNAME\",\"Canonical name of an alias\",\"MX\",\"Mail exchange server\",\"NS\",\"Name server\",\"TXT\",\"Descriptive text\"]},\"168\":{\"h\":\"Common DNS Attacks\",\"t\":[\"Attack Type\",\"Description\",\"DNS Spoofing/Cache Poisoning\",\"An attack that introduces forged DNS data into the cache of a DNS resolver, causing the resolver to return incorrect IP addresses.\",\"DNS Tunneling\",\"An attack that establishes a tunnel using DNS queries and responses through another protocol.\",\"DNS Hijacking\",\"An attack that redirects queries to other domain name servers.\",\"NXDOMAIN Attack\",\"An attack that attempts to cause a denial of service by flooding a DNS server with requests for non-existent domains.\",\"Phantom Domain Attack\",\"An attack that sets up \\\"phantom\\\" domain servers that respond slowly or not at all, causing performance degradation and denial of service.\",\"Random Subdomain Attack\",\"An attack that sends DNS queries for non-existent subdomains of legitimate sites, causing denial of service.\",\"Domain Lock Attack\",\"An attack that establishes TCP connections with other legitimate resolvers and sends slow, random packet streams to consume resolver resources.\",\"CPE Attack based on Zombie Networks\",\"An attack that uses compromised CPE devices to perform random subdomain attacks against a site or domain.\"]},\"169\":{\"h\":\"ARP\"},\"170\":{\"h\":\"Introduction\",\"t\":[\"The Address Resolution Protocol (ARP) is an important protocol in IPv4 that is used to determine the MAC address of a target device based on its IP address, ensuring the correct delivery of data.\",\"MAC Address\",\"The Media Access Control Address (MAC) is also known as the hardware address, which uniquely identifies network devices such as network cards and routers. The MAC address is 48 bits long, with the first 24 bits managed by IEEE and the last 24 bits managed by hardware vendors. Unlike the dynamic allocation of IP addresses, MAC addresses are generally written into firmware or hardware and cannot be modified.\",\"MAC: FF-FF-FF-FF-FF-FF is the reserved broadcast address.\",\"Structure of MAC Address\",\"Bits\",\"Meaning\",\"1st bit\",\"Unicast address (0)/Multicast address (1)\",\"2nd bit\",\"Global address (0)/Local address (1)\",\"3rd-24th bits\",\"Managed by IEEE and guaranteed to be unique\",\"25th-48th bits\",\"Managed by vendors and guaranteed to be unique\"]},\"171\":{\"h\":\"ARP Packet\",\"t\":[\"Length (bits)\",\"48\",\"48\",\"16\",\"16\",\"16\",\"8\",\"8\",\"16\",\"48\",\"32\",\"48\",\"32\",\"Data Type\",\"Destination Ethernet Address\",\"Source Ethernet Address\",\"Frame Type\",\"Hardware Type\",\"Protocol Type\",\"Hardware Address Length\",\"Protocol Address Length\",\"Operation Code\",\"Source Hardware Address\",\"Source Protocol Address\",\"Destination Hardware Address\",\"Destination Protocol Address\",\"Composition\",\"14 bytes Ethernet header\",\"28 bytes ARP request/response\",\"Tips\",\"Field\",\"Length\",\"Description\",\"Ethernet destination MAC\",\"48 bits\",\"Ethernet destination MAC address. This field in an ARP Request packet is the broadcast address 0xffff-ffff-ffff\",\"Ethernet source MAC\",\"48 bits\",\"Ethernet source MAC address.\",\"Frame type\",\"16 bits\",\"Data type. The value of this field is 0x0806 for an ARP Request or Reply packet\",\"Hardware type\",\"16 bits\",\"Type of the hardware address. The value of this field is 1 for an Ethernet.\",\"Protocol type\",\"16 bits\",\"Type of the protocol address to be mapped on the sender. The value of this field is 0x0800 for an IP address.\",\"Hardware address length\",\"8 bits\",\"Hardware address length. The value of this field is 6 for an ARP Request or Reply packet.\",\"Protocol address length\",\"8 bits\",\"Protocol address length. The value of this field is 4 for an ARP Request or Reply packet.\",\"OP\",\"16 bits\",\"Operation type. The values are as follows: 1: ARP Request packet 2: ARP Reply packet\",\"Source MAC\",\"48 bits\",\"Source MAC address. The value of this field is the same as the Ethernet source MAC address in the Ethernet frame header.\",\"Source IP\",\"32 bits\",\"Source IP address\",\"Destination MAC\",\"48 bits\",\"Destination MAC address. The value of this field in an ARP Request packet is 0x0000-0000-0000\",\"Destination IP\",\"32 bits\",\"Destination IP address\"]},\"172\":{\"h\":\"Working Principle\",\"t\":[\"In network devices that support the TCP/IP protocol, each maintains an ARP cache table. The cache table stores the mapping relationship of IP addresses, in the format IP - MAC address - Time to Live (TTL), where the default value of TTL is 20 minutes.\",\"Example\",\"Suppose there are the following devices in the local area network:\",\"Host Name\",\"IP Address\",\"MAC Address\",\"A\",\"192.168.50.00\",\"00-AA-00-10-A2-00\",\"B\",\"192.168.50.01\",\"00-BB-00-10-B2-00\",\"C\",\"192.168.50.02\",\"00-CC-00-10-C2-00\",\"D\",\"192.168.50.03\",\"00-DD-00-10-D2-00\",\"E\",\"192.168.50.04\",\"00-EE-00-10-E2-00\",\"If A (192.168.50.00) sends data to D (192.168.50.03), the following steps will be executed:\",\"If the ARP cache table of host A contains the IP address of host D, it will directly get the MAC address of host D from the cache table, write the MAC address into the data frame and send it.\",\"If the ARP cache table of host A does not contain the IP address of host D, it will broadcast in the network, with the broadcast address. All hosts in the network will receive this broadcast.\",\"After receiving the broadcast, host D will respond to host A, using unicast to tell host A its MAC address. Other hosts will not respond after receiving the broadcast. After receiving the response, host A can send messages to host D and update its own cache table.\",\"What if the hosts are not in the same local area network?\",\"If host A and host D are not in the same local area network and are connected through two routers, the router where A is located will get the IP and MAC address of the target subnet router based on the target IP. The steps are as follows:\",\"Host A will first determine whether host D is in the same segment. If not in the same segment, host A will try to get the MAC address of the default gateway (usually the local router).\",\"Host A sends data to the router, and the data will be forwarded by the router.\",\"Before forwarding the data, the router obtains the MAC address of the target router through the ARP protocol.\",\"The router sends data to the target router, and the target router then sends the data to the host in the target subnet through the ARP cache.\",\"What are Reverse Address Resolution Protocol (RARP) and Proxy Address Resolution Protocol (Proxy ARP)?\",\"Reverse Address Resolution Protocol (RARP)\",\"Reverse Address Resolution Protocol is primarily used to obtain the IP address of a device based on its MAC address. Network devices broadcast their MAC address to a server using the RARP protocol, and the server assigns an IP address to the network device.\",\"Proxy Address Resolution Protocol (Proxy ARP)\",\"Proxy Address Resolution Protocol is mainly used to enable sub-devices in different network segments that share a router IP to resolve MAC addresses. The sender only needs to send data to the router, and the router forwards the data to the target device using the Proxy ARP protocol.\"]},\"173\":{\"h\":\"Common ARP Attack Methods\",\"t\":[\"Name\",\"Attack Method\",\"How to Defend\",\"ARP Flood Attack (Denial of Service, DoS)\",\"1. General network devices have a size limit for the ARP table. Attackers forge a large number of ARP messages with changing IP addresses, making the ARP table unable to add new entries, thus preventing normal communication 2. When attackers use tools to scan host segments or cross-segment scans, they will send a large number of messages to the device that the target IP cannot resolve, causing frequent ARP Miss errors, generating a large number of temporary table items, and broadcasting a large number of ARP request messages to request IP resolution, causing high CPU usage\",\"1. ARP Message Rate Limiting Deploy ARP message rate limiting function at the gateway, which can count the number of ARP messages within a certain period of time. If it exceeds the threshold, it will be discarded, thereby reducing the load on the device. 2. ARP Miss Message Rate Limiting Similar to ARP message rate limiting, limit ARP Miss messages 3. Strict ARP Table Item Learning The function of strict ARP table item learning means that the device only learns the response of its own ARP request and does not accept the ARP request sent by other devices. 4. ARP Table Item Limiting Limit the number of dynamic table items in the ARP table. If it exceeds, it will no longer learn new table items.\",\"ARP Spoofing Attack\",\"Attackers send forged ARP messages to maliciously modify the ARP table items of network devices, thereby causing communication abnormalities\",\"1. ARP Table Item Solidification After receiving the ARP message for the first time, do not allow the ARP table item to be modified, thereby preventing malicious modification. 2. Free ARP (Free ARP) The gateway actively sends ARP messages with its own IP address as the target address to the host, regularly updates the MAC address in the host's ARP table, thereby preventing the user's messages from being sent to the incorrect gateway.\"]},\"174\":{\"h\":\"NAT\",\"t\":[\"Translate to English:\"]},\"175\":{\"h\":\"Introduction\",\"t\":[\"The Network Address Translation (NAT) protocol is mainly used for mutual conversion between Wide Area Network (WAN) IP addresses and Local Area Network (LAN) IP addresses.\",\"Details\",\"A home router has a WAN IP address, and all other devices connected to the router share this WAN IP address. At this time, the NAT protocol needs to be used for conversion.\",\"Private Network Segments\",\"Network Type\",\"Range\",\"Class A\",\"10.0.0.0～10.255.255.255\",\"Class B\",\"172.16.0.0～172.31.255.255\",\"Class C\",\"192.168.0.0～192.168.255.255\",\"These three network segments are private network segments, used for internal LAN use.\"]},\"176\":{\"h\":\"Working Principle\",\"t\":[\"As shown in the above diagram, when Host A sends a packet to the server, the router will convert the source IP 192.168.50.2 to 113.112.111.110, and then send it to the server 133.133.133.133 on port 80. When the server returns data, it needs to convert the target address back to the intranet address.\",\"Conversion Process\",\"When Host A sends a request packet, a random port number such as 8888 is assigned to the request, that is, the request source is 192.168.50.2:8888\",\"When the request reaches the router, the router will also assign a port to the request, such as 9999, and change the source IP address of the request to 113.112.111.110, the final request source address is 113.112.111.110:9999, the router will save this mapping to the NAT conversion table: 192.168.50.2:8888 -- 113.112.111.110:9999.\",\"The target address of the data packet returned by the server is 113.112.111.110:9999. When the data packet reaches the router, the router will convert the request target address to 192.168.50.2:8888 according to the records in the conversion table and send the data packet to the intranet host.\"]},\"177\":{\"h\":\"Advantages of NAT\",\"t\":[\"Network Security: The NAT protocol shares a unified IP address for all network devices in the intranet, preventing intranet hosts from being directly exposed to the public network, which can enhance the security of intranet hosts.\",\"Load Balancing: The NAT protocol can redirect external requests to different hosts internally, achieving load balancing.\",\"Save IP Addresses: We know that IPV4 addresses are limited, and the NAT protocol allows a large number of intranet devices to connect to the internet, greatly alleviating the problem caused by the shortage of IPV4 addresses.\"]},\"178\":{\"h\":\"Disadvantages of NAT\",\"t\":[\"Internal Shielding: External servers cannot directly access intranet devices\",\"Performance Loss: Router maintenance of the NAT conversion table has performance loss\",\"Link Loss: If the router restarts, all TCP connections will be disconnected\",\"Solution\",\"The emergence of the IPV6 protocol can make up for the shortcomings of NAT and is the main application in the future.\"]},\"179\":{\"h\":\"Docker\"},\"180\":{\"h\":\"Introduction to Docker\",\"t\":[\"Docker is an open-source application container engine based on Go language and released under the Apache 2.0 license. It allows developers to package their applications and dependencies into a portable container, which can then be deployed on any popular Linux machine or used for virtualization. Containers operate within a sandbox mechanism, isolating them from each other. Similar to virtual machines, containers consume fewer resources. While a typical host can run only dozens of virtual machines, it can simultaneously handle hundreds or thousands of containers.\",\"What is a Container?\",\"A container packages an application along with its dependencies into a single filesystem. It includes everything needed to run, such as code, runtime, system tools, and libraries. Containers ensure that applications can run consistently across any environment. They are platform-independent and can operate in development, testing, and production environments.\"]},\"181\":{\"h\":\"Why Use Docker?\",\"t\":[\"Before containers, developers wrote code in the development environment, deployed it to the testing environment, and finally to production. This approach had issues like inconsistent environments, deployment complexities, and discrepancies between development and production setups. Docker addresses these problems, ensuring consistency across development, testing, and production environments, thereby enhancing development efficiency.\",\"Advantages of Docker\",\"Rapid Delivery: Docker enables quick deployment, allowing containers to start or stop within seconds or tens of seconds.\",\"Consistent Runtime Environment: Docker ensures consistency across development, testing, and production environments.\",\"Efficient Resource Utilization: Multiple containers can run on a single host, improving resource utilization.\",\"Lightweight: Docker shares the host kernel, avoiding the need for a full operating system, making it lighter than virtual machines.\",\"Ease of Maintenance: Docker facilitates rapid deployment, startup, and shutdown, resulting in lower maintenance costs.\",\"Portability: Docker runs on any platform.\",\"Open Source: Docker is open source, with an active community and a wealth of available images.\",\"Security: Docker uses sandboxing, enhancing security by isolating containers.\",\"Rich Ecosystem: Docker has a rich ecosystem with numerous tools.\",\"Continuous Integration: Docker integrates well with continuous integration tools.\",\"Scalability: Docker can quickly scale up or down based on demand.\"]},\"182\":{\"h\":\"Common Docker Commands\",\"t\":[\"Description\",\"Command\",\"View Docker Version\",\"docker --version\",\"View Docker Info\",\"docker info\",\"View Docker Images\",\"docker images\",\"View Docker Containers\",\"docker ps or docker ps -a\",\"Pull Image\",\"docker pull image_name\",\"Run Container\",\"docker run -it image_name\",\"Start Container\",\"docker start container_id\",\"Stop Container\",\"docker stop container_id\",\"Restart Container\",\"docker restart container_id\",\"Enter Container\",\"docker exec -it container_id /bin/bash\",\"Remove Container\",\"docker rm container_id\",\"Remove Image\",\"docker rmi image_id\",\"View Container Logs\",\"docker logs -f container_id\"]},\"183\":{\"h\":\"Git\",\"t\":[\"Tips\",\"As a competent programmer, mastering Git is a fundamental requirement.\"]},\"184\":{\"h\":\"Commonly Used Git Commands\",\"t\":[\"Description\",\"Command\",\"Clone Repository\",\"git clone xxxx.git\",\"Create Branch\",\"git branch devgit checkout -b devgit switch -c dev\",\"Switch Branch\",\"git checkout devgit switch dev\",\"View Local Branches\",\"git branch\",\"View Remote Branches\",\"git branch -r\",\"Delete Local Branch\",\"git branch -d dev\",\"Delete Remote Branch\",\"git push origin --delete dev\",\"Stage Changes\",\"git add .\",\"Commit Changes\",\"git commit -m \\\"feat: add new feature\\\"\",\"Push Changes\",\"git push origin devgit push -f origin dev (force push)\",\"Pull Changes\",\"git pull origin dev\",\"Merge Changes\",\"git merge dev\",\"Check Status\",\"git status\",\"View Commit History\",\"git log\",\"View Differences\",\"git diff\",\"View Remote URL\",\"git remote -v\",\"Rollback Version\",\"(Roll back to specific commit_id) git reset --hard commit_id (Roll back to previous version) git reset --soft HEAD^ or git reset --soft HEAD~1\",\"Undo Changes\",\"git revert commit_id\",\"Merge (rebase)\",\"git rebase dev\"]},\"185\":{\"h\":\"Steps for Committing Code\"},\"186\":{\"h\":\"Goland\"},\"187\":{\"h\":\"Goland\",\"t\":[\"Goland is a Go language IDE launched by JetBrains, offering a wealth of features and plugins that can help developers improve their efficiency.\",\"For local development, Goland is the first choice. It is powerful and well-supported. You can download it here.\",\"For cloud development, VsCode is recommended.\"]},\"188\":{\"h\":\"Recommended Plugins\",\"t\":[\"String Manipulation\",\"String Manipulation is a very useful string modification plugin. It can conveniently modify the selected string, converting it to uppercase, lowercase, camel case, etc.\",\"string\",\"Makefile Language\",\"The Makefile Language plugin can help you highlight Makefile syntax and quickly execute make commands.\",\"Makefile\",\"Rainbow Brackets\",\"Rainbow Brackets is a very practical plugin, mainly used to add color to brackets, making it easier for developers to distinguish bracket levels.\",\"Rainbow Brackets\"]},\"189\":{\"h\":\"Quick Dependency Update\",\"t\":[\"In Goland, open the go.mod file, click on require and a light bulb will appear. Click on the light bulb to see update. Choose the package to update as needed.\",\"update\"]},\"190\":{\"h\":\"VsCode\"},\"191\":{\"h\":\"VsCode\",\"t\":[\"VsCode is an open-source code editor launched by Microsoft. It supports multiple languages and provides a wealth of plugins to help developers improve their efficiency.\",\"For cloud development, VsCode is recommended. Click here to download\"]},\"192\":{\"h\":\"Recommended Plugins\",\"t\":[\"Go\",\"Go is a very useful Go language plugin that supports code hints, code formatting, code jumping, and other functions.\",\"Info\",\"Name: Go\",\"Id: golang.go\",\"Description: Rich Go language support for Visual Studio Code\",\"Version: 0.41.4\",\"Publisher: Go Team at Google\",\"VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=golang.Go\",\"indent-rainbow A bracket hint plugin that makes it easier for you to see the indentation level of the code.\",\"Info\",\"Name: indent-rainbow\",\"Id: oderwat.indent-rainbow\",\"Description: Makes indentation easier to read\",\"Version: 8.3.1\",\"Publisher: oderwat\",\"VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow\",\"GitLens\",\"GitLens is a very useful Git plugin that can help you better manage code versions.\",\"Info\",\"Name: GitLens — Git supercharged\",\"Id: eamodio.gitlens\",\"Description: Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more\",\"Version: 14.9.1\",\"Publisher: GitKraken\",\"VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\",\"Remote Explorer\",\"Remote Explorer is a very useful remote development plugin that can help you better manage remote code.\",\"Info\",\"Name: Remote Explorer\",\"Id: ms-vscode.remote-explorer\",\"Description: View remote machines for SSH and Tunnels.\",\"Version: 0.4.3\",\"Publisher: Microsoft\",\"VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=ms-vscode.remote-explorer\"]},\"193\":{\"h\":\"Configuration Guide\",\"t\":[\"In Visual Studio Code (VSCode), launch.json is a crucial configuration file that helps you debug your code effectively. Within launch.json, you define the debugger's settings, such as the debugger type, program entry point, program arguments, and more. This flexibility simplifies the process of debugging your programs.\",\"Using launch.json, you can achieve the following:\",\"Feature\",\"Description\",\"Local and Remote Debugging\",\"Configure both local and remote debugging for your code.\",\"Multi-Language Debugging Support\",\"Configure debugging for various programming languages, such as Java, Python, Go, etc.\",\"Debugging Parameter Configuration\",\"Customize debugging parameters, including environment variables, working directories, and target files.\",\"Setting Breakpoints\",\"Set breakpoints to pause execution, view code at specific points, and inspect the call stack.\"]},\"194\":{\"h\":\"Configuration Fields\",\"t\":[\"Example for Golang in launch.json\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"Launch test function\\\", \\\"type\\\": \\\"go\\\", \\\"request\\\": \\\"launch\\\", \\\"mode\\\": \\\"test\\\", \\\"program\\\": \\\"${workspaceFolder}\\\", \\\"args\\\": [ \\\"-test.run\\\", ], \\\"cwd\\\": \\\"${workspaceFolder}\\\" } ] } \",\"Field Descriptions\",\"Field Name\",\"Description\",\"version\",\"Configuration file version (currently supports only \\\"0.2.0\\\").\",\"configurations\",\"An array of configurations, each represented as an object.\",\"name\",\"Configuration name displayed in the debugger.\",\"type\",\"Debugger type (e.g., go, python, java).\",\"request\",\"Request type: \\\"launch\\\" starts the debugger, \\\"attach\\\" connects to a running program.\",\"mode\",\"Debugging mode (e.g., test, exec, debug).\",\"program\",\"Program entry file (can be a file path or directory).\",\"args\",\"Program arguments (can be an array or a string).\",\"cwd\",\"Working directory where the program runs.\",\"env\",\"Environment variables provided as an object.\",\"stopOnEntry\",\"If true, stops at the entry point after startup, waiting for debugger connection.\",\"preLaunchTask\",\"Specifies a task to run before debugging starts (usually a compilation task).\",\"postDebugTask\",\"Specifies a task to run after debugging ends (e.g., cleanup tasks).\",\"outFiles\",\"Output file paths for mapping source code to compiled files.\",\"sourceMaps\",\"Controls whether to enable source code mapping (\\\"inline,\\\" \\\"both,\\\" or \\\"false\\\").\",\"sourceMapPathOverrides\",\"Adjusts file paths based on source code mappings.\",\"externalConsole\",\"If true, runs the program in an external console.\",\"internalConsoleOptions\",\"Controls how the internal console is displayed: \\\"neverOpen,\\\" \\\"openOnSessionStart,\\\" or \\\"openOnFirstSessionStart.\\\"\",\"showAsyncStacks\",\"If true, displays information about asynchronous calls in stack traces.\",\"stopOnError\",\"If true, pauses debugging on errors.\",\"smartStep\",\"If true, skips unnecessary code during debugging.\",\"skipFiles\",\"Specifies files or folders to exclude from debugging.\",\"justMyCode\",\"If true, only debugs your own code.\",\"Example\",\"Node.js\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"type\\\": \\\"node\\\", \\\"request\\\": \\\"launch\\\", \\\"name\\\": \\\"Node.js Launch\\\", \\\"program\\\": \\\"${file}\\\", \\\"cwd\\\": \\\"${workspaceFolder}\\\", \\\"runtimeExecutable\\\": \\\"node\\\" } ] } \",\"Python\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"Python: Current File\\\", \\\"type\\\": \\\"python\\\", \\\"request\\\": \\\"launch\\\", \\\"program\\\": \\\"${file}\\\", \\\"console\\\": \\\"integratedTerminal\\\" }, \\\"env\\\": { \\\"PYTHONPATH\\\": \\\"\\\", } \\\"args\\\":[] ] } \",\"Java\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"type\\\": \\\"java\\\", \\\"name\\\": \\\"Java Debug\\\", \\\"request\\\": \\\"launch\\\", \\\"cwd\\\": \\\"${workspaceFolder}\\\", \\\"console\\\": \\\"internalConsole\\\", \\\"stopOnEntry\\\": false, \\\"mainClass\\\": \\\"${file}\\\" } ] } \",\"Go\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"Launch test function\\\", \\\"type\\\": \\\"go\\\", \\\"request\\\": \\\"launch\\\", \\\"mode\\\": \\\"test\\\", \\\"program\\\": \\\"${workspaceFolder}\\\", \\\"args\\\": [ \\\"-test.run\\\", ], \\\"cwd\\\": \\\"${workspaceFolder}\\\" } ] } \",\"C#\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\".NET Core Launch (console)\\\", \\\"type\\\": \\\"coreclr\\\", \\\"request\\\": \\\"launch\\\", \\\"preLaunchTask\\\": \\\"build\\\", \\\"program\\\": \\\"${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>\\\", \\\"args\\\": [], \\\"cwd\\\": \\\"${workspaceFolder}\\\", \\\"stopAtEntry\\\": false, \\\"console\\\": \\\"internalConsole\\\" } ] } \"]},\"195\":{\"h\":\"Gin\"},\"196\":{\"h\":\"Introduction\",\"t\":[\"Gin is a web framework written in Go. It is known for its fast performance and low memory usage. The Gin API is straightforward and easy to use, and it provides a variety of middleware options for quickly building web applications. Gin is a highly popular web framework, widely used in production environments, and boasts over 70k+ stars on GitHub.\",\"Pros and Cons\",\"Pros:\",\"Performance: Gin offers excellent performance, with fast execution and minimal memory overhead.\",\"Simplicity: The Gin API is simple and user-friendly, making it easy to learn.\",\"Middleware Support: Gin provides a rich set of middleware, allowing rapid development of web applications.\",\"Lightweight: As a lightweight web framework, Gin avoids excessive dependencies and complex features.\",\"Cons:\",\"Relatively Simple Features: Gin's feature set is relatively basic compared to other web frameworks like Beego or Iris.\",\"No Websocket Support: Gin lacks built-in Websocket support; developers need to implement it themselves.\",\"No Template Engine: Gin does not include a template engine; developers must choose one separately.\",\"No Session Support: Gin does not handle sessions out of the box; developers need to implement session management.\",\"No Automated API Documentation: Gin does not automatically generate API documentation; developers must create it manually.\"]},\"197\":{\"h\":\"Example of Using Gin\"},\"198\":{\"h\":\"Creating a Simple Web Service\",\"t\":[\"package main import ( \\\"github.com/gin-gonic/gin\\\" ) func main() { r := gin.Default() r.GET(\\\"/ping\\\", func(c *gin.Context) { c.JSON(200, gin.H{ \\\"message\\\": \\\"pong\\\", }) }) r.Run() } \"]},\"199\":{\"h\":\"Go Zero\"},\"200\":{\"h\":\"Introduction\",\"t\":[\"Go Zero is a microservices framework that integrates various engineering practices. It offers an all-in-one solution for microservice development, including interface definition, error code generation, client code generation, server code generation, and API documentation generation. Go Zero aims to provide a simple, efficient, and reliable framework for microservices development, allowing developers to focus on implementing business logic without spending excessive effort on microservice development and maintenance.\",\"Pros and Cons\",\"Pros:\",\"Ease of Use: Go Zero provides an all-in-one solution for microservices development, allowing developers to focus on business logic implementation.\",\"Efficiency and Reliability: Go Zero is designed to be a simple, efficient, and reliable microservices framework.\",\"Rich Features: Go Zero integrates various engineering practices, including interface definition, error code generation, client code generation, server code generation, and API documentation generation.\",\"Robust Ecosystem: Go Zero has a robust ecosystem, offering a variety of plugins and tools for quickly building microservices applications.\",\"Active Community: Go Zero has an active community, with many developers using it and contributing plugins and tools.\",\"Excellent Performance: Go Zero performs well, with fast execution and low memory usage.\",\"Cons:\",\"Learning Curve: Due to its integration of various engineering practices, Go Zero has a higher learning curve.\",\"Complex Features: Go Zero's feature set can be relatively complex, requiring time to become familiar with and master.\",\"Dependency Overhead: Go Zero's integration of multiple practices introduces additional dependencies.\",\"Incomplete Documentation: Go Zero's documentation may be lacking in some areas, necessitating manual exploration of source code and documentation.\",\"Smaller Community: Go Zero's community is relatively small, which may lead to challenges in resolving certain issues.\"]},\"201\":{\"h\":\"Using Go Zero\",\"t\":[\"To use Go Zero, you'll first need to install the command-line tool called goctl. Goctl is Go Zero's command-line utility, providing features such as interface definition, error code generation, client code generation, server code generation, and API documentation generation.\"]},\"202\":{\"h\":\"Installing goctl\",\"t\":[\"GO111MODULE=on go install github.com/zeromicro/go-zero/tools/goctl@latest \"]},\"203\":{\"h\":\"Creating a Simple Microservice\",\"t\":[\"goctl api new greet \",\"Feel free to explore Go Zero for your microservices development needs! 🚀\"]},\"204\":{\"h\":\"Kratos\"},\"205\":{\"h\":\"Introduction\",\"t\":[\"Kratos is a microservice framework written in Go and open-sourced by Bilibili. It provides an all-in-one solution for microservice development, including interface definition, error code generation, client code generation, server code generation, and API documentation generation. Kratos aims to offer a simple, efficient, and reliable framework for building microservices, allowing developers to focus on business logic implementation without spending excessive effort on microservice development and maintenance.\",\"Pros and Cons\",\"Pros:\",\"Ease of Use: Kratos provides an all-in-one solution for microservice development, allowing developers to focus on business logic implementation.\",\"Efficiency and Reliability: Kratos is designed to be a simple, efficient, and reliable microservice framework.\",\"Rich Features: Kratos integrates various engineering practices, including interface definition, error code generation, client code generation, server code generation, and API documentation generation.\",\"Comprehensive Documentation: Kratos has thorough documentation, offering detailed usage instructions and example code.\",\"Cons:\",\"Relatively Incomplete Ecosystem: Kratos' ecosystem is relatively incomplete, with fewer plugins and tools.\",\"Small Community: Kratos has a smaller community, which may result in some issues being harder to resolve.\"]},\"206\":{\"h\":\"Using Kratos\",\"t\":[\"To use Kratos, you'll need to install the command-line tool called kratos. Kratos provides features such as interface definition, error code generation, client code generation, server code generation, and API documentation generation.\"]},\"207\":{\"h\":\"Installing Kratos\",\"t\":[\"GO111MODULE=on go get -u github.com/go-kratos/kratos/cmd/kratos/v2@latest \"]},\"208\":{\"h\":\"Creating a Simple Microservice\",\"t\":[\"kratos new kratos-demo \"]},\"209\":{\"h\":\"Ent\"},\"210\":{\"h\":\"Introduction to Ent\",\"t\":[\"Ent Chinese Documentation\",\"Chinese Documentation\",\"Ent is a simple yet powerful Go entity framework. It makes building and maintaining applications with large data models easy, adhering to the following principles:\",\"Model database schema as a graph structure.\",\"Define schema using Go code.\",\"Statically typed with code generation.\",\"Simplify database queries and graph traversals.\",\"Easily extend and customize using Go templates.\",\"Pros and Cons\",\"Advantages:\",\"Simplicity: Ent generates a significant amount of API through code generation, making it convenient for developers to query.\",\"Type Safety: All types in Ent are statically typed, avoiding issues with data type conversions.\",\"Extensibility: Ent provides template functionality, making API extension straightforward.\",\"Performance: The generated Ent code avoids reflection, resulting in good performance.\",\"Multi-Database Support: Ent supports various databases such as MySQL, PostgreSQL, SQLite, and Gremlin.\",\"Flexibility: Hooks and interceptors in Ent simplify complex queries.\",\"Graph Traversal: Ent represents relationships between data tables as graphs, making traversal easy.\",\"Disadvantages:\",\"Learning Curve: Ent has some learning curve; understanding its design principles and API is necessary.\",\"Space Overhead: The generated Ent code can be substantial, increasing the size of binary files.\"]},\"211\":{\"h\":\"Examples of Using Ent\"},\"212\":{\"h\":\"Creating Data\",\"t\":[\"client.Dictionary.Create(). SetTitle(in.Title). SetName(in.Name). SetStatus(uint8(in.Status)). SetDesc(in.Desc). Exec(l.ctx) \"]},\"213\":{\"h\":\"Updating Data\",\"t\":[\"Client.Dictionary.UpdateOneID(in.Id).SetStatus(uint8(in.Status)).Exec(l.ctx) \"]},\"214\":{\"h\":\"Querying Data\",\"t\":[\"data, err := client.Dictionary.Query().Where(dictionary. NameContains(\\\"animal\\\")). All(l.ctx) details, err := client.Dictionary.Query().Where(dictionary. NameEQ(in.Name)). QueryDictionaryDetails(). All(l.ctx) \"]},\"215\":{\"h\":\"Deleting Data\",\"t\":[\"client.Dictionary.DeleteOneID(in.Id).Exec(l.ctx) \"]},\"216\":{\"h\":\"GORM\"},\"217\":{\"h\":\"Introduction to GORM\",\"t\":[\"GORM is a powerful ORM library that is highly popular. It offers a wide range of features, including chainable queries, preloading, transactions, and model associations.\",\"Full-featured ORM\",\"Associations (Has One, Has Many, Belongs To, Many To Many, Polymorphism, Single Table Inheritance)\",\"Hooks for Create, Save, Update, Delete, and Find operations\",\"Support for preloading with Preload and Joins\",\"Transactions, nested transactions, Save Points, and Rollback To Saved Point\",\"Context, precompiled mode, and DryRun mode\",\"Batch inserts, FindInBatches, Find/Create with Map, CRUD using SQL expressions and Context Valuer\",\"SQL builder, Upsert, database locks, Optimizer/Index/Comment Hint, named parameters, subqueries\",\"Composite primary keys, indexes, constraints\",\"Automatic migrations\",\"Custom logger\",\"Flexible and extensible plugin API: Database Resolver (for multiple databases and read-write separation), Prometheus, and more\",\"Rigorously tested for each feature\",\"Developer-friendly\",\"Pros and Cons\",\"Pros:\",\"Powerful Features: GORM provides extensive functionality, such as chainable queries, preloading, transactions, and model associations.\",\"Ease of Use: GORM's API design is very developer-friendly, allowing developers to quickly get started.\",\"Flexibility: GORM offers numerous configuration options to tailor it to specific needs.\",\"Cons:\",\"Performance: Due to heavy use of reflection, GORM's performance can be lower.\",\"Not as Convenient: GORM's API, while similar to writing raw SQL, doesn't significantly reduce the workload. Queries and updates still require struct definitions, and handling null values can be cumbersome.\"]},\"218\":{\"h\":\"Examples of Using GORM\"},\"219\":{\"h\":\"Creating Data\",\"t\":[\"db.Create(&User{Name: \\\"Jinzhu\\\", Age: 18}) \"]},\"220\":{\"h\":\"Updating Data\",\"t\":[\"db.Model(&user).Update(\\\"Age\\\", 20) \"]},\"221\":{\"h\":\"Querying Data\",\"t\":[\"db.First(&user, 1) // Retrieve user with ID 1 \"]},\"222\":{\"h\":\"Deleting Data\",\"t\":[\"db.Delete(&user) \"]},\"223\":{\"h\":\"Lancet\"},\"224\":{\"h\":\"Introduction\",\"t\":[\"Lancet is a Go library that provides a collection of commonly used utility functions and methods. It aims to simplify development for developers by offering these tools, allowing them to focus on implementing business logic without spending excessive effort on writing utility functions.\",\"Lancet serves a similar purpose to Java's Hutool library, providing a wealth of readily usable functions to reduce the need for reinventing the wheel.\"]},\"225\":{\"h\":\"Main Features\",\"t\":[\"Module\",\"Description\",\"Algorithm\",\"Provides commonly used algorithmic functions.\",\"Compare\",\"Functions for data comparison, such as comparing two values.\",\"Concurrency\",\"Tools for handling concurrency, including goroutines and locks.\",\"Condition\",\"Functions for conditional checks, e.g., verifying a value meets a condition.\",\"Convertor\",\"Utility functions for data type conversion, like converting strings to integers.\",\"Cryptor\",\"Functions related to encryption and decryption.\",\"Datetime\",\"Handles date and time operations, such as formatting dates and calculating time differences.\",\"Datastructure\",\"Offers common data structures like stacks, queues, and linked lists.\",\"Fileutil\",\"Utility functions for file operations, including reading/writing files and creating directories.\",\"Formatter\",\"Functions for string formatting, like padding and truncating strings.\",\"Function\",\"Related to function manipulation, such as currying and uncurrying.\",\"Maputil\",\"Tools for working with maps, like merging maps and iterating over them.\",\"Mathutil\",\"Functions for mathematical calculations, such as absolute value and square root.\",\"Netutil\",\"Handles networking and HTTP requests, e.g., sending HTTP requests and parsing URLs.\",\"Pointer\",\"Functions for pointer manipulation, like retrieving pointer values and creating pointers.\",\"Random\",\"Generates random numbers.\",\"Retry\",\"Implements retry mechanisms, useful for retrying failed network requests.\",\"Slice\",\"Utility functions for working with slices, like slicing and merging.\",\"Stream\",\"Provides stream-like processing functions, including map, filter, and reduce.\",\"Structs\",\"Functions for working with structs, like retrieving field values and checking for emptiness.\",\"Strutil\",\"Handles string operations, such as concatenation, substring extraction, and replacement.\",\"System\",\"System-related functions, like retrieving environment variables and executing system commands.\",\"Tuple\",\"Utility functions for working with tuples, like creating tuples and accessing values.\",\"Validator\",\"Functions for data validation, e.g., validating email addresses and phone numbers.\",\"Xerror\",\"Error-handling functions, including creating errors and checking error types.\"]},\"226\":{\"h\":\"Example\",\"t\":[\"Bubble Sort\",\"package main import ( \\\"fmt\\\" \\\"github.com/duke-git/lancet/v2/algorithm\\\" ) type intComparator struct{} func (c *intComparator) Compare(v1 any, v2 any) int { val1, _ := v1.(int) val2, _ := v2.(int) //ascending order if val1 < val2 { return -1 } else if val1 > val2 { return 1 } return 0 } func main() { numbers := []int{2, 1, 5, 3, 6, 4} comparator := &intComparator{} algorithm.BubbleSort(numbers, comparator) fmt.Println(numbers) // Output: // [1 2 3 4 5 6] } \"]},\"227\":{\"h\":\"Basic\"},\"228\":{\"h\":\"Relationship Keys\",\"t\":[\"Relationship keys are used to identify each row in a data table or to identify relationships with other tables\",\"Relationship Key\",\"Description\",\"Primary Key (Unique Key)\",\"The primary key is the field used to uniquely identify in the data column, cannot be null, and a table can only have one primary key\",\"Super Key\",\"The super key is all attribute sets that can uniquely identify the data column, i.e., if any single or multiple fields can also uniquely identify the data column, they all belong to the super key\",\"Candidate Key\",\"The candidate key is a subset of the super key, the candidate key is the super key without redundant fields, and any field removed from the candidate key does not belong to the super key\",\"Foreign Key\",\"The foreign key is used to establish relationships between tables, such as if the primary key of table A is a field of table B, then the primary key field of table A in table B is a foreign key\",\"Warning\",\"The difference between the primary key and the unique key:\",\"A table can only have one primary key, but can have multiple unique keys\",\"The primary key cannot be null, the unique key can be null\",\"Example\",\"Assume there are two tables\",\"student\",\"teacher\",\"id\",\"id\",\"name\",\"name\",\"age\",\"age\",\"identify_card (ID number)\",\"teacher_id\",\"Primary Key: student.idteacher.id\",\"Super Key: For example, in the student table: (student.id, student.name),(student.id, student.name, student.age) ... Any combination with the primary key and ID number is a super key\",\"Candidate Key: For example, in the student table: student.idstudent.identify_card\",\"Foreign Key: student.teacher_id\"]},\"229\":{\"h\":\"Table Join\",\"t\":[\"To learn about table join, you first need to understand Cartesian Product\",\"Cartesian Product\",\"The Cartesian product refers to the set of all elements in X, Y where all elements in X are multiplied by all elements in Y, also known as direct product\",\"For example, X={a,b}Y={1,2} then the Cartesian product of X and Y is\",\"Z={(a,1),(a,2),(b,1),(b,2)}\",\"Table join is the result of filtering the Cartesian product between two tables through conditions\"]},\"230\":{\"h\":\"Table Join Diagram\",\"t\":[\"sql-join\",\"Sample Table\",\"Sample Table\",\"The following queries are all around this sample table:\"]},\"231\":{\"h\":\"course\",\"t\":[\"id\",\"title\",\"1\",\"Math\",\"2\",\"Art\",\"3\",\"Music\",\"4\",\"Geography\",\"15\",\"Sport\"]},\"232\":{\"h\":\"student\",\"t\":[\"id\",\"name\",\"age\",\"course_id\",\"1\",\"Elaine Morris\",\"12\",\"3\",\"2\",\"Beverly Turner\",\"11\",\"4\",\"3\",\"Connie Murphy\",\"11\",\"2\",\"4\",\"Jamie Romero\",\"12\",\"5\",\"5\",\"Clifford Reyes\",\"10\",\"1\",\"6\",\"Francisco Cook\",\"12\",\"2\",\"7\",\"Alan Sanchez\",\"11\",\"9\",\"8\",\"Tony Garcia\",\"12\",\"3\",\"9\",\"Bobby Burns\",\"12\",\"8\",\"10\",\"Glenn Adams\",\"11\",\"5\",\"11\",\"Glenn Griffin\",\"12\",\"4\",\"12\",\"Justin Rogers\",\"13\",\"8\",\"Warning\",\"Generally, we call the first table the driving table and the second table the driven table. In the example, student is the driving table and course is the driven table.\"]},\"233\":{\"h\":\"Inner Join\",\"t\":[\"The inner join inner join is equivalent to join, used to return only matching rows.\",\"The following three methods are the same\",\"select * from a,b; select * from a join b; select * from a inner join b; \",\"Example\",\"select * from student s inner join course c on s.course_id=c.id; \",\"Result\",\"id\",\"name\",\"age\",\"course_id\",\"id(1)\",\"title\",\"5\",\"Clifford Reyes\",\"10\",\"1\",\"1\",\"Math\",\"6\",\"Francisco Cook\",\"12\",\"2\",\"2\",\"Art\",\"3\",\"Connie Murphy\",\"11\",\"2\",\"2\",\"Art\",\"8\",\"Tony Garcia\",\"12\",\"3\",\"3\",\"Music\",\"1\",\"Elaine Morris\",\"12\",\"3\",\"3\",\"Music\",\"11\",\"Glenn Griffin\",\"12\",\"4\",\"4\",\"Geography\",\"2\",\"Beverly Turner\",\"11\",\"4\",\"4\",\"Geography\",\"You can see that only the data columns that satisfy s.course_id=c.id are returned\"]},\"234\":{\"h\":\"Outer Join\"},\"235\":{\"h\":\"Left Join\",\"t\":[\"select * from student s left join course c on s.course_id=c.id; \",\"Result\",\"id\",\"name\",\"age\",\"course_id\",\"id(1)\",\"title\",\"5\",\"Clifford Reyes\",\"10\",\"1\",\"1\",\"Math\",\"6\",\"Francisco Cook\",\"12\",\"2\",\"2\",\"Art\",\"3\",\"Connie Murphy\",\"11\",\"2\",\"2\",\"Art\",\"8\",\"Tony Garcia\",\"12\",\"3\",\"3\",\"Music\",\"1\",\"Elaine Morris\",\"12\",\"3\",\"3\",\"Music\",\"11\",\"Glenn Griffin\",\"12\",\"4\",\"4\",\"Geography\",\"2\",\"Beverly Turner\",\"11\",\"4\",\"4\",\"Geography\",\"10\",\"Glenn Adams\",\"11\",\"5\",\"4\",\"Jamie Romero\",\"12\",\"5\",\"12\",\"Justin Rogers\",\"13\",\"8\",\"9\",\"Bobby Burns\",\"12\",\"8\",\"7\",\"Alan Sanchez\",\"11\",\"9\",\"Info\",\"You can see that not only the data columns that satisfy s.course_id=c.id are returned, but also other unmatched data from the driving table are returned\"]},\"236\":{\"h\":\"Right Join\",\"t\":[\"select * from student s right join course c on s.course_id=c.id; \",\"Result\",\"id\",\"name\",\"age\",\"course_id\",\"id(1)\",\"title\",\"5\",\"Clifford Reyes\",\"10\",\"1\",\"1\",\"Math\",\"6\",\"Francisco Cook\",\"12\",\"2\",\"2\",\"Art\",\"3\",\"Connie Murphy\",\"11\",\"2\",\"2\",\"Art\",\"8\",\"Tony Garcia\",\"12\",\"3\",\"3\",\"Music\",\"1\",\"Elaine Morris\",\"12\",\"3\",\"3\",\"Music\",\"11\",\"Glenn Griffin\",\"12\",\"4\",\"4\",\"Geography\",\"2\",\"Beverly Turner\",\"11\",\"4\",\"4\",\"Geography\",\"15\",\"Sport\",\"Info\",\"You can see that not only the data columns that satisfy s.course_id=c.id are returned, but also other unmatched data from the driven table are returned\"]},\"237\":{\"h\":\"Full Outer Join\",\"t\":[\"select * from student s full outer join course c on s.course_id=c.id; \",\"Result\",\"id\",\"name\",\"age\",\"course_id\",\"id(1)\",\"title\",\"5\",\"Clifford Reyes\",\"10\",\"1\",\"1\",\"Math\",\"6\",\"Francisco Cook\",\"12\",\"2\",\"2\",\"Art\",\"3\",\"Connie Murphy\",\"11\",\"2\",\"2\",\"Art\",\"8\",\"Tony Garcia\",\"12\",\"3\",\"3\",\"Music\",\"1\",\"Elaine Morris\",\"12\",\"3\",\"3\",\"Music\",\"11\",\"Glenn Griffin\",\"12\",\"4\",\"4\",\"Geography\",\"2\",\"Beverly Turner\",\"11\",\"4\",\"4\",\"Geography\",\"15\",\"Sport\",\"10\",\"Glenn Adams\",\"11\",\"5\",\"4\",\"Jamie Romero\",\"12\",\"5\",\"12\",\"Justin Rogers\",\"13\",\"8\",\"9\",\"Bobby Burns\",\"12\",\"8\",\"7\",\"Alan Sanchez\",\"11\",\"9\",\"Info\",\"You can see that not only the data columns that satisfy s.course_id=c.id are returned, but also other unmatched data are returned\",\"Query Condition\",\"After using the join, two filtering conditions are supported:\",\"where\",\"Using the where clause will only return columns that meet the where condition\",\"on\",\"When using on, in the inner join query, the effect of on and where is consistent. In the outer join, such as left join, the unmatched data of the driving table will be returned\",\"Warning\",\"If there are multiple table joins such as a inner join b inner join c, a inner join b will be executed first, and then the result will be inner join c\",\"Important\",\"Using indexes when join can reduce the number of table returns\"]},\"238\":{\"h\":\"Query\"},\"239\":{\"h\":\"SELECT Statement\",\"t\":[\"The SELECT command is mainly used to limit the returned results.\"]},\"240\":{\"h\":\"Return All Fields\",\"t\":[\"SELECT * FROM table_name; \"]},\"241\":{\"h\":\"Return Specific Fields\",\"t\":[\"SELECT field1, field2 FROM table_name; \"]},\"242\":{\"h\":\"Remove Duplicates\",\"t\":[\"SELECT DISTINCT field FROM table_name; \"]},\"243\":{\"h\":\"ORDER BY Statement\",\"t\":[\"SELECT * FROM table_name ORDER BY field_name [ASC|DESC]; \"]},\"244\":{\"h\":\"LIMIT Statement\",\"t\":[\"SELECT * FROM table_name LIMIT start, quantity; \",\"If only quantity is specified, it defaults to start from row 0.\",\"SELECT * FROM table_name LIMIT 7; \",\"This represents rows 0-6.\",\"// mysql SELECT * FROM table_name LIMIT 10, 6; // postgresql SELECT * FROM table_name LIMIT 6 OFFSET 10; \",\"This represents rows 10-15.\"]},\"245\":{\"h\":\"WHERE Clause\",\"t\":[\"We use WHERE for data filtering.\",\"Operator\",\"Description\",\"=\",\"Equal to\",\"<>\",\"Not equal to\",\">\",\"Greater than\",\"<\",\"Less than\",\">=\",\"Greater than or equal to\",\"<=\",\"Less than or equal to\",\"BETWEEN\",\"Within a certain range\",\"LIKE\",\"Matches pattern-defined data\",\"IN\",\"Specifies multiple possible values\",\"// Name is Jack SELECT * FROM users WHERE name = \\\"Jack\\\"; // Age is greater than 12 SELECT * FROM users WHERE age > 12; // Age is between 12 and 18 SELECT * FROM users WHERE age BETWEEN 12 AND 18; // Name starts with J SELECT * FROM users WHERE name LIKE \\\"J%\\\"; // Age is 12, 15, or 18 SELECT * FROM users WHERE age IN (12,15,18); \",\"Info\",\"LIKE supports two wildcards, % represents any number of characters, _ represents any single character.\",\"// Name starts with J, such as Jack, Jacky, Jim SELECT * FROM users WHERE name LIKE \\\"J%\\\"; // Single character, such as JA, Jc SELECT * FROM users WHERE name LIKE \\\"J_\\\"; \"]},\"246\":{\"h\":\"AND, OR, NOT\",\"t\":[\"// Age is 12 or 18 SELECT * FROM users WHERE age = 12 OR age = 18; // Name is Jack and age is 12 SELECT * FROM users WHERE name = \\\"Jack\\\" OR age = 12; // Age is not 12 SELECT * FROM users WHERE not age = 12; \"]},\"247\":{\"h\":\"GROUP BY Statement\",\"t\":[\"GROUP BY is often used with aggregate functions (COUNT, AVG ...) and uses HAVING for additional queries.\",\"// Query the number of users of the corresponding age, and the number must be greater than 10 SELECT age, COUNT(age) FROM users GROUP BY age HAVING COUNT(age) > 10; \"]},\"248\":{\"h\":\"EXISTS Statement\",\"t\":[\"EXISTS is mainly used to query whether it meets the data returned by the subquery.\",\"SELECT age FROM users WHERE EXISTS (SELECT age FROM users WHERE age > 2 ); \"]},\"249\":{\"h\":\"Common Aggregate Functions\",\"t\":[\"Function\",\"Description\",\"Remarks\",\"count()\",\"Count\",\"Only counts non-empty rows, use count(*) or count(1) to count all rows including empty rows\",\"sum()\",\"Sum\",\"Only counts non-empty rows, True is treated as 1, False is treated as 0\",\"max()\",\"Maximum Value\",\"For time fields, it represents the most recent date\",\"min()\",\"Minimum Value\",\"For time fields, it represents the earliest date\",\"avg()\",\"Average\",\"Only counts non-empty rows\"]},\"250\":{\"h\":\"Index\",\"t\":[\"Info\",\"An index is a data structure in a relational database that pre-sorts the values of one or more columns. Through the index, we can quickly locate the position of the target data.\",\"Advantages:\",\"Improve query speed\",\"Reduce the I/O consumption of the database\",\"Reduce CPU consumption\",\"Improve data uniqueness\",\"Ensure data integrity\",\"Disadvantages:\",\"Occupies disk space\",\"Reduces the speed of data writing and updating\"]},\"251\":{\"h\":\"Index Types\",\"t\":[\"Index Type\",\"Description\",\"Logical Function Division\",\"Ordinary Index\",\"This is the most basic index, it has no restrictions. Its main task is to speed up access to data.\",\"Unique Index\",\"Similar to an ordinary index, the difference is: the value of the index column must be unique, but null values are allowed. If it is a composite index, the combination of column values must be unique.\",\"Primary Key Index\",\"The primary key index is a special unique index, null values are not allowed.\",\"Full-text Index\",\"Full-text index is used for full-text search, only CHAR, VARCHAR and TEXT columns can be indexed.\",\"Physical Division\",\"Clustered Index\",\"The clustered index is sorted according to the physical location of the data storage, which can improve the speed of multi-row retrieval.\",\"Non-clustered Index\",\"The non-clustered index is stored in logical order (the order of the index), which is unrelated to the storage of data on the disk.\",\"Field Number Division\",\"Single Column Index\",\"A single column index is an index created based on a single column value.\",\"Composite Index\",\"A composite index is an index created based on multiple column values.\"]},\"252\":{\"h\":\"Logical Function Division\"},\"253\":{\"h\":\"Ordinary Index\",\"t\":[\"CREATE INDEX index_name ON table_name (field_name); \"]},\"254\":{\"h\":\"Unique Index\",\"t\":[\"CREATE UNIQUE INDEX index_name ON table_name (field_name); \"]},\"255\":{\"h\":\"Primary Key Index\",\"t\":[\"ALTER TABLE table_name ADD PRIMARY KEY (field_name); \"]},\"256\":{\"h\":\"Full-text Index\",\"t\":[\"CREATE FULLTEXT INDEX index_name ON table_name (field_name); \"]},\"257\":{\"h\":\"Physical Division\"},\"258\":{\"h\":\"Clustered Index\",\"t\":[\"The index and data of the clustered index are stored together, and the order of the index is consistent with the physical storage order of the data. In MySQL, the primary key index is a clustered index, and the index and data are both in the same .ibd file.\",\"Advantages and Disadvantages of Clustered Index\",\"Advantages:\",\"The clustered index can reduce disk I/O operations and improve query efficiency. Once the index is queried, the data is found, and there is no need to query the data again.\",\"The clustered index can reduce data fragments and improve data storage efficiency.\",\"Disadvantages:\",\"The maintenance cost of the clustered index is high, and the index needs to be maintained when inserting, deleting, and updating data.\",\"The data storage of the clustered index is ordered. If the inserted data is unordered, it may cause the data storage to be discontinuous and increase the data storage space.\"]},\"259\":{\"h\":\"Non-clustered Index\",\"t\":[\"The index and data of the non-clustered index are stored in different places, and the order of the index is inconsistent with the physical storage order of the data. In MySQL, the ordinary index is a non-clustered index, and the index and data are stored in two .ibd files separately.\",\"Advantages and Disadvantages of Non-clustered Index\",\"Advantages:\",\"The maintenance cost of the non-clustered index is low, and only the index needs to be maintained when inserting, deleting, and updating data.\",\"The data storage of the non-clustered index is unordered. When inserting data, it will not cause the data storage to be discontinuous, reducing the data storage space.\",\"Disadvantages:\",\"The query efficiency of the non-clustered index is low. After querying the index, you need to query the data again.\",\"The non-clustered index will increase disk I/O operations and reduce query efficiency.\",\"The non-clustered index will increase data fragments and reduce data storage efficiency.\",\"The data storage of the non-clustered index is unordered, which may cause the data storage to be discontinuous and increase the data storage space.\",\"Covering Index\",\"Since the non-clustered index and the data are stored separately, it means that after using the index to search for the data, you need to go back to the table to query the data, which will increase an I/O operation. To reduce I/O operations, you can use a covering index. A covering index refers to the fact that all the fields queried are in the index, and there is no need to go back to the table to query the data.\"]},\"260\":{\"h\":\"Field Number Division\"},\"261\":{\"h\":\"Single Column Index\",\"t\":[\"CREATE INDEX index_name ON table_name (field_name); \"]},\"262\":{\"h\":\"Composite Index\",\"t\":[\"CREATE INDEX index_name ON table_name (field_name1, field_name2, ...); \",\"Translate to English:\"]},\"263\":{\"h\":\"Principles for Creating Indexes\",\"t\":[\"Most Left Prefix Principle\",\"MySQL indexes use the most left prefix principle, that is, only the most left prefix column of the index can be used in the query. For example, if a composite index (a, b, c) is created, then you can use (a), (a, b), (a, b, c) three indexes in the query, but you cannot use (b, c), (c) and other indexes.\",\"Warning\",\"The most left match principle can trigger index query when encountering >=, <=, between, like prefix match, but if it encounters > and <, it will not trigger index query.\",\"Choose Unique Index\",\"When choosing an index, you should prefer to choose a unique index, because the unique index can guarantee the uniqueness of the data and avoid data duplication.\",\"Choose High Discrimination Index\",\"When choosing an index, you should choose a high discrimination index. The high discrimination index can reduce the amount of data scanned and improve query efficiency.\",\"Choose Index Column\",\"When choosing an index column, you should choose a frequently queried column, avoid choosing infrequently used columns, and improve the utilization rate of the index.\",\"Recommended Fields to Choose\",\"Frequently queried fields\",\"Frequently sorted fields\",\"Fields that are not NULL\",\"Fields often used for JOIN\",\"Try to Use Prefix Index\",\"If the length of the index field is long, you can use a prefix index. The prefix index can reduce the storage space of the index and improve the query efficiency of the index.\",\"Try to Extend Index Instead of Creating New Index\",\"If we already have an a index, if we need an a,b index, then we can directly extend the b field on the a index, instead of creating a new a,b index.\",\"Don't Have Too Many Indexes\",\"The number of indexes in a single table should not be too many. Too many indexes will increase the maintenance cost of the data and reduce the data write efficiency.\"]},\"264\":{\"h\":\"Index Pushdown\",\"t\":[\"Index pushdown (Index Condition Pushdown) is an optimization feature introduced in MySQL 5.6, which can reduce the back-table query data and improve query efficiency, mainly used for composite indexes.\",\"Working Principle\",\"Before there was no index pushdown, if we had a composite index (a, b), the query condition was a = 1 and b = 2, MySQL would first use the index (a, b) to query all a = 1 data, and then go back to the table to query the corresponding complete data row, and then use the b = 2 condition to judge whether each row meets the condition, and return the data rows that meet the condition.\",\"With index pushdown, MySQL will first use the index (a, b) to query all a = 1 and b = 2 data, and then go back to the table to query the corresponding complete data row, reducing the amount of back-table query data and improving query efficiency.\"]},\"265\":{\"h\":\"Data Structure of Indexes\"},\"266\":{\"h\":\"B-Tree\",\"t\":[\"A B-tree is a type of multi-way balanced search tree and is a commonly used index data structure.\",\"Characteristics of B-Tree:\",\"Each node contains multiple child nodes, and the number of child nodes for each node ranges from [m/2, m], where m is the number of layers in the B-tree.\",\"All leaf nodes are on the same level.\",\"The root node has at least two child nodes unless the root node is a leaf node.\",\"A non-leaf node with k child nodes contains k-1 key values.\",\"Each node contains both the index and all data.\",\"btree\"]},\"267\":{\"h\":\"B+ Tree\",\"t\":[\"A B+ tree is a variant of the B-tree and is a commonly used index data structure. Compared with the B-tree, the leaf nodes of the B+ tree only contain indexes, not data, all leaf nodes are on the same level, and leaf nodes are connected by pointers. Since the node only contains the index, under the same block size, the B+ tree can store more indexes, reduce the number of layers of the tree, and improve the query efficiency. Since the leaf nodes are connected by pointers, it can support range queries, and the query speed is much faster than the B-tree.\",\"Characteristics of B+ Tree:\",\"All leaf nodes are on the same level.\",\"Non-leaf nodes only contain indexes, not data.\",\"Leaf nodes are connected by pointers.\",\"Leaf nodes contain all data.\",\"For the same amount of data, the height of the B+ tree is lower than the B-tree.\",\"b+tree\",\"Differences between B-Tree and B+ Tree\",\"B-Tree\",\"B+ Tree\",\"Data Pointers and Keys\",\"All internal nodes and leaf nodes contain data pointers and keys\",\"Only leaf nodes contain data pointers and keys, internal nodes only contain keys\",\"Duplicate Keys\",\"There are no duplicate keys\",\"Duplicate keys exist, all internal nodes also exist in the leaves\",\"Leaf Node Linking\",\"Leaf nodes are not linked to each other\",\"Leaf nodes are linked to each other\",\"Sequential Access\",\"Sequential access of nodes is not possible, range queries require in-order traversal\",\"All nodes exist in the leaves, so they can be accessed sequentially like a linked list\",\"Search Speed\",\"The speed of searching keys is slower\",\"The search speed is faster\",\"Height for Specific Number of Entries\",\"For a specific number of entries, the height of the B-Tree is larger\",\"For the same number of entries, the height of the B+ Tree is less than the B-Tree\"]},\"268\":{\"h\":\"Transaction\"},\"269\":{\"h\":\"Isolation Levels\",\"t\":[\"Glossary\",\"Term\",\"Definition\",\"Dirty Read\",\"A dirty read refers to reading data from another transaction that has not yet been committed. Uncommitted means that this data may be rolled back, which means it may not ultimately be stored in the database, i.e., it does not exist. Reading data that may not ultimately exist is a dirty read.\",\"Repeatable Read\",\"Repeatable read means that within a transaction, the data read at the beginning and at any time before the end of the transaction are consistent. This mainly ensures the accuracy of data updates.\",\"Non-repeatable Read\",\"In contrast to repeatable read, non-repeatable read means that within the same transaction, the same batch of data read at different times may be different and may be affected by other transactions, such as other transactions modifying this batch of data and committing it. Non-repeatable reads often occur during data updates.\",\"Phantom Read\",\"Suppose transaction A changes the content of some rows, but has not yet committed. At this time, transaction B inserts a record row that is the same as the record before transaction A's change, and commits before transaction A. At this time, when querying in transaction A, it seems that the recent change has not taken effect for some data, but in fact, it was just inserted by transaction B, which makes the user feel very magical and feels like a hallucination. This is called a phantom read. Phantom reads often occur during data insertion.\",\"Isolation Level\",\"Dirty Read\",\"Non-repeatable Read\",\"Phantom Read\",\"Description\",\"READ-UNCOMMITTED\",\"√\",\"√\",\"√\",\"Allows reading of uncommitted data changes, meaning that changes to intermediate data will also be read. Uncommitted data may also be rolled back, leading to reading non-existent data.\",\"READ-COMMITTED\",\"×\",\"√\",\"√\",\"Allows reading of data that concurrent transactions have committed\",\"REPEATABLE-READ\",\"×\",\"×\",\"√\",\"The results of multiple reads of the same field are consistent, unless the data is modified by the transaction itself\",\"SERIALIZABLE\",\"×\",\"×\",\"×\",\"Serialization, the highest isolation level, all transactions are executed in sequence without interference\",\"Warning\",\"The default isolation level of the database is REPEATABLE-READ, which cannot prevent phantom reads\",\"In MySQL, MVCC (Multi-Version Concurrency Control) is mainly used to implement isolation levels. MVCC is implemented by saving a snapshot of the data at a certain point in time, so that the data seen by the transaction during execution is consistent. You can also use locks (Next-key lock) to implement isolation levels, but locks can cause performance problems, so MySQL chose MVCC.\"]},\"270\":{\"h\":\"Basic\"},\"271\":{\"h\":\"Pointer\"},\"272\":{\"h\":\"What is a pointer and a pointer variable?\",\"t\":[\"Answer\",\"Ordinary variables store data, while pointer variables store the address of the data.\",\"Learning about pointers mainly involves two operators & and *.\",\"&: Address operator, used to get the address from a variable\",\"// Define an ordinary variable and print it num := 99 fmt.Println(num) //output: 99 ptr := &num fmt.Println(ptr) //output: for example: 0xc000086020 \",\"*: Dereference operator, used to get data from an address\",\"tamp := *ptr fmt.Println(tamp) //output: 99 \"]},\"273\":{\"h\":\"Why use pointers?\",\"t\":[\"Answer\",\"Significance One: Easy Coding\",\"Pointers play an important role in data structures. Through pointers, we can create complex data structures such as linked lists, trees, and graphs. Pointers can easily access and manipulate relationships between nodes in data structures, thereby achieving efficient data storage and retrieval.\",\"Pointers can pass references of data between functions, instead of copying the entire data. This can save memory space and improve the execution efficiency of the program. By passing pointers, functions can directly modify the original data without needing to return a value.\",\"Significance Two: Save Memory\",\"Pointers can directly access and modify data in memory. Through pointers, we can dynamically allocate memory at runtime to meet the needs of the program, and release memory when it is not needed, avoiding memory leaks.\",\"Pointers can dynamically allocate memory during program execution. Through dynamic memory allocation, we can allocate and release memory as needed, thereby improving the flexibility and efficiency of the program.\"]},\"274\":{\"h\":\"Which objects can be addressed and which cannot?\",\"t\":[\"Answer\",\"The following objects can be addressed using & to obtain their memory addresses:\",\"Variables\",\"Pointers\",\"Arrays, slices, and their internal data\",\"Struct pointers\",\"Map\",\"The following objects cannot be addressed:\",\"Structs\",\"Constants\",\"Literals\",\"Functions\",\"Non-pointer elements of maps\",\"Array literals\"]},\"275\":{\"h\":\"Literal\"},\"276\":{\"h\":\"What does literal mean?\",\"t\":[\"Answer\",\"The text of these basic type values below is a basic type literal.\",\"Basic Type\",\"Collection\",\"Boolean Type\",\"bool\",\"String Type\",\"string\",\"Complex Type\",\"complex64complex128\",\"Float Type\",\"float32float64\",\"Integer Type\",\"int8uint8int16uint16int32uint32int64uint64intuintuintptr\",\"For example:\",\"s := \\\"hello world\\\" // \\\"hello world\\\" is the literal value n := 10 // 10 is the literal value \",\"An unnamed constant is a special kind of constant that doesn't have a specific name. This kind of constant only has a value, and there is no variable name associated with it. The following strings are string literals, which are unnamed constants.\",\"\\\"hello，world\\\" \\\"123\\\" \"]},\"277\":{\"h\":\"Can different literals have the same value?\",\"t\":[\"Answer\",\"A value can be represented by multiple literals. For example, the decimal value 21 can be represented by three different literals\",\"Decimal\",\"Octal\",\"Binary\",\"Hexadecimal\",\"21\",\"0o25\",\"0b0001 0101\",\"0x15\",\"import \\\"fmt\\\" func main() { fmt.Println(21 == 0o25) fmt.Println(21 == 0x15 ) fmt.Println(21 == 0b0001 0101) }// The result of the run shows that they are equal \"]},\"278\":{\"h\":\"What is the difference between a literal and a variable?\",\"t\":[\"Answer\",\"A literal is an unnamed constant, just like a constant, it is not addressable.\",\"For example\",\"func run() string { return \\\"fast\\\" } func main() { fmt.Println(&run()) } \",\"./main.go:10:14: cannot take the address of run() \",\"If you do not use a variable name to hold it, the text value of a string returned by a function, which is a string literal, and this kind of literal is not addressable, an error will occur. To use & to address, you must use a variable name to hold it.\",\"But the following is correct\",\"func run() string { return \\\"fast\\\" } func main() { t := run() fmt.Println(&t) } \"]},\"279\":{\"h\":\"What is a composite literal?\",\"t\":[\"Answer\",\"A composite literal is a way to define and initialize an object together. In other words, a composite literal is used to construct values for structures, arrays, slices, and maps, and each time a new value is created. They are followed by the type of the literal, curly braces, and a list of elements. Each element can optionally be preceded by a related key.\",\"Using composite literals can be simpler, and the composite literal methods for structures, arrays, slices, and maps are as follows.\",\"Structures use composite literals to define and initialize\",\"type man struct { nationality string height int } func main() { // Declare and assign properties su := man{ nationality: \\\"China\\\", height: 180, } } \",\"Structures use the cumbersome conventional method as follows\",\"type man struct { nationality string height int } func main() { // Declare object var su man // Assign properties su.nationality = \\\"China\\\" su.height = 180 } \",\"Map uses composite literal method for definition and initialization as follows\",\"m := map[string]int { \\\"math\\\": 96, \\\"Chinese\\\": 90, } \",\"Similarly, arrays use composite literal method for definition and initialization as follows\",\"colours := [3]string{\\\"black\\\", \\\"red\\\", \\\"white\\\"} \",\"Slices use composite literal method as follows\",\"s := []string{\\\"red\\\", \\\"black\\\"} // The capacity and length of the slice will be automatically filled in \"]},\"280\":{\"h\":\"Others\"},\"281\":{\"h\":\"What is the difference between and in Go?\",\"t\":[\"Answer\",\"In Go language, byte and rune are both types used to represent characters, but there are some differences between them:\"]},\"282\":{\"h\":\"Different types:\",\"t\":[\"byte: byte, is an alias type of uint8\",\"rune: character, is an alias type of int32\"]},\"283\":{\"h\":\"Different stored characters:\",\"t\":[\"//byte is used to represent ASCII code characters, can only store characters within the range of 0-255. var a byte = 'Y' // ASCII code character //rune is used to represent Unicode characters, can store any Unicode character. var b rune = '酥' // Unicode character \"]},\"284\":{\"h\":\"Different byte sizes occupied: byte occupies 1 byte, rune occupies 4 bytes.\",\"t\":[\"import \\\"unsafe\\\" var a byte = 'Y' var b rune = '酥' fmt.Printf(\\\"a occupies %d bytes\\\\nb occupies %d bytes\\\", unsafe.Sizeof(a), unsafe.Sizeof(b)) // Output: a occupies 1 byte b occupies 4 bytes \"]},\"285\":{\"h\":\"Different character ranges represented:\",\"t\":[\"Since the value that the byte type can represent is limited, there are only 2^8=256. So if you want to represent Chinese, you can only use the rune type.\",\"Here is the English translation of your text:\"]},\"286\":{\"h\":\"What are deep copy and shallow copy in golang?\",\"t\":[\"Answer\",\"What is copying?\",\"The simplest form of copying is as follows\",\"a := 648 b := a //copy a to b \",\"So what are deep copy and shallow copy?\",\"Deep and shallow copying also depend on the type.\",\"Type\",\"Details\",\"Reference type\",\"SliceMapChannelsInterfacesFunctions\",\"Value type\",\"StringArrayIntStructFloatBool\",\"The effects of copying two types are different. Let's first talk about the value type that we are more familiar with. As can be seen from the question of what is copying, if it is a value type, a new space will be allocated to store the value every time it is copied, and the two copied value types are independent and do not affect each other.\",\"Take the reference type slice as an example to talk about deep copy and shallow copy\",\"Type\",\"Example\",\"Deep copy\",\"copy(slice1, slice2)\",\"Shallow copy\",\"slice1 = slice2\",\"Shallow copy only changes the pointer, as follows\",\"package main import \\\"fmt\\\" func main() { var slice1 = []int{7, 8, 9} var slice2 = make([]int, 3) //slice initialization slice2 = slice1 //shallow copy changes the pointer of slice2 fmt.Println(slice1) slice2[0] = 648 // change slice2[0], slice1[0] also changes fmt.Println(slice2) fmt.Println(slice1) } \",\"The output is as follows\",\"[7 8 9] [648 8 9] [648 8 9] \",\"So for slices, shallow copy changes its address.\",\"And deep copy will change the array value in the memory of the address, as follows\",\"package main import \\\"fmt\\\" func main() { var slice1 = []int{7, 8, 9} var slice2 = make([]int, 3) //slice initialization copy(slice2, slice1) //deep copy will change the array value in the memory of the address fmt.Println(slice2) slice2[0] = 648 // change slice2[0], slice1[0] remains unchanged fmt.Println(slice2) fmt.Println(slice1) } \",\"[7 8 9] [648 8 9] [7 8 9] \"]},\"287\":{\"h\":\"What's the difference between and ?\",\"t\":[\"Answer\",\"new is used to allocate memory for any type and return a pointer to that type, initializing the value to zero.\",\"new is not commonly used\",\"package main import \\\"fmt\\\" func main() { s := new(string) n := new(int) fmt.Println(s) // 0xc00008a030 fmt.Println(*s) // \\\"\\\" fmt.Println(n) // 0xc00000a0d8 fmt.Println(*n) // 0 } \",\"make is mainly used for initializing slices, map, and channel.\",\"package main import \\\"fmt\\\" func main() { m := make(map[string]int, 10) fmt.Println(m) // map[] } \"]},\"288\":{\"h\":\"What's the difference between arrays and slices?\",\"t\":[\"Answer\",\"The length of an array is fixed, determined at creation, and cannot be changed. The length of a slice is dynamic and will automatically expand based on the data added.\",\"When passing parameters in functions, data is passed by value, while slices are passed by reference.\",\"Slices have a capacity (capacity) parameter, arrays do not.\"]},\"289\":{\"h\":\"If adds data at the same time, will execute indefinitely?\",\"t\":[\"Answer\",\"No, when executing for range, what is actually traversed is a copy of the variable, so changing the traversed variable will not have an impact.\",\"package main import \\\"fmt\\\" func main() { n := []int{1, 2, 3} for _, v := range n { n = append(n, v) } fmt.Println(n) // Result: [1 2 3 1 2 3] } \"]},\"290\":{\"h\":\"What is the execution order of multiple defers?\",\"t\":[\"Answer\",\"The execution order is similar to a stack, first in, last out.\",\"package main import \\\"fmt\\\" func main() { defer func() { fmt.Println(1) }() defer func() { fmt.Println(2) }() defer func() { fmt.Println(3) }() } // Result: // 3 // 2 // 1 \"]},\"291\":{\"h\":\"What is data overflow?\",\"t\":[\"Answer\",\"When using numeric types, if the data reaches the maximum value, the next data will overflow, such as uint will start from 0 after overflow, int will become negative after overflow.\",\"package main import ( \\\"fmt\\\" \\\"math\\\" ) func main() { var n int8 = math.MaxInt8 var m uint8 = math.MaxUint8 n += 2 m += 1 fmt.Println(n) // -127 fmt.Println(m) // 0 } \",\"How to avoid?\",\"Use uint for positive numbers first, the range is larger\",\"Add judgment code to determine whether it overflows\"]},\"292\":{\"h\":\"Should function parameters use value or pointer?\",\"t\":[\"Answer\",\"Value transfer\",\"Generally speaking, value transfer can be used for common types. The advantage of value transfer is that modifications to the value within the function will not affect the original variable and will not cause concurrency problems. The disadvantage is that value transfer will copy a copy of the corresponding variable, which will occupy more memory. If the input structure is very large, it is not suitable to use value transfer.\",\"Pointer and reference transfer\",\"The advantage of using pointer transfer is that it directly transfers the address of the variable, without the need for extra space. The disadvantage is that data modification during concurrent operations will affect the original data. Passing in a slice is actually passing the pointer of the slice to avoid repeated copying. If an array is passed in, it is value transfer, and a copy will be made.\"]},\"293\":{\"h\":\"Map\"},\"294\":{\"h\":\"Can an uninitialized Map read a key?\",\"t\":[\"Answer\",\"Yes, an uninitialized map that hasn't undergone make initialization will return the zero value of the current type for any key read.\",\"package main import \\\"fmt\\\" func main() { var m map[int]int fmt.Println(m[1]) } // Output: // 0 \"]},\"295\":{\"h\":\"What happens if you assign a value to an uninitialized Map?\",\"t\":[\"Answer\",\"It will trigger a panic exception error.\",\"package main func main() { var m map[int]int m[1] = 1 } // Output: // panic: assignment to entry in nil map \"]},\"296\":{\"h\":\"What happens if you delete a key from an uninitialized Map?\",\"t\":[\"Answer\",\"In earlier versions, performing a delete operation on an uninitialized map would throw a panic error. In current versions, performing a delete operation on an uninitialized map will not cause an error.\",\"package main func main() { var m map[int]int delete(m, 1) } // Output: // \"]},\"297\":{\"h\":\"Medium\"},\"298\":{\"h\":\"Have you used ? What are the use cases for ?\",\"t\":[\"Answer\",\"Scenario\",\"Introduction\",\"Timeout handling\",\"By using context, you can easily set a timeout, and the coroutine will automatically terminate after the timeout\",\"Terminate coroutine\",\"By using the cancel() method, coroutines can be easily terminated\",\"Data transfer\",\"We can write data into context to transfer data between different coroutines\"]},\"299\":{\"h\":\"Is thread-safe?\",\"t\":[\"Answer\",\"channel is thread-safe, the reason is that channel has implemented a lock mechanism internally,\"]},\"300\":{\"h\":\"Is the traversal of a Map using range ordered or unordered?\",\"t\":[\"Answer\",\"Unordered\",\"Internally, Map uses a hash algorithm to place elements. When it automatically expands, it recalculates the hash values, so the addresses of the elements keep changing. To prevent users from thinking that the arrangement of Map elements is ordered, it directly returns in a random order, so the traversal is unordered.\"]},\"301\":{\"h\":\"Is Map concurrency-safe?\",\"t\":[\"Answer\",\"Map cannot guarantee concurrency safety\",\"To ensure concurrency safety, use the following methods:\",\"Manually add read-write locks\",\"Use sync.Map\"]},\"302\":{\"h\":\"Will the memory of a key be released after the key is deleted from the Map?\",\"t\":[\"Answer\",\"If the value of the map is\",\"Value type (intuintfloat32stringstruct{}...), then the value will not be garbage collected after the key is deleted\",\"Reference type (mapsliceschan ...), then the value will be garbage collected after the key is deleted\",\"If we want to force garbage collection, how do we operate?\",\"Set the map to nil\",\"Place the values that need to be retained in a new map and assign it to the current map\",\"Exclusive for members\",\"Code combat analysis\"]}},\"dirtCount\":0,\"index\":[[\"酥\",{\"1\":{\"283\":1,\"284\":1}}],[\"×\",{\"1\":{\"269\":6}}],[\"√\",{\"1\":{\"269\":6}}],[\"🚀\",{\"1\":{\"203\":1}}],[\"$\",{\"1\":{\"194\":11}}],[\"z=\",{\"1\":{\"229\":1}}],[\"zombie\",{\"1\":{\"168\":1}}],[\"zeromicro\",{\"1\":{\"202\":1}}],[\"zero\",{\"0\":{\"22\":1,\"23\":1,\"82\":1,\"199\":1,\"201\":1},\"1\":{\"16\":3,\"17\":1,\"22\":1,\"69\":1,\"82\":2,\"114\":2,\"140\":1,\"200\":13,\"201\":2,\"202\":1,\"203\":1,\"287\":1,\"294\":1}}],[\"β\",{\"1\":{\"137\":2}}],[\"γ\",{\"1\":{\"137\":3}}],[\"α\",{\"1\":{\"137\":3}}],[\"^=\",{\"1\":{\"88\":2}}],[\"^\",{\"1\":{\"87\":3,\"88\":1,\"90\":2}}],[\"||\",{\"1\":{\"90\":1}}],[\"|=\",{\"1\":{\"88\":2}}],[\"|\",{\"1\":{\"87\":3,\"88\":1,\"90\":1}}],[\"90\",{\"1\":{\"279\":1}}],[\"96\",{\"1\":{\"279\":1}}],[\"99\",{\"1\":{\"272\":3}}],[\"9999\",{\"1\":{\"176\":4}}],[\"9\",{\"1\":{\"78\":1,\"107\":3,\"140\":1,\"192\":1,\"232\":2,\"235\":2,\"237\":2,\"286\":8}}],[\"8888\",{\"1\":{\"176\":4}}],[\"8s+\",{\"1\":{\"149\":1}}],[\"8s\",{\"1\":{\"149\":1}}],[\"8a2e\",{\"1\":{\"143\":1}}],[\"85a3\",{\"1\":{\"143\":1}}],[\"8\",{\"1\":{\"72\":1,\"78\":1,\"140\":2,\"141\":1,\"161\":1,\"162\":1,\"171\":4,\"192\":1,\"232\":3,\"233\":1,\"235\":3,\"236\":1,\"237\":3,\"286\":8}}],[\"8080\",{\"1\":{\"15\":2}}],[\"80\",{\"1\":{\"4\":1,\"133\":1,\"176\":1}}],[\"~\",{\"1\":{\"72\":2}}],[\"∞\",{\"1\":{\"72\":1}}],[\"768\",{\"1\":{\"159\":1}}],[\"7334\",{\"1\":{\"143\":1}}],[\"70k+\",{\"1\":{\"196\":1}}],[\"70\",{\"1\":{\"84\":1}}],[\"7\",{\"1\":{\"64\":1,\"69\":1,\"78\":1,\"140\":1,\"232\":1,\"235\":1,\"237\":1,\"244\":1,\"286\":5}}],[\"63s\",{\"1\":{\"149\":1}}],[\"60\",{\"1\":{\"140\":1}}],[\"66\",{\"1\":{\"79\":1,\"98\":1}}],[\"648\",{\"1\":{\"286\":6}}],[\"64\",{\"1\":{\"72\":2,\"73\":1,\"74\":1}}],[\"6\",{\"1\":{\"64\":1,\"78\":1,\"108\":2,\"131\":1,\"140\":3,\"171\":1,\"226\":2,\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"244\":3,\"264\":1}}],[\"41\",{\"1\":{\"192\":1}}],[\"48th\",{\"1\":{\"170\":1}}],[\"48\",{\"1\":{\"170\":1,\"171\":8}}],[\"48s\",{\"1\":{\"39\":1}}],[\"4s+\",{\"1\":{\"149\":1}}],[\"4s\",{\"1\":{\"149\":1}}],[\"443\",{\"1\":{\"133\":1}}],[\"40\",{\"1\":{\"143\":1}}],[\"4020\",{\"1\":{\"141\":1}}],[\"404\",{\"1\":{\"132\":1}}],[\"403\",{\"1\":{\"132\":1}}],[\"401\",{\"1\":{\"132\":1}}],[\"4000\",{\"1\":{\"141\":1}}],[\"400\",{\"1\":{\"132\":1}}],[\"4xx\",{\"1\":{\"132\":1}}],[\"49\",{\"1\":{\"84\":1}}],[\"4\",{\"0\":{\"284\":1},\"1\":{\"39\":2,\"64\":2,\"65\":1,\"66\":1,\"69\":1,\"77\":1,\"78\":1,\"90\":1,\"106\":2,\"108\":2,\"109\":2,\"140\":4,\"143\":1,\"152\":3,\"171\":1,\"173\":1,\"192\":2,\"226\":2,\"231\":1,\"232\":3,\"233\":4,\"235\":5,\"236\":4,\"237\":5,\"284\":1}}],[\"<>\",{\"1\":{\"245\":1}}],[\"<project\",{\"1\":{\"194\":1}}],[\"<target\",{\"1\":{\"194\":1}}],[\"<<=\",{\"1\":{\"88\":2}}],[\"<<\",{\"1\":{\"87\":2,\"88\":1,\"90\":1}}],[\"<=\",{\"1\":{\"65\":1,\"85\":2,\"90\":1,\"245\":1,\"263\":1}}],[\"<\",{\"1\":{\"39\":4,\"42\":4,\"43\":2,\"58\":1,\"65\":1,\"66\":1,\"67\":5,\"69\":1,\"78\":1,\"85\":2,\"90\":1,\"113\":4,\"114\":1,\"115\":3,\"116\":1,\"120\":1,\"125\":1,\"126\":1,\"154\":1,\"226\":1,\"245\":1,\"263\":1}}],[\"qos\",{\"1\":{\"143\":1}}],[\"q\",{\"1\":{\"31\":2,\"32\":3,\"87\":4}}],[\"quantity\",{\"1\":{\"244\":2}}],[\"quality\",{\"1\":{\"143\":1}}],[\"question\",{\"1\":{\"286\":1}}],[\"questions\",{\"1\":{\"1\":2}}],[\"queues\",{\"1\":{\"225\":1}}],[\"queried\",{\"1\":{\"258\":1,\"259\":1,\"263\":2}}],[\"queries\",{\"1\":{\"168\":3,\"210\":2,\"217\":3,\"230\":1,\"247\":1,\"267\":2}}],[\"querydictionarydetails\",{\"1\":{\"214\":1}}],[\"querying\",{\"0\":{\"214\":1,\"221\":1},\"1\":{\"259\":1,\"269\":1}}],[\"query\",{\"0\":{\"238\":1},\"1\":{\"166\":5,\"210\":1,\"214\":2,\"237\":2,\"247\":1,\"248\":1,\"250\":1,\"258\":2,\"259\":5,\"263\":6,\"264\":9,\"267\":2}}],[\"quick\",{\"0\":{\"189\":1},\"1\":{\"181\":1}}],[\"quickly\",{\"1\":{\"1\":1,\"163\":1,\"181\":1,\"188\":1,\"196\":1,\"200\":1,\"217\":1,\"250\":1}}],[\"quit\",{\"1\":{\"67\":6}}],[\"31\",{\"1\":{\"175\":1}}],[\"310\",{\"1\":{\"141\":1}}],[\"3rd\",{\"1\":{\"170\":1}}],[\"3xx\",{\"1\":{\"132\":1}}],[\"307\",{\"1\":{\"132\":1}}],[\"305\",{\"1\":{\"132\":1}}],[\"304\",{\"1\":{\"132\":1}}],[\"303\",{\"1\":{\"132\":1}}],[\"302\",{\"1\":{\"132\":2}}],[\"301\",{\"1\":{\"132\":3}}],[\"300\",{\"1\":{\"132\":1}}],[\"30\",{\"1\":{\"84\":1}}],[\"3i\",{\"1\":{\"74\":2}}],[\"32s\",{\"1\":{\"149\":1}}],[\"32bit\",{\"1\":{\"147\":1}}],[\"32\",{\"1\":{\"72\":2,\"73\":1,\"74\":1,\"143\":1,\"171\":4}}],[\"3\",{\"1\":{\"25\":2,\"64\":1,\"65\":2,\"66\":1,\"74\":1,\"77\":1,\"78\":1,\"90\":1,\"106\":2,\"108\":2,\"109\":2,\"116\":1,\"125\":1,\"126\":1,\"140\":2,\"143\":1,\"152\":3,\"173\":1,\"192\":2,\"226\":2,\"231\":1,\"232\":3,\"233\":5,\"235\":5,\"236\":5,\"237\":5,\"279\":1,\"286\":2,\"289\":3,\"290\":2}}],[\"kind\",{\"1\":{\"276\":2,\"278\":1}}],[\"kratos\",{\"0\":{\"204\":1,\"206\":1,\"207\":1},\"1\":{\"205\":8,\"206\":3,\"207\":3,\"208\":2}}],[\"kernel\",{\"1\":{\"181\":1}}],[\"keys\",{\"0\":{\"228\":1},\"1\":{\"99\":1,\"136\":2,\"137\":1,\"217\":1,\"228\":2,\"267\":8}}],[\"keytype\",{\"1\":{\"79\":2,\"98\":2}}],[\"key\",{\"0\":{\"100\":1,\"101\":1,\"255\":1,\"294\":1,\"296\":1,\"302\":2},\"1\":{\"60\":1,\"79\":3,\"98\":3,\"99\":18,\"100\":2,\"101\":3,\"120\":1,\"124\":1,\"134\":12,\"136\":6,\"137\":6,\"228\":31,\"251\":2,\"255\":1,\"258\":1,\"266\":1,\"269\":1,\"279\":1,\"294\":1,\"302\":2}}],[\"keywords\",{\"0\":{\"48\":1,\"49\":1},\"1\":{\"49\":5}}],[\"keep\",{\"1\":{\"42\":1,\"300\":1}}],[\"k++\",{\"1\":{\"39\":2}}],[\"known\",{\"1\":{\"136\":2,\"163\":1,\"170\":1,\"196\":1,\"229\":1}}],[\"know\",{\"1\":{\"39\":1,\"47\":1,\"109\":1,\"136\":1,\"160\":1,\"177\":1}}],[\"knowledge\",{\"1\":{\"1\":2}}],[\"k3\",{\"1\":{\"25\":2}}],[\"k2\",{\"1\":{\"25\":2}}],[\"k1\",{\"1\":{\"25\":2}}],[\"k\",{\"1\":{\"21\":2,\"39\":6,\"266\":2}}],[\"`json\",{\"1\":{\"41\":2}}],[\"`init\",{\"1\":{\"38\":1}}],[\"`\",{\"1\":{\"19\":1,\"38\":1,\"41\":2}}],[\"`unknown\",{\"1\":{\"19\":1}}],[\"0b0001\",{\"1\":{\"277\":2}}],[\"0o25\",{\"1\":{\"277\":2}}],[\"0～192\",{\"1\":{\"175\":1}}],[\"0～172\",{\"1\":{\"175\":1}}],[\"0～10\",{\"1\":{\"175\":1}}],[\"04\",{\"1\":{\"172\":1}}],[\"03\",{\"1\":{\"172\":2}}],[\"0370\",{\"1\":{\"143\":1}}],[\"02\",{\"1\":{\"172\":1}}],[\"0101\",{\"1\":{\"277\":2}}],[\"01\",{\"1\":{\"172\":1}}],[\"0111\",{\"1\":{\"87\":2}}],[\"0110\",{\"1\":{\"87\":2}}],[\"0~15\",{\"1\":{\"147\":1}}],[\"0~65535\",{\"1\":{\"147\":3}}],[\"0db8\",{\"1\":{\"143\":1}}],[\"00\",{\"1\":{\"172\":17}}],[\"0001\",{\"1\":{\"87\":2}}],[\"0000\",{\"1\":{\"87\":2,\"143\":2,\"171\":2}}],[\"0011\",{\"1\":{\"87\":1}}],[\"0+0i\",{\"1\":{\"82\":1}}],[\"0644\",{\"1\":{\"18\":2}}],[\"0\",{\"0\":{\"135\":2},\"1\":{\"17\":3,\"39\":7,\"43\":1,\"51\":1,\"63\":1,\"66\":2,\"67\":3,\"69\":1,\"72\":2,\"78\":2,\"82\":6,\"87\":12,\"106\":1,\"107\":5,\"108\":4,\"109\":3,\"128\":1,\"131\":1,\"132\":1,\"135\":2,\"140\":4,\"141\":3,\"142\":2,\"143\":1,\"147\":1,\"161\":1,\"170\":2,\"175\":4,\"180\":1,\"192\":2,\"194\":14,\"226\":1,\"244\":2,\"249\":1,\"283\":1,\"286\":6,\"287\":1,\"291\":2,\"294\":1}}],[\"0xc00000a0d8\",{\"1\":{\"287\":1}}],[\"0xc00008a030\",{\"1\":{\"287\":1}}],[\"0xc000086020\",{\"1\":{\"272\":1}}],[\"0x15\",{\"1\":{\"277\":2}}],[\"0x0800\",{\"1\":{\"171\":1}}],[\"0x0806\",{\"1\":{\"171\":1}}],[\"0x0000\",{\"1\":{\"171\":1}}],[\"0x0000ff\",{\"1\":{\"5\":2}}],[\"0x00ff00\",{\"1\":{\"5\":2}}],[\"0xffff\",{\"1\":{\"171\":1}}],[\"0xff0000\",{\"1\":{\"5\":2}}],[\"y=\",{\"1\":{\"229\":1}}],[\"y+1\",{\"1\":{\"149\":1}}],[\"yes\",{\"1\":{\"85\":6,\"141\":1,\"162\":3,\"294\":1}}],[\"yet\",{\"1\":{\"9\":1,\"132\":1,\"157\":1,\"210\":1,\"269\":2}}],[\"y\",{\"1\":{\"67\":3,\"149\":1,\"229\":3,\"283\":1,\"284\":1}}],[\"your\",{\"1\":{\"7\":1,\"16\":1,\"132\":1,\"193\":3,\"194\":1,\"203\":1,\"285\":1}}],[\"you\",{\"0\":{\"295\":1,\"296\":1,\"298\":1},\"1\":{\"1\":1,\"8\":2,\"9\":1,\"22\":1,\"30\":1,\"34\":1,\"39\":2,\"43\":2,\"47\":1,\"64\":3,\"69\":1,\"79\":1,\"81\":1,\"98\":1,\"99\":1,\"100\":1,\"103\":1,\"105\":1,\"109\":4,\"114\":1,\"115\":1,\"187\":1,\"188\":1,\"192\":3,\"193\":3,\"201\":1,\"206\":1,\"229\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"259\":3,\"263\":6,\"269\":1,\"278\":2,\"285\":2,\"298\":1}}],[\"x=\",{\"1\":{\"229\":1}}],[\"xerror\",{\"1\":{\"225\":1}}],[\"xxxx\",{\"1\":{\"184\":1}}],[\"x+2\",{\"1\":{\"149\":2}}],[\"x+1\",{\"1\":{\"149\":1}}],[\"x+y\",{\"1\":{\"67\":1}}],[\"xor\",{\"1\":{\"87\":1}}],[\"xml\",{\"1\":{\"41\":1}}],[\"x\",{\"1\":{\"7\":2,\"17\":2,\"67\":3,\"137\":2,\"149\":1,\"229\":3}}],[\">>=\",{\"1\":{\"88\":2}}],[\">>\",{\"1\":{\"87\":2,\"88\":1,\"90\":1}}],[\">=\",{\"1\":{\"65\":1,\"85\":2,\"90\":1,\"245\":1,\"263\":1}}],[\">\",{\"1\":{\"6\":2,\"63\":1,\"85\":2,\"90\":1,\"154\":1,\"226\":1,\"245\":2,\"247\":1,\"248\":1,\"263\":1}}],[\"r\",{\"1\":{\"184\":1,\"198\":3}}],[\"rmi\",{\"1\":{\"182\":1}}],[\"rm\",{\"1\":{\"182\":1}}],[\"rfc\",{\"1\":{\"152\":2,\"159\":1}}],[\"rto\",{\"1\":{\"152\":10}}],[\"rtt\",{\"1\":{\"152\":6}}],[\"rsp=1\",{\"1\":{\"147\":1}}],[\"rst\",{\"1\":{\"144\":1,\"147\":2}}],[\"rigorously\",{\"1\":{\"217\":1}}],[\"right\",{\"0\":{\"236\":1},\"1\":{\"85\":4,\"87\":1,\"88\":1,\"236\":1}}],[\"rich\",{\"1\":{\"181\":2,\"192\":2,\"196\":1,\"200\":1,\"205\":1}}],[\"rip\",{\"1\":{\"129\":1}}],[\"rpc\",{\"1\":{\"128\":1}}],[\"role\",{\"1\":{\"273\":1}}],[\"rolled\",{\"1\":{\"269\":2}}],[\"roll\",{\"1\":{\"184\":2}}],[\"rollback\",{\"1\":{\"184\":1,\"217\":1}}],[\"rogers\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"romero\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"rows\",{\"1\":{\"233\":1,\"244\":2,\"249\":5,\"264\":1,\"269\":1}}],[\"row\",{\"1\":{\"228\":1,\"244\":1,\"251\":1,\"264\":3,\"269\":1}}],[\"robust\",{\"1\":{\"200\":2}}],[\"routing\",{\"1\":{\"140\":2}}],[\"routers\",{\"1\":{\"140\":1,\"170\":1,\"172\":1}}],[\"router\",{\"1\":{\"140\":1,\"143\":1,\"166\":1,\"172\":13,\"175\":2,\"176\":6,\"178\":2}}],[\"routes\",{\"1\":{\"129\":1}}],[\"route\",{\"1\":{\"128\":1,\"140\":2}}],[\"round\",{\"1\":{\"65\":1,\"152\":1,\"155\":1,\"156\":1}}],[\"root\",{\"0\":{\"121\":1,\"122\":1},\"1\":{\"121\":3,\"134\":2,\"166\":3,\"225\":1,\"266\":2}}],[\"runs\",{\"1\":{\"181\":1,\"194\":2}}],[\"runtimeexecutable\",{\"1\":{\"194\":1}}],[\"runtime\",{\"1\":{\"180\":1,\"181\":1,\"273\":1}}],[\"run\",{\"1\":{\"44\":1,\"180\":3,\"181\":1,\"182\":2,\"194\":4,\"198\":1,\"277\":1,\"278\":5}}],[\"rune\",{\"0\":{\"284\":1},\"1\":{\"37\":2,\"72\":1,\"82\":1,\"281\":1,\"282\":1,\"283\":2,\"284\":1,\"285\":1}}],[\"running\",{\"1\":{\"35\":8,\"40\":1,\"42\":1,\"125\":4,\"126\":4,\"194\":1}}],[\"rules\",{\"1\":{\"11\":1,\"163\":1}}],[\"rainbow\",{\"1\":{\"188\":3,\"192\":4}}],[\"rapid\",{\"1\":{\"181\":2,\"196\":1}}],[\"rate\",{\"1\":{\"153\":1,\"163\":2,\"173\":4,\"263\":1}}],[\"rather\",{\"1\":{\"12\":1,\"17\":1,\"40\":2}}],[\"rarp\",{\"1\":{\"129\":1,\"172\":3}}],[\"randomly\",{\"1\":{\"115\":1}}],[\"random\",{\"1\":{\"67\":1,\"168\":3,\"176\":1,\"225\":2,\"300\":1}}],[\"ranges\",{\"0\":{\"285\":1},\"1\":{\"266\":1}}],[\"range\",{\"0\":{\"300\":1},\"1\":{\"6\":2,\"12\":2,\"65\":1,\"72\":1,\"99\":7,\"114\":1,\"137\":1,\"147\":4,\"175\":1,\"217\":1,\"245\":1,\"267\":2,\"283\":1,\"289\":2,\"291\":1}}],[\"race\",{\"1\":{\"35\":1}}],[\"raw\",{\"0\":{\"19\":1},\"1\":{\"19\":1,\"217\":1}}],[\"reyes\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"reinventing\",{\"1\":{\"224\":1}}],[\"rebase\",{\"1\":{\"184\":2}}],[\"rebuilds\",{\"1\":{\"147\":1}}],[\"reliability\",{\"0\":{\"150\":1},\"1\":{\"150\":1,\"200\":1,\"205\":1}}],[\"reliable\",{\"1\":{\"146\":1,\"152\":1,\"162\":1,\"200\":2,\"205\":2}}],[\"released\",{\"0\":{\"302\":1},\"1\":{\"163\":1,\"180\":1}}],[\"release\",{\"1\":{\"147\":1,\"273\":2}}],[\"relevant\",{\"1\":{\"137\":1,\"140\":1}}],[\"relationships\",{\"1\":{\"210\":1,\"228\":2,\"273\":1}}],[\"relationship\",{\"0\":{\"228\":1},\"1\":{\"172\":1,\"228\":2}}],[\"relational\",{\"0\":{\"85\":1},\"1\":{\"250\":1}}],[\"relative\",{\"1\":{\"140\":1}}],[\"relatively\",{\"1\":{\"133\":2,\"162\":1,\"196\":2,\"200\":2,\"205\":2}}],[\"related\",{\"0\":{\"5\":1},\"1\":{\"1\":3,\"5\":2,\"154\":1,\"225\":3,\"279\":1}}],[\"revert\",{\"1\":{\"184\":1}}],[\"reverse\",{\"1\":{\"172\":3}}],[\"revocation\",{\"1\":{\"134\":1}}],[\"review\",{\"1\":{\"1\":1}}],[\"retained\",{\"1\":{\"302\":1}}],[\"retaining\",{\"1\":{\"124\":1}}],[\"retrieval\",{\"1\":{\"251\":1,\"273\":1}}],[\"retrieving\",{\"1\":{\"225\":3}}],[\"retrieve\",{\"1\":{\"221\":1}}],[\"retries\",{\"1\":{\"163\":1}}],[\"retransmit\",{\"1\":{\"152\":5,\"154\":1,\"157\":2}}],[\"retransmitted\",{\"1\":{\"149\":1,\"152\":1}}],[\"retransmissions\",{\"1\":{\"152\":2}}],[\"retransmission\",{\"1\":{\"150\":1,\"152\":15}}],[\"retrying\",{\"1\":{\"225\":1}}],[\"retry\",{\"1\":{\"149\":1,\"225\":2}}],[\"returned\",{\"1\":{\"132\":3,\"149\":1,\"152\":1,\"176\":1,\"233\":1,\"235\":2,\"236\":2,\"237\":3,\"239\":1,\"248\":1,\"278\":1}}],[\"returning\",{\"1\":{\"17\":1}}],[\"returns\",{\"1\":{\"14\":1,\"131\":2,\"132\":1,\"134\":1,\"149\":1,\"152\":1,\"176\":1,\"237\":1,\"300\":1}}],[\"return\",{\"0\":{\"240\":1,\"241\":1},\"1\":{\"11\":4,\"12\":3,\"14\":6,\"16\":1,\"17\":5,\"18\":8,\"29\":1,\"30\":1,\"31\":2,\"32\":7,\"33\":1,\"35\":4,\"40\":5,\"42\":1,\"52\":1,\"67\":1,\"69\":6,\"96\":1,\"116\":1,\"125\":1,\"126\":1,\"131\":1,\"132\":5,\"152\":1,\"166\":3,\"168\":1,\"226\":3,\"233\":1,\"237\":1,\"264\":1,\"273\":1,\"278\":2,\"287\":1,\"294\":1}}],[\"restrictions\",{\"1\":{\"251\":1}}],[\"restart\",{\"1\":{\"182\":2}}],[\"restarts\",{\"1\":{\"178\":1}}],[\"responds\",{\"1\":{\"163\":3}}],[\"responding\",{\"1\":{\"153\":1,\"163\":1}}],[\"respond\",{\"1\":{\"132\":1,\"168\":1,\"172\":2}}],[\"responses\",{\"1\":{\"135\":2,\"163\":1,\"168\":1}}],[\"response\",{\"1\":{\"131\":2,\"132\":2,\"134\":1,\"135\":1,\"156\":1,\"163\":4,\"171\":1,\"172\":1,\"173\":1}}],[\"responsible\",{\"1\":{\"128\":2}}],[\"resent\",{\"1\":{\"160\":1}}],[\"resend\",{\"1\":{\"132\":1,\"149\":1,\"152\":1}}],[\"reset\",{\"1\":{\"132\":3,\"156\":1,\"184\":3}}],[\"reserved\",{\"1\":{\"49\":1,\"140\":4,\"170\":1}}],[\"resulting\",{\"1\":{\"181\":1,\"210\":1}}],[\"result\",{\"1\":{\"64\":2,\"66\":1,\"69\":3,\"70\":1,\"78\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"99\":1,\"100\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"116\":1,\"166\":2,\"205\":1,\"229\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":2,\"277\":1,\"289\":1,\"290\":1}}],[\"results\",{\"1\":{\"38\":1,\"123\":1,\"125\":1,\"126\":1,\"239\":1,\"269\":1}}],[\"resizing\",{\"1\":{\"47\":1}}],[\"resolving\",{\"1\":{\"200\":1}}],[\"resolvers\",{\"1\":{\"168\":1}}],[\"resolver\",{\"1\":{\"168\":3,\"217\":1}}],[\"resolved\",{\"1\":{\"167\":1}}],[\"resolve\",{\"1\":{\"31\":1,\"172\":1,\"173\":1,\"205\":1}}],[\"resolveerror\",{\"1\":{\"31\":2}}],[\"resolution\",{\"0\":{\"166\":1},\"1\":{\"165\":1,\"170\":1,\"172\":6,\"173\":1}}],[\"resource\",{\"1\":{\"131\":2,\"132\":10,\"163\":1,\"181\":2}}],[\"resources\",{\"1\":{\"46\":1,\"132\":4,\"163\":6,\"168\":1,\"180\":1}}],[\"reason\",{\"1\":{\"149\":1,\"299\":1}}],[\"reasons\",{\"1\":{\"40\":1}}],[\"reassemble\",{\"1\":{\"147\":1}}],[\"reassembled\",{\"1\":{\"142\":1}}],[\"reassembly\",{\"0\":{\"142\":1},\"1\":{\"140\":1}}],[\"reaches\",{\"1\":{\"112\":1,\"140\":1,\"155\":1,\"156\":1,\"163\":1,\"176\":2,\"291\":1}}],[\"real\",{\"1\":{\"37\":2,\"74\":2}}],[\"reads\",{\"1\":{\"269\":4}}],[\"readily\",{\"1\":{\"224\":1}}],[\"reading\",{\"1\":{\"114\":1,\"225\":1,\"269\":5}}],[\"readall\",{\"1\":{\"40\":2}}],[\"readability\",{\"1\":{\"4\":1}}],[\"readfile\",{\"1\":{\"18\":2,\"40\":4}}],[\"read\",{\"0\":{\"294\":1},\"1\":{\"16\":2,\"59\":1,\"114\":1,\"192\":1,\"217\":1,\"269\":20,\"294\":1,\"301\":1}}],[\"readwriter\",{\"1\":{\"16\":1}}],[\"remarks\",{\"1\":{\"249\":1}}],[\"remaining\",{\"1\":{\"65\":1}}],[\"remains\",{\"1\":{\"29\":1,\"163\":1,\"286\":1}}],[\"remember\",{\"1\":{\"165\":1}}],[\"remote\",{\"1\":{\"132\":1,\"184\":4,\"192\":8,\"193\":2}}],[\"removed\",{\"1\":{\"228\":1}}],[\"removes\",{\"1\":{\"36\":1}}],[\"remove\",{\"0\":{\"242\":1},\"1\":{\"36\":3,\"182\":2}}],[\"regularly\",{\"1\":{\"173\":1}}],[\"regular\",{\"1\":{\"31\":1}}],[\"repeatable\",{\"1\":{\"269\":9}}],[\"repeated\",{\"1\":{\"135\":1,\"292\":1}}],[\"repositories\",{\"1\":{\"192\":1}}],[\"repository\",{\"1\":{\"184\":1}}],[\"reposts\",{\"1\":{\"1\":1}}],[\"reply\",{\"1\":{\"161\":1,\"163\":2,\"171\":4}}],[\"replacement\",{\"1\":{\"225\":1}}],[\"replace\",{\"1\":{\"131\":1}}],[\"represented\",{\"0\":{\"285\":1},\"1\":{\"194\":1,\"277\":2}}],[\"representing\",{\"1\":{\"147\":1}}],[\"represent\",{\"1\":{\"140\":1,\"281\":1,\"283\":2,\"285\":2}}],[\"represents\",{\"1\":{\"17\":1,\"36\":2,\"140\":5,\"147\":1,\"210\":1,\"244\":2,\"245\":2,\"249\":2}}],[\"repudiation\",{\"1\":{\"137\":1}}],[\"reflection\",{\"1\":{\"210\":1,\"217\":1}}],[\"refers\",{\"1\":{\"141\":1,\"144\":1,\"147\":1,\"152\":2,\"229\":1,\"259\":1,\"269\":1}}],[\"references\",{\"1\":{\"273\":1}}],[\"reference\",{\"1\":{\"9\":1,\"109\":1,\"159\":1,\"286\":2,\"288\":1,\"292\":1,\"302\":1}}],[\"refrain\",{\"1\":{\"9\":1}}],[\"recalculates\",{\"1\":{\"300\":1}}],[\"recalculate\",{\"1\":{\"137\":1,\"141\":1}}],[\"recall\",{\"1\":{\"9\":1}}],[\"recent\",{\"1\":{\"249\":1,\"269\":1}}],[\"recently\",{\"1\":{\"149\":1}}],[\"reception\",{\"1\":{\"136\":1}}],[\"received\",{\"1\":{\"112\":1,\"131\":1,\"132\":3,\"135\":1,\"147\":4,\"149\":2,\"152\":3,\"157\":2,\"163\":1}}],[\"receive\",{\"1\":{\"67\":1,\"115\":5,\"128\":1,\"147\":2,\"152\":1,\"163\":1,\"172\":1}}],[\"receives\",{\"1\":{\"67\":1,\"147\":1,\"152\":2,\"157\":1,\"163\":2}}],[\"receiver\",{\"1\":{\"11\":1,\"139\":1,\"140\":1,\"142\":1,\"147\":6,\"152\":1,\"153\":2,\"163\":2}}],[\"receiving\",{\"0\":{\"113\":1},\"1\":{\"58\":2,\"113\":1,\"117\":1,\"152\":2,\"153\":1,\"163\":1,\"172\":3,\"173\":1}}],[\"recipients\",{\"1\":{\"136\":1}}],[\"recursively\",{\"1\":{\"166\":1}}],[\"recursive\",{\"1\":{\"134\":1}}],[\"records\",{\"1\":{\"147\":1,\"176\":1}}],[\"record\",{\"0\":{\"167\":1},\"1\":{\"140\":2,\"152\":1,\"166\":1,\"167\":1,\"269\":2}}],[\"recovery\",{\"1\":{\"154\":1,\"157\":2}}],[\"recover\",{\"1\":{\"34\":1,\"37\":2}}],[\"recoverable\",{\"1\":{\"32\":1}}],[\"recovering\",{\"1\":{\"32\":1}}],[\"recommended\",{\"0\":{\"188\":1,\"192\":1},\"1\":{\"5\":3,\"6\":3,\"7\":2,\"8\":1,\"11\":2,\"12\":2,\"13\":2,\"14\":2,\"16\":4,\"17\":6,\"19\":2,\"22\":2,\"23\":2,\"24\":2,\"25\":2,\"26\":1,\"32\":4,\"33\":2,\"35\":2,\"36\":2,\"39\":2,\"41\":2,\"60\":1,\"187\":1,\"191\":1,\"263\":1}}],[\"rename\",{\"1\":{\"9\":1,\"41\":1}}],[\"re\",{\"1\":{\"8\":1,\"156\":1}}],[\"redundant\",{\"1\":{\"228\":1}}],[\"reducing\",{\"1\":{\"152\":1,\"163\":1,\"173\":1,\"259\":1,\"264\":1}}],[\"reduces\",{\"1\":{\"135\":1,\"250\":1}}],[\"reduce\",{\"0\":{\"12\":1,\"18\":1},\"1\":{\"39\":1,\"152\":1,\"163\":1,\"217\":1,\"224\":1,\"225\":1,\"237\":1,\"250\":2,\"258\":2,\"259\":3,\"263\":3,\"264\":1,\"267\":1}}],[\"redirects\",{\"1\":{\"168\":1}}],[\"redirect\",{\"1\":{\"132\":4,\"177\":1}}],[\"redirection\",{\"1\":{\"132\":1}}],[\"red\",{\"1\":{\"5\":2,\"279\":2}}],[\"requiring\",{\"1\":{\"140\":2,\"200\":1}}],[\"requirement\",{\"1\":{\"183\":1}}],[\"requirements\",{\"1\":{\"1\":1}}],[\"required\",{\"1\":{\"140\":1,\"152\":1}}],[\"requires\",{\"1\":{\"46\":1,\"53\":1,\"135\":1,\"140\":1,\"143\":1}}],[\"require\",{\"1\":{\"19\":1,\"139\":1,\"189\":1,\"217\":1,\"267\":1}}],[\"requested\",{\"1\":{\"132\":7,\"134\":1}}],[\"requests\",{\"1\":{\"131\":1,\"132\":2,\"135\":4,\"147\":1,\"163\":7,\"168\":1,\"177\":1,\"225\":3}}],[\"request\",{\"0\":{\"131\":1},\"1\":{\"1\":1,\"5\":2,\"131\":4,\"132\":17,\"134\":3,\"135\":3,\"147\":1,\"163\":2,\"165\":2,\"166\":2,\"171\":7,\"173\":4,\"176\":8,\"194\":8}}],[\"54\",{\"1\":{\"140\":1}}],[\"5xx\",{\"1\":{\"132\":1}}],[\"51\",{\"1\":{\"84\":1}}],[\"509\",{\"1\":{\"137\":2}}],[\"504\",{\"1\":{\"132\":1}}],[\"503\",{\"1\":{\"132\":1}}],[\"502\",{\"1\":{\"132\":1}}],[\"501\",{\"1\":{\"132\":1}}],[\"50\",{\"1\":{\"84\":1,\"85\":1,\"172\":7,\"176\":4}}],[\"5\",{\"1\":{\"5\":2,\"64\":1,\"65\":1,\"66\":1,\"70\":1,\"74\":3,\"77\":2,\"78\":1,\"90\":1,\"106\":1,\"107\":3,\"108\":2,\"109\":2,\"125\":1,\"126\":1,\"140\":3,\"147\":2,\"149\":1,\"152\":3,\"226\":2,\"232\":3,\"233\":1,\"235\":3,\"236\":1,\"237\":3,\"264\":1}}],[\"jc\",{\"1\":{\"245\":1}}],[\"jim\",{\"1\":{\"245\":1}}],[\"jinzhu\",{\"1\":{\"219\":1}}],[\"j\",{\"1\":{\"245\":5}}],[\"js\",{\"1\":{\"194\":2}}],[\"json\",{\"1\":{\"5\":2,\"41\":3,\"193\":3,\"194\":1,\"198\":1}}],[\"ja\",{\"1\":{\"245\":1}}],[\"jamie\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"java\",{\"1\":{\"193\":1,\"194\":4,\"224\":1}}],[\"jacky\",{\"1\":{\"245\":1}}],[\"jack\",{\"1\":{\"75\":1,\"105\":1,\"245\":3,\"246\":2}}],[\"jetbrains\",{\"1\":{\"187\":1}}],[\"judge\",{\"1\":{\"264\":1}}],[\"judgment\",{\"1\":{\"65\":1,\"291\":1}}],[\"judgments\",{\"1\":{\"63\":1}}],[\"just\",{\"1\":{\"269\":1,\"278\":1}}],[\"justin\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"justmycode\",{\"1\":{\"194\":1}}],[\"jurisdiction\",{\"1\":{\"166\":1}}],[\"jumping\",{\"1\":{\"192\":1}}],[\"jump\",{\"1\":{\"66\":2}}],[\"joins\",{\"1\":{\"217\":1,\"237\":1}}],[\"join\",{\"0\":{\"94\":1,\"229\":1,\"230\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1},\"1\":{\"94\":3,\"95\":2,\"96\":2,\"229\":2,\"230\":1,\"233\":6,\"235\":1,\"236\":1,\"237\":10,\"263\":1}}],[\"john\",{\"1\":{\"21\":2,\"22\":2}}],[\"job\",{\"1\":{\"1\":1}}],[\"nb\",{\"1\":{\"284\":1}}],[\"null\",{\"1\":{\"217\":1,\"228\":3,\"251\":2,\"263\":1}}],[\"numeric\",{\"1\":{\"291\":1}}],[\"numerous\",{\"1\":{\"163\":1,\"181\":1,\"217\":1}}],[\"num\",{\"1\":{\"55\":2,\"69\":3,\"81\":2,\"272\":3}}],[\"numbers\",{\"0\":{\"73\":1,\"74\":1},\"1\":{\"72\":2,\"73\":2,\"74\":2,\"85\":2,\"149\":3,\"150\":1,\"151\":1,\"225\":2,\"226\":3,\"291\":1}}],[\"number\",{\"0\":{\"260\":1},\"1\":{\"39\":1,\"42\":1,\"74\":2,\"132\":1,\"134\":1,\"137\":1,\"140\":4,\"143\":1,\"144\":1,\"147\":14,\"149\":5,\"161\":2,\"163\":6,\"173\":6,\"176\":1,\"177\":1,\"228\":2,\"237\":1,\"245\":1,\"247\":2,\"251\":1,\"263\":1,\"266\":2,\"267\":4}}],[\"nums\",{\"1\":{\"17\":11}}],[\"nxdomain\",{\"1\":{\"168\":1}}],[\"ns\",{\"1\":{\"167\":1}}],[\"navigate\",{\"1\":{\"192\":1}}],[\"nationality\",{\"1\":{\"279\":4}}],[\"native\",{\"1\":{\"143\":3}}],[\"nat\",{\"0\":{\"174\":1,\"177\":1,\"178\":1},\"1\":{\"175\":2,\"176\":1,\"177\":3,\"178\":2}}],[\"naming\",{\"0\":{\"31\":1}}],[\"nameeq\",{\"1\":{\"214\":1}}],[\"namecontains\",{\"1\":{\"214\":1}}],[\"name2\",{\"1\":{\"56\":4,\"262\":1}}],[\"name1\",{\"1\":{\"56\":4,\"262\":1}}],[\"named\",{\"1\":{\"9\":1,\"217\":1}}],[\"names\",{\"0\":{\"9\":1,\"10\":1,\"21\":1,\"37\":1},\"1\":{\"9\":3,\"10\":3,\"16\":1,\"21\":1,\"22\":1,\"31\":1,\"37\":1,\"165\":2}}],[\"name\",{\"1\":{\"5\":2,\"8\":3,\"18\":5,\"19\":1,\"24\":2,\"41\":6,\"53\":2,\"54\":1,\"55\":1,\"56\":2,\"61\":1,\"75\":1,\"76\":1,\"80\":3,\"132\":1,\"137\":2,\"165\":4,\"166\":3,\"167\":2,\"168\":1,\"172\":1,\"173\":1,\"182\":2,\"192\":4,\"194\":10,\"212\":1,\"214\":1,\"219\":1,\"228\":4,\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":2,\"244\":4,\"245\":7,\"246\":2,\"253\":3,\"254\":3,\"255\":2,\"256\":3,\"261\":3,\"262\":2,\"276\":2,\"278\":2}}],[\"n++\",{\"1\":{\"39\":2}}],[\"non\",{\"0\":{\"259\":1},\"1\":{\"132\":2,\"135\":1,\"137\":2,\"168\":2,\"249\":3,\"251\":2,\"259\":10,\"266\":1,\"267\":1,\"269\":5,\"274\":1}}],[\"none\",{\"1\":{\"129\":2}}],[\"node\",{\"1\":{\"121\":2,\"128\":1,\"140\":1,\"194\":4,\"266\":7,\"267\":2}}],[\"nodes\",{\"0\":{\"121\":2,\"122\":1,\"123\":1},\"1\":{\"121\":4,\"124\":1,\"128\":3,\"129\":1,\"140\":3,\"266\":5,\"267\":17,\"273\":1}}],[\"normally\",{\"1\":{\"132\":1}}],[\"normalerr\",{\"1\":{\"96\":4}}],[\"normal\",{\"1\":{\"53\":1,\"173\":1}}],[\"no\",{\"1\":{\"16\":1,\"25\":1,\"36\":1,\"70\":4,\"132\":2,\"133\":1,\"141\":1,\"161\":1,\"162\":2,\"163\":2,\"166\":1,\"173\":1,\"196\":4,\"251\":1,\"258\":1,\"259\":1,\"264\":1,\"267\":1,\"276\":1,\"289\":1}}],[\"now\",{\"1\":{\"16\":1,\"125\":1,\"137\":1}}],[\"notified\",{\"1\":{\"149\":1}}],[\"notification\",{\"1\":{\"140\":1}}],[\"notation\",{\"1\":{\"143\":3}}],[\"note\",{\"1\":{\"69\":1}}],[\"notfounderror\",{\"1\":{\"31\":2}}],[\"not\",{\"0\":{\"246\":1},\"1\":{\"1\":2,\"5\":3,\"6\":1,\"7\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"16\":3,\"17\":3,\"19\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"29\":1,\"31\":5,\"32\":5,\"33\":1,\"35\":1,\"36\":1,\"38\":1,\"39\":1,\"41\":1,\"52\":1,\"85\":1,\"101\":2,\"103\":1,\"109\":1,\"131\":1,\"132\":13,\"133\":2,\"134\":1,\"135\":4,\"139\":3,\"140\":1,\"142\":1,\"152\":3,\"156\":1,\"158\":1,\"160\":3,\"162\":3,\"166\":2,\"168\":1,\"172\":5,\"173\":2,\"196\":3,\"217\":1,\"228\":1,\"235\":1,\"236\":1,\"237\":1,\"245\":1,\"246\":2,\"251\":1,\"259\":1,\"263\":3,\"267\":4,\"269\":6,\"273\":1,\"278\":3,\"286\":1,\"287\":1,\"288\":1,\"289\":1,\"292\":3,\"296\":1,\"302\":1}}],[\"nil\",{\"1\":{\"12\":2,\"16\":3,\"17\":5,\"18\":8,\"29\":1,\"30\":1,\"32\":4,\"37\":2,\"40\":6,\"82\":6,\"295\":1,\"302\":1}}],[\"n\",{\"1\":{\"11\":2,\"26\":2,\"39\":6,\"43\":1,\"81\":2,\"99\":3,\"276\":1,\"287\":3,\"289\":5,\"291\":3}}],[\"necessary\",{\"1\":{\"210\":1}}],[\"necessitating\",{\"1\":{\"200\":1}}],[\"neveropen\",{\"1\":{\"194\":1}}],[\"negotiate\",{\"1\":{\"147\":1}}],[\"negative\",{\"1\":{\"72\":1,\"291\":1}}],[\"next\",{\"1\":{\"64\":1,\"65\":1,\"135\":1,\"140\":1,\"147\":1,\"152\":2,\"166\":1,\"269\":1,\"291\":1}}],[\"nested\",{\"1\":{\"63\":1,\"217\":1}}],[\"nesting\",{\"0\":{\"12\":1},\"1\":{\"12\":1}}],[\"needing\",{\"1\":{\"152\":1,\"165\":1,\"273\":1}}],[\"needed\",{\"1\":{\"149\":3,\"180\":1,\"189\":1,\"273\":2}}],[\"needs\",{\"1\":{\"29\":1,\"128\":1,\"132\":1,\"133\":1,\"139\":1,\"141\":1,\"147\":1,\"157\":1,\"172\":1,\"175\":1,\"176\":1,\"203\":1,\"217\":1,\"258\":1,\"259\":1,\"273\":1}}],[\"need\",{\"1\":{\"9\":1,\"14\":1,\"43\":1,\"64\":1,\"139\":1,\"141\":1,\"144\":2,\"149\":2,\"152\":2,\"160\":4,\"181\":1,\"196\":2,\"201\":1,\"206\":1,\"224\":1,\"229\":1,\"258\":1,\"259\":3,\"263\":1,\"292\":1,\"302\":1}}],[\"netutil\",{\"1\":{\"225\":1}}],[\"networking\",{\"1\":{\"225\":1}}],[\"networks\",{\"1\":{\"168\":1}}],[\"network\",{\"1\":{\"128\":6,\"129\":5,\"136\":1,\"140\":2,\"147\":1,\"152\":6,\"156\":2,\"160\":3,\"162\":1,\"163\":6,\"170\":2,\"172\":9,\"173\":2,\"175\":7,\"177\":3,\"225\":1}}],[\"net\",{\"1\":{\"8\":1,\"9\":2,\"194\":1}}],[\"newticker\",{\"1\":{\"42\":1,\"116\":1}}],[\"newsomething\",{\"1\":{\"11\":2}}],[\"new\",{\"1\":{\"5\":6,\"11\":2,\"24\":2,\"29\":2,\"30\":2,\"31\":3,\"37\":2,\"55\":1,\"93\":3,\"94\":2,\"95\":2,\"96\":2,\"132\":6,\"135\":1,\"137\":1,\"144\":1,\"173\":2,\"184\":1,\"203\":1,\"208\":1,\"263\":2,\"279\":1,\"286\":1,\"287\":4,\"302\":1}}],[\"+∞\",{\"1\":{\"72\":2}}],[\"++\",{\"1\":{\"66\":1,\"69\":1,\"78\":1,\"84\":1}}],[\"+=\",{\"1\":{\"16\":1,\"69\":1,\"88\":2,\"291\":2}}],[\"+\",{\"1\":{\"5\":2,\"65\":1,\"74\":4,\"84\":2,\"88\":2,\"90\":1,\"149\":3,\"163\":1}}],[\"voip\",{\"1\":{\"160\":1}}],[\"voice\",{\"1\":{\"160\":1}}],[\"volume\",{\"1\":{\"5\":2}}],[\"v4\",{\"1\":{\"140\":1}}],[\"via\",{\"1\":{\"192\":2}}],[\"visualizations\",{\"1\":{\"192\":1}}],[\"visualize\",{\"1\":{\"192\":1}}],[\"visualstudio\",{\"1\":{\"192\":4}}],[\"visual\",{\"1\":{\"192\":1,\"193\":1}}],[\"video\",{\"1\":{\"160\":1}}],[\"view\",{\"1\":{\"132\":2,\"182\":5,\"184\":5,\"192\":1,\"193\":1}}],[\"virtualization\",{\"1\":{\"180\":1}}],[\"virtual\",{\"1\":{\"129\":1,\"180\":2,\"181\":1}}],[\"vendors\",{\"1\":{\"170\":2}}],[\"verifying\",{\"1\":{\"225\":1}}],[\"verify\",{\"1\":{\"136\":3}}],[\"verification\",{\"1\":{\"134\":1,\"136\":1,\"137\":1}}],[\"verified\",{\"1\":{\"134\":1,\"147\":1}}],[\"verifies\",{\"1\":{\"134\":1}}],[\"very\",{\"1\":{\"119\":1,\"132\":1,\"136\":1,\"163\":1,\"188\":2,\"192\":3,\"217\":1,\"269\":1,\"292\":1}}],[\"verb\",{\"1\":{\"30\":1}}],[\"versions\",{\"1\":{\"36\":1,\"192\":1,\"296\":2}}],[\"version\",{\"1\":{\"16\":2,\"132\":2,\"137\":1,\"140\":8,\"182\":2,\"184\":2,\"192\":4,\"194\":8,\"269\":1}}],[\"vet\",{\"1\":{\"26\":1}}],[\"v3\",{\"1\":{\"25\":2}}],[\"v1\",{\"1\":{\"25\":2,\"226\":2}}],[\"vast\",{\"1\":{\"143\":1}}],[\"valuable\",{\"1\":{\"163\":1,\"192\":1}}],[\"valuer\",{\"1\":{\"217\":1}}],[\"valuetype\",{\"1\":{\"79\":2,\"98\":2}}],[\"value2\",{\"1\":{\"51\":1}}],[\"value1\",{\"1\":{\"51\":1}}],[\"values\",{\"0\":{\"22\":1,\"23\":1},\"1\":{\"16\":2,\"22\":1,\"25\":2,\"26\":2,\"52\":1,\"69\":1,\"76\":1,\"82\":1,\"99\":1,\"120\":1,\"171\":1,\"217\":1,\"225\":4,\"245\":1,\"250\":1,\"251\":4,\"266\":1,\"276\":1,\"279\":1,\"300\":1,\"302\":1}}],[\"value\",{\"0\":{\"82\":1,\"100\":1,\"277\":1,\"292\":1,\"295\":1},\"1\":{\"16\":2,\"17\":1,\"33\":1,\"51\":2,\"60\":1,\"79\":5,\"82\":1,\"87\":1,\"98\":5,\"99\":23,\"100\":10,\"101\":3,\"114\":2,\"120\":1,\"124\":1,\"140\":3,\"147\":5,\"149\":2,\"152\":2,\"155\":1,\"156\":2,\"161\":1,\"171\":7,\"172\":1,\"225\":2,\"249\":2,\"251\":2,\"273\":1,\"276\":3,\"277\":2,\"278\":1,\"279\":1,\"285\":1,\"286\":7,\"287\":1,\"288\":1,\"291\":1,\"292\":7,\"294\":1,\"302\":4}}],[\"val\",{\"1\":{\"99\":4,\"101\":4,\"114\":1,\"115\":1,\"123\":7}}],[\"val2\",{\"1\":{\"56\":4,\"226\":3}}],[\"val1\",{\"1\":{\"56\":4,\"226\":3}}],[\"validating\",{\"1\":{\"225\":1}}],[\"validation\",{\"1\":{\"225\":1}}],[\"validator\",{\"1\":{\"225\":1}}],[\"validity\",{\"1\":{\"134\":1,\"137\":2}}],[\"valid\",{\"0\":{\"17\":1},\"1\":{\"134\":1,\"147\":3}}],[\"varchar\",{\"1\":{\"251\":1}}],[\"vary\",{\"1\":{\"152\":1}}],[\"variety\",{\"1\":{\"196\":1,\"200\":1}}],[\"variant\",{\"1\":{\"267\":1}}],[\"variadic\",{\"1\":{\"52\":1}}],[\"variable\",{\"0\":{\"6\":1,\"14\":1,\"18\":1,\"23\":1,\"272\":1,\"278\":1},\"1\":{\"6\":1,\"18\":4,\"38\":1,\"55\":1,\"56\":2,\"81\":3,\"87\":1,\"109\":1,\"272\":2,\"276\":1,\"278\":2,\"289\":2,\"292\":3}}],[\"variables\",{\"0\":{\"15\":1},\"1\":{\"5\":1,\"29\":1,\"31\":1,\"36\":2,\"37\":1,\"38\":1,\"56\":3,\"69\":1,\"193\":1,\"194\":1,\"225\":1,\"272\":2,\"274\":1}}],[\"various\",{\"1\":{\"49\":1,\"193\":1,\"200\":3,\"205\":1,\"210\":1}}],[\"var\",{\"1\":{\"5\":7,\"6\":3,\"11\":1,\"13\":1,\"14\":4,\"16\":2,\"17\":2,\"23\":1,\"29\":1,\"31\":1,\"42\":1,\"43\":1,\"56\":7,\"64\":1,\"74\":1,\"75\":1,\"76\":1,\"78\":1,\"79\":1,\"81\":1,\"96\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"105\":1,\"279\":1,\"283\":2,\"284\":2,\"286\":4,\"291\":2,\"294\":1,\"295\":1,\"296\":1}}],[\"v2\",{\"1\":{\"8\":1,\"25\":2,\"207\":1,\"226\":3}}],[\"vscode\",{\"0\":{\"190\":1,\"191\":1},\"1\":{\"187\":1,\"191\":2,\"192\":2,\"193\":1}}],[\"vs\",{\"0\":{\"133\":1,\"135\":2},\"1\":{\"7\":3,\"192\":5}}],[\"v\",{\"1\":{\"6\":6,\"12\":18,\"26\":4,\"30\":1,\"32\":2,\"65\":6,\"184\":1,\"289\":2}}],[\"2^8=256\",{\"1\":{\"285\":1}}],[\"21\",{\"1\":{\"277\":5}}],[\"21s\",{\"1\":{\"39\":1}}],[\"28\",{\"1\":{\"171\":1}}],[\"2883\",{\"1\":{\"152\":1}}],[\"2nd\",{\"1\":{\"170\":1}}],[\"24th\",{\"1\":{\"170\":1}}],[\"24\",{\"1\":{\"170\":2}}],[\"2480\",{\"1\":{\"141\":2}}],[\"2s\",{\"1\":{\"149\":2}}],[\"2xx\",{\"1\":{\"132\":1}}],[\"20byte\",{\"1\":{\"147\":2}}],[\"206\",{\"1\":{\"132\":1}}],[\"205\",{\"1\":{\"132\":1}}],[\"2049\",{\"1\":{\"137\":1}}],[\"204\",{\"1\":{\"132\":1}}],[\"203\",{\"1\":{\"132\":1}}],[\"202\",{\"1\":{\"132\":1}}],[\"2018\",{\"1\":{\"152\":1}}],[\"201\",{\"1\":{\"132\":1}}],[\"2001\",{\"1\":{\"143\":1}}],[\"200\",{\"1\":{\"132\":1,\"198\":1}}],[\"20\",{\"1\":{\"58\":1,\"84\":1,\"85\":1,\"94\":1,\"140\":1,\"141\":3,\"143\":1,\"162\":1,\"172\":1,\"220\":1}}],[\"255\",{\"1\":{\"175\":7,\"283\":1}}],[\"25th\",{\"1\":{\"170\":1}}],[\"2500\",{\"1\":{\"141\":2}}],[\"25\",{\"1\":{\"49\":1}}],[\"2\",{\"0\":{\"135\":1},\"1\":{\"5\":4,\"17\":2,\"26\":2,\"39\":1,\"64\":3,\"65\":3,\"66\":1,\"70\":2,\"75\":1,\"77\":1,\"78\":1,\"84\":1,\"87\":4,\"88\":10,\"90\":1,\"106\":3,\"108\":4,\"109\":3,\"112\":1,\"129\":1,\"135\":1,\"140\":1,\"171\":1,\"173\":3,\"176\":4,\"180\":1,\"194\":7,\"226\":2,\"229\":3,\"231\":1,\"232\":3,\"233\":5,\"235\":5,\"236\":5,\"237\":5,\"248\":1,\"264\":3,\"266\":1,\"289\":3,\"290\":2,\"291\":1}}],[\"127\",{\"1\":{\"291\":1}}],[\"123\",{\"1\":{\"276\":1}}],[\"12\",{\"1\":{\"232\":7,\"233\":4,\"235\":7,\"236\":4,\"237\":7,\"245\":6,\"246\":6}}],[\"128\",{\"1\":{\"143\":1}}],[\"180\",{\"1\":{\"279\":2}}],[\"18\",{\"1\":{\"219\":1,\"245\":4,\"246\":2}}],[\"11\",{\"1\":{\"232\":5,\"233\":3,\"235\":5,\"236\":3,\"237\":5}}],[\"110\",{\"1\":{\"176\":5}}],[\"111\",{\"1\":{\"176\":5}}],[\"112\",{\"1\":{\"176\":5}}],[\"113\",{\"1\":{\"176\":5}}],[\"172\",{\"1\":{\"175\":1}}],[\"1st\",{\"1\":{\"170\":1}}],[\"1s\",{\"1\":{\"149\":3}}],[\"192\",{\"1\":{\"143\":1,\"172\":7,\"175\":1,\"176\":4}}],[\"1950\",{\"1\":{\"137\":1}}],[\"14\",{\"1\":{\"140\":1,\"171\":1,\"192\":1,\"278\":1}}],[\"1520\",{\"1\":{\"141\":1}}],[\"1540\",{\"1\":{\"141\":1}}],[\"154\",{\"1\":{\"140\":1}}],[\"15\",{\"1\":{\"140\":2,\"231\":1,\"236\":1,\"237\":1,\"244\":1,\"245\":2}}],[\"1xx\",{\"1\":{\"132\":1}}],[\"16s\",{\"1\":{\"149\":2}}],[\"160bit\",{\"1\":{\"147\":1}}],[\"168\",{\"1\":{\"143\":1,\"172\":7,\"175\":2,\"176\":4}}],[\"16\",{\"1\":{\"72\":1,\"161\":4,\"171\":8,\"175\":1}}],[\"133\",{\"1\":{\"176\":4}}],[\"137\",{\"1\":{\"41\":2}}],[\"13\",{\"1\":{\"30\":1,\"232\":1,\"235\":1,\"237\":1}}],[\"101\",{\"1\":{\"132\":1}}],[\"1010\",{\"1\":{\"87\":2}}],[\"1011\",{\"1\":{\"87\":2}}],[\"1000\",{\"1\":{\"84\":1,\"87\":1}}],[\"100000000\",{\"1\":{\"39\":2}}],[\"100\",{\"1\":{\"13\":2,\"51\":1,\"132\":1}}],[\"10\",{\"1\":{\"6\":2,\"13\":2,\"60\":2,\"65\":1,\"66\":1,\"67\":1,\"78\":1,\"81\":1,\"84\":1,\"98\":1,\"105\":1,\"113\":1,\"140\":1,\"172\":5,\"175\":1,\"232\":2,\"233\":1,\"235\":2,\"236\":1,\"237\":2,\"244\":3,\"247\":2,\"276\":2,\"278\":1,\"287\":1}}],[\"1\",{\"0\":{\"135\":3,\"284\":1},\"1\":{\"5\":6,\"12\":2,\"17\":2,\"26\":2,\"30\":1,\"35\":3,\"43\":1,\"51\":1,\"64\":2,\"65\":2,\"66\":1,\"67\":1,\"69\":1,\"70\":2,\"77\":1,\"78\":1,\"87\":10,\"90\":1,\"94\":1,\"106\":1,\"108\":4,\"109\":3,\"125\":2,\"128\":1,\"131\":3,\"132\":1,\"135\":3,\"140\":5,\"141\":1,\"143\":1,\"149\":2,\"155\":1,\"156\":2,\"170\":2,\"171\":2,\"173\":3,\"192\":2,\"221\":2,\"226\":4,\"229\":3,\"231\":1,\"232\":2,\"233\":4,\"235\":4,\"236\":4,\"237\":4,\"249\":2,\"264\":3,\"266\":1,\"284\":1,\"289\":3,\"290\":2,\"291\":1,\"294\":1,\"295\":2,\"296\":1}}],[\"=range\",{\"1\":{\"65\":3}}],[\"=0\",{\"1\":{\"65\":1}}],[\"==\",{\"1\":{\"12\":2,\"17\":5,\"18\":1,\"19\":1,\"29\":1,\"35\":2,\"65\":1,\"66\":1,\"85\":2,\"90\":1,\"277\":3}}],[\"=\",{\"1\":{\"5\":24,\"6\":8,\"12\":8,\"13\":4,\"14\":4,\"15\":4,\"17\":7,\"18\":11,\"19\":2,\"21\":2,\"22\":2,\"23\":1,\"24\":3,\"25\":8,\"26\":2,\"29\":3,\"30\":2,\"31\":3,\"32\":9,\"33\":2,\"39\":8,\"40\":11,\"41\":2,\"42\":3,\"43\":2,\"51\":6,\"55\":1,\"56\":4,\"58\":2,\"60\":2,\"64\":2,\"65\":2,\"66\":1,\"67\":5,\"69\":2,\"74\":2,\"75\":2,\"76\":2,\"77\":1,\"78\":2,\"79\":2,\"80\":1,\"81\":2,\"85\":2,\"86\":2,\"88\":22,\"90\":1,\"93\":2,\"94\":3,\"95\":3,\"96\":3,\"98\":3,\"99\":8,\"100\":5,\"101\":6,\"105\":3,\"106\":1,\"107\":1,\"108\":3,\"109\":3,\"112\":2,\"114\":1,\"115\":1,\"116\":1,\"122\":2,\"123\":4,\"125\":1,\"126\":1,\"140\":2,\"149\":1,\"154\":1,\"198\":1,\"214\":2,\"226\":4,\"245\":2,\"246\":5,\"264\":6,\"272\":3,\"276\":2,\"278\":1,\"279\":6,\"283\":2,\"284\":2,\"286\":10,\"287\":3,\"289\":3,\"291\":2,\"295\":1}}],[\"editor\",{\"1\":{\"191\":1}}],[\"e2\",{\"1\":{\"172\":1}}],[\"ee\",{\"1\":{\"172\":1}}],[\"ethernet\",{\"1\":{\"171\":10}}],[\"etc\",{\"1\":{\"1\":1,\"37\":1,\"128\":1,\"129\":1,\"137\":1,\"188\":1,\"193\":1}}],[\"effects\",{\"1\":{\"286\":1}}],[\"effect\",{\"1\":{\"237\":1,\"269\":1}}],[\"effectively\",{\"1\":{\"136\":1,\"193\":1}}],[\"effort\",{\"1\":{\"200\":1,\"205\":1,\"224\":1}}],[\"efficient\",{\"1\":{\"181\":1,\"200\":2,\"205\":2,\"273\":1}}],[\"efficiency\",{\"1\":{\"152\":2,\"181\":1,\"187\":1,\"191\":1,\"200\":1,\"205\":1,\"258\":2,\"259\":3,\"263\":3,\"264\":2,\"267\":1,\"273\":2}}],[\"ecosystem\",{\"1\":{\"181\":2,\"200\":2,\"205\":2}}],[\"ecn\",{\"1\":{\"140\":1}}],[\"echoes\",{\"1\":{\"131\":1}}],[\"eventually\",{\"1\":{\"163\":1}}],[\"even\",{\"1\":{\"136\":1,\"152\":1,\"163\":1}}],[\"everything\",{\"1\":{\"180\":1}}],[\"every\",{\"1\":{\"40\":1,\"152\":1,\"155\":1,\"156\":1,\"286\":1}}],[\"equal\",{\"1\":{\"85\":4,\"141\":1,\"245\":4,\"277\":1}}],[\"equals\",{\"1\":{\"74\":1}}],[\"equivalent\",{\"1\":{\"55\":1,\"72\":3,\"88\":1,\"125\":1,\"147\":1,\"233\":1}}],[\"elaine\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"element\",{\"1\":{\"279\":1}}],[\"elements\",{\"1\":{\"49\":1,\"229\":3,\"274\":1,\"279\":1,\"300\":3}}],[\"electronic\",{\"1\":{\"136\":1}}],[\"elsewhere\",{\"1\":{\"18\":1}}],[\"else\",{\"1\":{\"12\":2,\"13\":1,\"18\":2,\"29\":1,\"32\":1,\"63\":1,\"101\":2,\"226\":1}}],[\"either\",{\"1\":{\"40\":1,\"86\":1,\"154\":1}}],[\"estimates\",{\"1\":{\"152\":1}}],[\"estimating\",{\"1\":{\"25\":1}}],[\"establishment\",{\"1\":{\"135\":1}}],[\"establishes\",{\"1\":{\"131\":1,\"168\":2}}],[\"establish\",{\"1\":{\"129\":1,\"144\":2,\"160\":1,\"228\":1}}],[\"establishing\",{\"1\":{\"128\":1,\"139\":1,\"149\":1}}],[\"essential\",{\"1\":{\"41\":1}}],[\"escaping\",{\"1\":{\"19\":1}}],[\"escape\",{\"1\":{\"19\":1}}],[\"escaped\",{\"0\":{\"19\":1}}],[\"emergence\",{\"1\":{\"178\":1}}],[\"emails\",{\"1\":{\"136\":2}}],[\"email\",{\"1\":{\"129\":1,\"136\":2,\"225\":1}}],[\"embedding\",{\"0\":{\"36\":1},\"1\":{\"36\":1}}],[\"embedded\",{\"0\":{\"16\":1},\"1\":{\"16\":7,\"36\":1}}],[\"emit\",{\"1\":{\"32\":1}}],[\"emitmetrics\",{\"1\":{\"32\":1}}],[\"emptiness\",{\"1\":{\"17\":1,\"225\":1}}],[\"empty\",{\"0\":{\"16\":1},\"1\":{\"5\":1,\"7\":1,\"17\":2,\"60\":1,\"147\":1,\"249\":4}}],[\"e\",{\"1\":{\"14\":4,\"31\":4,\"36\":4,\"38\":1,\"96\":2,\"132\":2,\"136\":1,\"143\":2,\"147\":1,\"149\":4,\"156\":1,\"172\":1,\"194\":3,\"225\":3,\"228\":1,\"269\":1}}],[\"extra\",{\"1\":{\"292\":1}}],[\"extraction\",{\"1\":{\"225\":1}}],[\"extensive\",{\"1\":{\"217\":1}}],[\"extensible\",{\"1\":{\"217\":1}}],[\"extensibility\",{\"1\":{\"210\":1}}],[\"extension\",{\"1\":{\"210\":1}}],[\"extend\",{\"1\":{\"210\":1,\"263\":2}}],[\"extended\",{\"1\":{\"152\":1}}],[\"externalconsole\",{\"1\":{\"194\":1}}],[\"external\",{\"1\":{\"16\":1,\"177\":1,\"178\":1,\"194\":1}}],[\"exec\",{\"1\":{\"182\":1,\"194\":1,\"212\":1,\"213\":1,\"215\":1}}],[\"execute\",{\"0\":{\"289\":1},\"1\":{\"44\":1,\"53\":1,\"64\":1,\"66\":1,\"188\":1}}],[\"executed\",{\"1\":{\"38\":1,\"67\":1,\"156\":2,\"172\":1,\"237\":1,\"269\":1}}],[\"executing\",{\"1\":{\"40\":1,\"43\":1,\"64\":2,\"66\":1,\"69\":2,\"126\":1,\"225\":1,\"289\":1}}],[\"execution\",{\"0\":{\"290\":1},\"1\":{\"38\":1,\"49\":1,\"69\":2,\"193\":1,\"196\":1,\"200\":1,\"269\":1,\"273\":2,\"290\":1}}],[\"exhaust\",{\"1\":{\"163\":1}}],[\"exhausted\",{\"1\":{\"163\":1}}],[\"exacerbating\",{\"1\":{\"152\":1}}],[\"examples\",{\"0\":{\"211\":1,\"218\":1}}],[\"example\",{\"0\":{\"116\":1,\"197\":1,\"226\":1},\"1\":{\"8\":2,\"9\":1,\"32\":1,\"51\":1,\"52\":1,\"53\":1,\"55\":1,\"56\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"69\":1,\"70\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"107\":1,\"108\":1,\"109\":1,\"134\":1,\"136\":3,\"137\":4,\"141\":1,\"147\":1,\"160\":1,\"172\":1,\"194\":2,\"205\":1,\"228\":3,\"229\":1,\"232\":1,\"233\":1,\"263\":1,\"272\":1,\"276\":1,\"277\":1,\"278\":1,\"286\":2}}],[\"exclusive\",{\"1\":{\"302\":1}}],[\"exclude\",{\"1\":{\"194\":1}}],[\"excluding\",{\"1\":{\"106\":1}}],[\"exchange\",{\"1\":{\"167\":1}}],[\"excessive\",{\"1\":{\"196\":1,\"200\":1,\"205\":1,\"224\":1}}],[\"excellent\",{\"1\":{\"196\":1,\"200\":1}}],[\"exceeds\",{\"1\":{\"141\":1,\"173\":2}}],[\"exception\",{\"1\":{\"295\":1}}],[\"except\",{\"1\":{\"10\":1,\"140\":1,\"141\":1}}],[\"exits\",{\"1\":{\"42\":1}}],[\"exited\",{\"1\":{\"42\":1}}],[\"exit\",{\"0\":{\"43\":1},\"1\":{\"40\":5,\"42\":2,\"43\":1,\"64\":1}}],[\"exiting\",{\"0\":{\"40\":1}}],[\"existent\",{\"1\":{\"168\":2,\"269\":1}}],[\"exists\",{\"0\":{\"101\":1,\"248\":1},\"1\":{\"101\":3,\"135\":2,\"147\":1,\"248\":2}}],[\"exist\",{\"1\":{\"32\":1,\"132\":1,\"166\":1,\"267\":3,\"269\":2}}],[\"expressions\",{\"1\":{\"217\":1}}],[\"expires\",{\"1\":{\"152\":1}}],[\"expands\",{\"1\":{\"300\":1}}],[\"expand\",{\"1\":{\"60\":1,\"288\":1}}],[\"expansions\",{\"1\":{\"39\":1}}],[\"exploration\",{\"1\":{\"200\":1}}],[\"explorer\",{\"1\":{\"192\":5}}],[\"explore\",{\"1\":{\"192\":1,\"203\":1}}],[\"exploit\",{\"1\":{\"163\":1}}],[\"explicit\",{\"1\":{\"140\":1}}],[\"explicitly\",{\"1\":{\"14\":2,\"32\":1}}],[\"explanation\",{\"1\":{\"53\":1}}],[\"experience\",{\"1\":{\"32\":1}}],[\"expected\",{\"1\":{\"11\":1,\"147\":1}}],[\"exported\",{\"1\":{\"31\":2}}],[\"export\",{\"1\":{\"31\":2}}],[\"exposed\",{\"1\":{\"36\":1,\"177\":1}}],[\"exposes\",{\"1\":{\"16\":1}}],[\"expose\",{\"1\":{\"16\":1}}],[\"eamodio\",{\"1\":{\"192\":1}}],[\"earliest\",{\"1\":{\"249\":1}}],[\"earlier\",{\"1\":{\"157\":1,\"296\":1}}],[\"early\",{\"1\":{\"12\":1}}],[\"easier\",{\"1\":{\"188\":1,\"192\":2}}],[\"easily\",{\"1\":{\"119\":1,\"210\":1,\"273\":1,\"298\":2}}],[\"ease\",{\"1\":{\"181\":1,\"200\":1,\"205\":1,\"217\":1}}],[\"easy\",{\"1\":{\"9\":1,\"196\":2,\"210\":2,\"273\":1}}],[\"eat\",{\"1\":{\"55\":1}}],[\"each\",{\"1\":{\"7\":2,\"64\":1,\"135\":1,\"139\":2,\"140\":3,\"141\":2,\"147\":1,\"149\":2,\"152\":1,\"163\":1,\"172\":1,\"180\":1,\"194\":1,\"217\":1,\"228\":1,\"264\":1,\"266\":3,\"267\":2,\"279\":2,\"286\":1}}],[\"encounters\",{\"1\":{\"263\":1}}],[\"encountering\",{\"1\":{\"263\":1}}],[\"encrypting\",{\"1\":{\"136\":2}}],[\"encryption\",{\"1\":{\"129\":1,\"133\":2,\"134\":3,\"136\":2,\"137\":1,\"140\":1,\"225\":1}}],[\"encrypts\",{\"1\":{\"134\":2}}],[\"encrypt\",{\"1\":{\"134\":2,\"136\":1,\"137\":2}}],[\"encrypted\",{\"1\":{\"133\":3,\"137\":1}}],[\"enhancing\",{\"1\":{\"181\":2}}],[\"enhance\",{\"1\":{\"177\":1}}],[\"engineering\",{\"1\":{\"200\":3,\"205\":1}}],[\"engine\",{\"1\":{\"180\":1,\"196\":2}}],[\"english\",{\"1\":{\"7\":1,\"16\":1,\"61\":1,\"132\":1,\"174\":1,\"262\":1,\"285\":1}}],[\"enable\",{\"1\":{\"172\":1,\"194\":1}}],[\"enables\",{\"1\":{\"140\":1,\"181\":1}}],[\"ensuring\",{\"1\":{\"151\":1,\"163\":2,\"170\":1,\"181\":1}}],[\"ensure\",{\"0\":{\"150\":1},\"1\":{\"35\":1,\"41\":1,\"42\":1,\"43\":1,\"136\":1,\"137\":3,\"152\":2,\"158\":1,\"180\":1,\"250\":1,\"301\":1}}],[\"ensures\",{\"1\":{\"32\":1,\"150\":1,\"151\":1,\"181\":1,\"269\":1}}],[\"ent\",{\"0\":{\"209\":1,\"210\":1,\"211\":1},\"1\":{\"210\":11}}],[\"entry\",{\"1\":{\"193\":1,\"194\":2,\"295\":1}}],[\"entries\",{\"1\":{\"173\":1,\"267\":3}}],[\"entire\",{\"1\":{\"147\":1,\"162\":2,\"273\":1}}],[\"entity\",{\"1\":{\"36\":6,\"210\":1}}],[\"enter\",{\"1\":{\"136\":1,\"166\":1,\"182\":1}}],[\"ends\",{\"1\":{\"149\":1,\"194\":1}}],[\"endindex\",{\"1\":{\"106\":2}}],[\"end\",{\"1\":{\"66\":5,\"111\":2,\"117\":1,\"128\":1,\"129\":2,\"149\":1,\"152\":3,\"162\":2,\"269\":1}}],[\"enumeration\",{\"1\":{\"51\":1}}],[\"environment\",{\"1\":{\"180\":1,\"181\":3,\"193\":1,\"194\":1,\"225\":1}}],[\"environments\",{\"1\":{\"147\":1,\"180\":1,\"181\":3,\"196\":1}}],[\"env\",{\"1\":{\"5\":2,\"194\":2}}],[\"envvar\",{\"1\":{\"5\":3}}],[\"erroneous\",{\"1\":{\"158\":1}}],[\"errorf\",{\"1\":{\"29\":1,\"30\":3,\"32\":2,\"93\":2,\"94\":1,\"95\":1}}],[\"errors\",{\"0\":{\"29\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1},\"1\":{\"12\":1,\"21\":1,\"29\":11,\"30\":4,\"31\":6,\"32\":6,\"40\":5,\"93\":4,\"94\":6,\"95\":8,\"96\":6,\"147\":1,\"173\":1,\"194\":1,\"225\":1}}],[\"error\",{\"0\":{\"28\":1,\"30\":1,\"31\":1,\"32\":1,\"91\":1},\"1\":{\"5\":2,\"14\":6,\"16\":1,\"19\":1,\"29\":9,\"30\":3,\"31\":9,\"32\":14,\"33\":1,\"37\":1,\"40\":2,\"75\":1,\"92\":5,\"93\":5,\"94\":8,\"95\":12,\"96\":7,\"120\":1,\"129\":1,\"132\":6,\"200\":2,\"201\":1,\"205\":2,\"206\":1,\"225\":2,\"278\":1,\"295\":1,\"296\":2}}],[\"err4\",{\"1\":{\"96\":3}}],[\"err3\",{\"1\":{\"94\":2,\"95\":4,\"96\":2}}],[\"err2\",{\"1\":{\"93\":2,\"94\":3,\"95\":4,\"96\":2}}],[\"err1\",{\"1\":{\"93\":2,\"94\":3,\"95\":6,\"96\":2}}],[\"errusernotfound\",{\"1\":{\"32\":1}}],[\"errnotfound\",{\"1\":{\"31\":1}}],[\"errbrokenlink\",{\"1\":{\"31\":1}}],[\"errcouldnotopen\",{\"1\":{\"29\":3,\"31\":1}}],[\"errgroup\",{\"1\":{\"7\":2}}],[\"err\",{\"1\":{\"5\":2,\"12\":6,\"18\":19,\"29\":3,\"30\":3,\"31\":1,\"32\":14,\"40\":15,\"41\":2,\"120\":1,\"214\":2}}],[\"urgent\",{\"1\":{\"147\":8}}],[\"urg=1\",{\"1\":{\"147\":3}}],[\"urg\",{\"1\":{\"147\":1}}],[\"uri\",{\"1\":{\"132\":5}}],[\"urls\",{\"1\":{\"9\":1,\"225\":1}}],[\"url\",{\"1\":{\"9\":1,\"16\":5,\"132\":1,\"184\":1}}],[\"upsert\",{\"1\":{\"217\":1}}],[\"updating\",{\"0\":{\"213\":1,\"220\":1},\"1\":{\"250\":1,\"258\":1,\"259\":1}}],[\"updateoneid\",{\"1\":{\"213\":1}}],[\"update\",{\"0\":{\"189\":1},\"1\":{\"172\":1,\"189\":3,\"217\":1,\"220\":1}}],[\"updates\",{\"1\":{\"131\":1,\"173\":1,\"217\":1,\"269\":2}}],[\"updated\",{\"1\":{\"131\":1}}],[\"upon\",{\"1\":{\"163\":1}}],[\"up\",{\"1\":{\"163\":1,\"168\":1,\"178\":1,\"181\":1,\"251\":1}}],[\"upper\",{\"1\":{\"142\":1,\"149\":1}}],[\"uppercase\",{\"1\":{\"9\":1,\"188\":1}}],[\"upload\",{\"1\":{\"131\":1}}],[\"udp\",{\"0\":{\"145\":1,\"159\":1,\"163\":1},\"1\":{\"128\":1,\"129\":1,\"140\":1,\"159\":1,\"160\":6,\"161\":1,\"162\":3,\"163\":4}}],[\"ultimately\",{\"1\":{\"269\":2}}],[\"ultimate\",{\"1\":{\"40\":1}}],[\"uint64\",{\"1\":{\"37\":1,\"82\":1}}],[\"uint32\",{\"1\":{\"37\":1,\"82\":1}}],[\"uint16\",{\"1\":{\"37\":1,\"82\":1}}],[\"uint8\",{\"1\":{\"37\":1,\"72\":1,\"82\":1,\"212\":1,\"213\":1,\"282\":1,\"291\":1}}],[\"uintptr\",{\"1\":{\"37\":3,\"82\":1}}],[\"uint\",{\"1\":{\"37\":3,\"72\":1,\"82\":1,\"291\":2}}],[\"utc\",{\"1\":{\"32\":2,\"137\":1}}],[\"utility\",{\"1\":{\"201\":1,\"224\":2,\"225\":4}}],[\"utilization\",{\"1\":{\"181\":2,\"263\":1}}],[\"utilizing\",{\"1\":{\"163\":1}}],[\"util\",{\"1\":{\"9\":1}}],[\"u\",{\"1\":{\"32\":2,\"207\":1}}],[\"unnamed\",{\"1\":{\"276\":2,\"278\":1}}],[\"unnecessary\",{\"0\":{\"13\":1},\"1\":{\"47\":1,\"194\":1}}],[\"unchanged\",{\"1\":{\"286\":1}}],[\"uncommitted\",{\"1\":{\"269\":4}}],[\"uncurrying\",{\"1\":{\"225\":1}}],[\"unmatched\",{\"1\":{\"235\":1,\"236\":1,\"237\":2}}],[\"undo\",{\"1\":{\"184\":1}}],[\"undergone\",{\"1\":{\"294\":1}}],[\"under\",{\"1\":{\"137\":1,\"149\":1,\"152\":3,\"180\":1,\"267\":1}}],[\"understand\",{\"1\":{\"229\":1}}],[\"understanding\",{\"1\":{\"210\":1}}],[\"understood\",{\"1\":{\"132\":1}}],[\"underscores\",{\"1\":{\"10\":1}}],[\"underlying\",{\"1\":{\"60\":1}}],[\"unreachable\",{\"1\":{\"163\":1}}],[\"unresponsive\",{\"1\":{\"163\":1}}],[\"unreliability\",{\"1\":{\"160\":1}}],[\"unreliable\",{\"1\":{\"139\":1,\"159\":1}}],[\"unrelated\",{\"0\":{\"5\":1},\"1\":{\"5\":1,\"251\":1}}],[\"unsafe\",{\"1\":{\"284\":3}}],[\"unstable\",{\"1\":{\"152\":1}}],[\"unsigned\",{\"1\":{\"72\":3}}],[\"unassigned\",{\"1\":{\"140\":2}}],[\"unable\",{\"1\":{\"132\":1,\"137\":1,\"163\":1,\"173\":1}}],[\"unavailable\",{\"1\":{\"132\":2}}],[\"unauthorized\",{\"1\":{\"132\":2}}],[\"uninitialized\",{\"0\":{\"294\":1,\"295\":1,\"296\":1},\"1\":{\"294\":1,\"296\":2}}],[\"uninterrupted\",{\"1\":{\"32\":1}}],[\"unified\",{\"1\":{\"177\":1}}],[\"uniqueness\",{\"1\":{\"250\":1,\"263\":1}}],[\"unique\",{\"0\":{\"254\":1},\"1\":{\"170\":2,\"228\":4,\"251\":4,\"254\":1,\"263\":3}}],[\"uniquely\",{\"1\":{\"170\":1,\"228\":3}}],[\"unicast\",{\"1\":{\"162\":1,\"170\":1,\"172\":1}}],[\"unicode\",{\"1\":{\"72\":1,\"283\":3}}],[\"unit\",{\"1\":{\"141\":1,\"147\":1}}],[\"units\",{\"1\":{\"140\":1}}],[\"unordered\",{\"0\":{\"300\":1},\"1\":{\"60\":1,\"139\":1,\"258\":1,\"259\":2,\"300\":2}}],[\"unbuffered\",{\"1\":{\"58\":1,\"112\":2}}],[\"unbounded\",{\"1\":{\"42\":1}}],[\"until\",{\"1\":{\"42\":1,\"67\":1,\"112\":1,\"134\":1,\"152\":1,\"155\":1,\"166\":1}}],[\"unpredictable\",{\"1\":{\"38\":1,\"44\":1}}],[\"unexpected\",{\"1\":{\"26\":2}}],[\"unexported\",{\"0\":{\"15\":1},\"1\":{\"16\":1}}],[\"unknown\",{\"1\":{\"19\":1,\"29\":1}}],[\"unlike\",{\"1\":{\"170\":1}}],[\"unlock\",{\"1\":{\"16\":1}}],[\"unless\",{\"1\":{\"8\":1,\"18\":1,\"266\":1,\"269\":1}}],[\"usable\",{\"1\":{\"224\":1}}],[\"usage\",{\"0\":{\"42\":1},\"1\":{\"53\":1,\"173\":1,\"196\":1,\"200\":1,\"205\":1}}],[\"usually\",{\"1\":{\"115\":1,\"132\":2,\"147\":1,\"149\":1,\"152\":1,\"160\":1,\"166\":1,\"172\":1,\"194\":1}}],[\"uses\",{\"1\":{\"134\":6,\"135\":1,\"136\":1,\"137\":3,\"151\":1,\"152\":1,\"153\":1,\"163\":1,\"168\":1,\"181\":1,\"247\":1,\"279\":1,\"300\":1}}],[\"used\",{\"0\":{\"184\":1,\"298\":1},\"1\":{\"17\":1,\"18\":1,\"29\":1,\"49\":5,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"63\":1,\"64\":1,\"65\":1,\"69\":2,\"70\":1,\"72\":2,\"90\":1,\"111\":1,\"119\":2,\"124\":1,\"125\":1,\"131\":7,\"132\":2,\"133\":1,\"134\":1,\"136\":3,\"137\":2,\"140\":8,\"147\":5,\"152\":1,\"157\":1,\"160\":2,\"162\":4,\"165\":1,\"170\":1,\"172\":2,\"175\":3,\"180\":1,\"188\":1,\"196\":1,\"224\":1,\"225\":1,\"228\":3,\"233\":1,\"239\":1,\"247\":1,\"248\":1,\"251\":1,\"263\":3,\"264\":1,\"266\":1,\"267\":1,\"269\":1,\"272\":2,\"279\":1,\"281\":1,\"283\":2,\"287\":3,\"292\":1}}],[\"useful\",{\"1\":{\"16\":1,\"188\":1,\"192\":3,\"225\":1}}],[\"usefulness\",{\"1\":{\"16\":1}}],[\"users\",{\"1\":{\"16\":1,\"31\":2,\"136\":3,\"165\":1,\"245\":7,\"246\":3,\"247\":2,\"248\":2,\"300\":1}}],[\"user\",{\"1\":{\"15\":2,\"21\":2,\"22\":4,\"23\":4,\"32\":4,\"132\":2,\"136\":2,\"137\":4,\"159\":1,\"161\":1,\"173\":1,\"196\":1,\"219\":1,\"220\":1,\"221\":2,\"222\":1,\"269\":1}}],[\"use\",{\"0\":{\"15\":1,\"19\":1,\"23\":1,\"25\":1,\"26\":1,\"34\":1,\"35\":1,\"181\":1,\"273\":1,\"292\":1,\"298\":1},\"1\":{\"6\":1,\"8\":2,\"9\":2,\"10\":1,\"17\":1,\"24\":1,\"25\":2,\"26\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":2,\"33\":1,\"34\":1,\"35\":1,\"38\":1,\"40\":1,\"43\":4,\"53\":4,\"64\":1,\"69\":1,\"81\":1,\"88\":1,\"93\":1,\"94\":1,\"95\":3,\"96\":2,\"99\":4,\"100\":1,\"102\":1,\"103\":1,\"105\":1,\"107\":1,\"108\":1,\"109\":1,\"112\":1,\"114\":2,\"115\":2,\"123\":1,\"132\":6,\"137\":3,\"143\":1,\"149\":1,\"154\":3,\"160\":2,\"173\":1,\"175\":1,\"196\":1,\"200\":1,\"201\":1,\"205\":1,\"206\":1,\"217\":2,\"245\":1,\"249\":1,\"259\":1,\"263\":5,\"264\":3,\"269\":1,\"278\":3,\"279\":4,\"285\":1,\"291\":1,\"292\":1,\"301\":2}}],[\"using\",{\"0\":{\"21\":1,\"37\":1,\"38\":1,\"40\":1,\"44\":1,\"197\":1,\"201\":1,\"206\":1,\"211\":1,\"218\":1,\"300\":1},\"1\":{\"6\":1,\"9\":3,\"10\":1,\"17\":1,\"18\":1,\"29\":3,\"30\":3,\"31\":2,\"32\":2,\"34\":2,\"35\":1,\"37\":1,\"38\":2,\"40\":1,\"42\":3,\"44\":1,\"46\":1,\"53\":1,\"56\":1,\"64\":1,\"65\":1,\"79\":1,\"80\":1,\"93\":2,\"94\":2,\"95\":2,\"96\":1,\"98\":3,\"113\":2,\"114\":1,\"117\":1,\"119\":1,\"126\":1,\"136\":1,\"160\":1,\"165\":2,\"168\":1,\"172\":3,\"193\":1,\"200\":1,\"210\":2,\"217\":1,\"237\":4,\"259\":1,\"274\":1,\"279\":1,\"291\":1,\"292\":1,\"298\":2}}],[\"uber\",{\"1\":{\"2\":1,\"7\":2,\"41\":2}}],[\"cmd\",{\"1\":{\"207\":1}}],[\"cwd\",{\"1\":{\"194\":6}}],[\"cwnd\",{\"1\":{\"154\":4,\"155\":2,\"156\":4,\"157\":1}}],[\"cpu\",{\"1\":{\"173\":1,\"250\":1}}],[\"cpe\",{\"1\":{\"168\":2}}],[\"c2\",{\"1\":{\"172\":1}}],[\"cc\",{\"1\":{\"172\":1}}],[\"cname\",{\"1\":{\"167\":1}}],[\"cycle\",{\"1\":{\"152\":1}}],[\"ciphertext\",{\"1\":{\"134\":2}}],[\"certain\",{\"1\":{\"140\":1,\"173\":1,\"200\":1,\"245\":1,\"269\":1}}],[\"certainly\",{\"1\":{\"7\":1,\"16\":1}}],[\"certificates\",{\"1\":{\"136\":10,\"137\":1}}],[\"certificate\",{\"0\":{\"136\":1},\"1\":{\"134\":7,\"136\":4,\"137\":24}}],[\"cslip\",{\"1\":{\"129\":1}}],[\"ctx3val\",{\"1\":{\"123\":2}}],[\"ctx3\",{\"1\":{\"123\":3}}],[\"ctx1val\",{\"1\":{\"123\":2}}],[\"ctx1\",{\"1\":{\"123\":3,\"125\":2,\"126\":2}}],[\"ctx2val\",{\"1\":{\"123\":2}}],[\"ctx2\",{\"1\":{\"122\":1,\"123\":3}}],[\"ctx\",{\"1\":{\"122\":1,\"123\":5,\"125\":2,\"126\":2,\"212\":1,\"213\":1,\"214\":2,\"215\":1}}],[\"cryptor\",{\"1\":{\"225\":1}}],[\"crud\",{\"1\":{\"217\":1}}],[\"crucial\",{\"1\":{\"193\":1}}],[\"cross\",{\"1\":{\"173\":1}}],[\"credentials\",{\"1\":{\"136\":1}}],[\"creating\",{\"0\":{\"93\":1,\"98\":1,\"105\":1,\"112\":1,\"122\":1,\"123\":1,\"198\":1,\"203\":1,\"208\":1,\"212\":1,\"219\":1,\"263\":1},\"1\":{\"105\":1,\"225\":4,\"263\":2}}],[\"creation\",{\"1\":{\"42\":1,\"288\":1}}],[\"creates\",{\"1\":{\"163\":1}}],[\"create\",{\"1\":{\"29\":1,\"70\":1,\"93\":4,\"94\":2,\"95\":2,\"96\":2,\"105\":1,\"107\":1,\"109\":2,\"112\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"163\":1,\"184\":1,\"196\":1,\"212\":1,\"217\":2,\"219\":1,\"253\":1,\"254\":1,\"256\":1,\"261\":1,\"262\":1,\"273\":1}}],[\"created\",{\"1\":{\"29\":2,\"75\":1,\"77\":1,\"132\":3,\"251\":2,\"263\":1,\"279\":1}}],[\"crl\",{\"1\":{\"134\":1}}],[\"crash\",{\"1\":{\"40\":1}}],[\"critical\",{\"1\":{\"32\":1,\"163\":1}}],[\"curly\",{\"1\":{\"279\":1}}],[\"currying\",{\"1\":{\"225\":1}}],[\"currently\",{\"1\":{\"132\":1,\"153\":1,\"194\":1}}],[\"current\",{\"1\":{\"65\":2,\"95\":1,\"141\":1,\"149\":1,\"152\":1,\"194\":1,\"294\":1,\"296\":1,\"302\":1}}],[\"curve\",{\"1\":{\"200\":2,\"210\":2}}],[\"cut\",{\"1\":{\"141\":1}}],[\"customize\",{\"1\":{\"193\":1,\"210\":1}}],[\"custom\",{\"1\":{\"29\":1,\"31\":1,\"80\":1,\"217\":1}}],[\"cumbersome\",{\"1\":{\"16\":1,\"217\":1,\"279\":1}}],[\"cfg\",{\"1\":{\"18\":4}}],[\"clustered\",{\"0\":{\"258\":1,\"259\":1},\"1\":{\"251\":4,\"258\":7,\"259\":10}}],[\"clutter\",{\"1\":{\"32\":1}}],[\"clause\",{\"0\":{\"245\":1},\"1\":{\"237\":1}}],[\"class\",{\"1\":{\"175\":3}}],[\"cleanup\",{\"1\":{\"194\":1}}],[\"clear\",{\"1\":{\"132\":1}}],[\"clearly\",{\"1\":{\"10\":1}}],[\"clifford\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"click\",{\"1\":{\"189\":2,\"191\":1}}],[\"clients\",{\"1\":{\"132\":1}}],[\"client\",{\"1\":{\"5\":2,\"8\":2,\"16\":6,\"132\":11,\"134\":10,\"149\":10,\"160\":2,\"162\":1,\"166\":2,\"200\":2,\"201\":1,\"205\":2,\"206\":1,\"212\":1,\"213\":1,\"214\":2,\"215\":1}}],[\"clone\",{\"1\":{\"184\":2}}],[\"cloning\",{\"0\":{\"109\":1}}],[\"cloud\",{\"1\":{\"163\":2,\"187\":1,\"191\":1}}],[\"closing\",{\"0\":{\"114\":1}}],[\"closed\",{\"1\":{\"114\":1}}],[\"closes\",{\"1\":{\"43\":1}}],[\"close\",{\"1\":{\"37\":2,\"42\":3,\"43\":1,\"59\":1,\"114\":6}}],[\"china\",{\"1\":{\"279\":2}}],[\"chinese\",{\"1\":{\"210\":2,\"279\":1,\"285\":1}}],[\"child\",{\"1\":{\"266\":4}}],[\"chose\",{\"1\":{\"269\":1}}],[\"choosing\",{\"1\":{\"263\":4}}],[\"choose\",{\"1\":{\"9\":1,\"132\":1,\"189\":1,\"196\":1,\"263\":7}}],[\"choice\",{\"1\":{\"187\":1}}],[\"choices\",{\"1\":{\"132\":2,\"140\":1}}],[\"ch3\",{\"1\":{\"115\":3}}],[\"ch2\",{\"1\":{\"112\":1,\"115\":3}}],[\"ch1\",{\"1\":{\"112\":1,\"115\":3}}],[\"ch\",{\"1\":{\"58\":2,\"113\":2,\"114\":2}}],[\"checkout\",{\"1\":{\"184\":2}}],[\"checks\",{\"1\":{\"163\":1,\"225\":1}}],[\"checksum\",{\"1\":{\"140\":1,\"141\":1,\"147\":2,\"150\":1,\"158\":1,\"161\":1}}],[\"checking\",{\"1\":{\"29\":1,\"133\":1,\"225\":2}}],[\"check\",{\"0\":{\"101\":1},\"1\":{\"17\":1,\"85\":6,\"101\":1,\"140\":1,\"160\":1,\"166\":4,\"184\":1}}],[\"char\",{\"1\":{\"251\":1}}],[\"character\",{\"0\":{\"285\":1},\"1\":{\"245\":2,\"282\":1,\"283\":3}}],[\"characteristics\",{\"0\":{\"160\":1},\"1\":{\"132\":1,\"139\":1,\"266\":1,\"267\":1}}],[\"characters\",{\"0\":{\"283\":1},\"1\":{\"4\":1,\"9\":1,\"19\":1,\"72\":2,\"75\":1,\"245\":1,\"281\":1,\"283\":3}}],[\"chainable\",{\"1\":{\"217\":2}}],[\"challenges\",{\"1\":{\"200\":1}}],[\"changing\",{\"1\":{\"173\":1,\"289\":1,\"300\":1}}],[\"changed\",{\"1\":{\"51\":1,\"109\":1,\"132\":1,\"288\":1}}],[\"changes\",{\"1\":{\"21\":1,\"156\":1,\"184\":6,\"269\":3,\"286\":4}}],[\"change\",{\"1\":{\"16\":1,\"176\":1,\"269\":2,\"286\":4}}],[\"chan<\",{\"1\":{\"58\":1}}],[\"channel\",{\"0\":{\"110\":1,\"112\":1,\"114\":1},\"1\":{\"58\":6,\"111\":1,\"112\":3,\"113\":3,\"114\":5,\"115\":4,\"116\":1,\"117\":1,\"287\":1,\"299\":2}}],[\"channels\",{\"1\":{\"35\":1,\"58\":1,\"67\":1}}],[\"chaninterfacemapstruct\",{\"1\":{\"49\":1}}],[\"chan\",{\"1\":{\"42\":2,\"43\":2,\"58\":5,\"67\":3,\"82\":1,\"112\":2,\"120\":1}}],[\"ca\",{\"1\":{\"137\":1}}],[\"caches\",{\"1\":{\"166\":1}}],[\"cached\",{\"1\":{\"166\":2}}],[\"cache\",{\"1\":{\"132\":1,\"163\":2,\"166\":9,\"168\":2,\"172\":7}}],[\"cartesian\",{\"1\":{\"229\":5}}],[\"cards\",{\"1\":{\"170\":1}}],[\"card\",{\"1\":{\"128\":1,\"228\":2}}],[\"carries\",{\"1\":{\"120\":1}}],[\"cable\",{\"1\":{\"128\":1}}],[\"capable\",{\"1\":{\"163\":1}}],[\"capacities\",{\"0\":{\"47\":1}}],[\"capacity\",{\"0\":{\"39\":1,\"107\":1},\"1\":{\"25\":1,\"39\":1,\"47\":1,\"60\":2,\"77\":1,\"78\":1,\"98\":1,\"107\":2,\"153\":1,\"279\":1,\"288\":2}}],[\"cap\",{\"1\":{\"37\":2,\"107\":2}}],[\"cas\",{\"1\":{\"136\":1}}],[\"cascading\",{\"1\":{\"34\":1}}],[\"case\",{\"1\":{\"10\":1,\"31\":1,\"32\":1,\"42\":2,\"64\":13,\"67\":4,\"115\":3,\"125\":1,\"126\":1,\"188\":1}}],[\"cases\",{\"0\":{\"298\":1},\"1\":{\"8\":1,\"9\":1,\"12\":1,\"29\":1,\"32\":2,\"152\":1}}],[\"caused\",{\"1\":{\"152\":2,\"177\":1}}],[\"causes\",{\"1\":{\"149\":1,\"163\":1}}],[\"cause\",{\"1\":{\"33\":1,\"40\":1,\"75\":1,\"114\":1,\"168\":1,\"258\":1,\"259\":2,\"269\":1,\"292\":1,\"296\":1}}],[\"causing\",{\"1\":{\"33\":1,\"144\":1,\"163\":2,\"168\":3,\"173\":3}}],[\"calculating\",{\"1\":{\"225\":1}}],[\"calculations\",{\"1\":{\"225\":1}}],[\"calculation\",{\"1\":{\"152\":2}}],[\"calculated\",{\"1\":{\"147\":1}}],[\"calculate\",{\"1\":{\"137\":1,\"158\":1}}],[\"calccost\",{\"1\":{\"11\":4}}],[\"calls\",{\"1\":{\"194\":1}}],[\"called\",{\"1\":{\"120\":1,\"128\":1,\"165\":1,\"201\":1,\"206\":1,\"269\":1}}],[\"callee\",{\"1\":{\"32\":1}}],[\"callers\",{\"1\":{\"32\":2}}],[\"caller\",{\"1\":{\"5\":2,\"40\":1}}],[\"calling\",{\"1\":{\"17\":1}}],[\"call\",{\"1\":{\"12\":2,\"16\":1,\"40\":2,\"193\":1,\"232\":1}}],[\"camel\",{\"1\":{\"10\":1,\"31\":1,\"188\":1}}],[\"candidate\",{\"1\":{\"228\":5}}],[\"canonical\",{\"1\":{\"167\":1}}],[\"canceled\",{\"1\":{\"126\":2}}],[\"cancelation\",{\"1\":{\"120\":1}}],[\"cancel\",{\"1\":{\"119\":1,\"121\":1,\"126\":3,\"298\":1}}],[\"cannot\",{\"0\":{\"274\":1},\"1\":{\"32\":1,\"38\":1,\"42\":1,\"49\":1,\"51\":1,\"75\":2,\"77\":1,\"132\":3,\"137\":1,\"139\":1,\"140\":1,\"166\":2,\"170\":1,\"173\":1,\"178\":1,\"228\":2,\"263\":1,\"269\":1,\"274\":1,\"278\":1,\"288\":1,\"301\":1}}],[\"can\",{\"0\":{\"274\":1,\"277\":1,\"294\":1},\"1\":{\"8\":1,\"16\":2,\"17\":1,\"22\":1,\"30\":2,\"31\":2,\"32\":2,\"35\":1,\"36\":1,\"38\":1,\"39\":1,\"40\":2,\"42\":2,\"44\":1,\"51\":1,\"53\":3,\"63\":1,\"64\":1,\"66\":1,\"69\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"88\":1,\"90\":1,\"93\":1,\"95\":1,\"96\":1,\"98\":1,\"99\":1,\"100\":1,\"103\":1,\"105\":1,\"106\":1,\"109\":1,\"114\":2,\"115\":2,\"119\":3,\"121\":1,\"124\":1,\"125\":1,\"126\":2,\"128\":1,\"131\":1,\"132\":5,\"135\":4,\"136\":4,\"137\":2,\"139\":1,\"140\":1,\"141\":1,\"144\":2,\"147\":2,\"149\":1,\"152\":5,\"160\":1,\"163\":7,\"172\":1,\"173\":1,\"177\":2,\"178\":1,\"180\":5,\"181\":2,\"187\":2,\"188\":2,\"192\":2,\"193\":1,\"194\":2,\"200\":1,\"210\":1,\"217\":2,\"228\":6,\"233\":1,\"235\":1,\"236\":1,\"237\":2,\"250\":1,\"251\":2,\"258\":2,\"259\":1,\"263\":8,\"264\":1,\"267\":3,\"269\":2,\"273\":9,\"274\":1,\"277\":2,\"279\":2,\"283\":2,\"285\":2,\"286\":1,\"292\":1,\"298\":3}}],[\"c\",{\"1\":{\"5\":4,\"42\":1,\"51\":2,\"67\":5,\"75\":1,\"88\":1,\"116\":1,\"172\":1,\"175\":1,\"184\":1,\"194\":1,\"198\":2,\"226\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":3,\"263\":4}}],[\"coding\",{\"1\":{\"273\":1}}],[\"codelens\",{\"1\":{\"192\":1}}],[\"codes\",{\"0\":{\"132\":1},\"1\":{\"132\":1}}],[\"code\",{\"0\":{\"185\":1},\"1\":{\"4\":1,\"7\":1,\"12\":3,\"16\":2,\"32\":1,\"34\":1,\"42\":1,\"49\":1,\"75\":1,\"129\":1,\"132\":10,\"147\":1,\"171\":1,\"180\":1,\"181\":1,\"191\":1,\"192\":9,\"193\":4,\"194\":5,\"200\":7,\"201\":3,\"205\":7,\"206\":3,\"210\":5,\"283\":2,\"291\":1,\"302\":1}}],[\"covering\",{\"1\":{\"259\":3}}],[\"covers\",{\"1\":{\"147\":1}}],[\"cook\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"cookies\",{\"1\":{\"163\":1}}],[\"copied\",{\"1\":{\"286\":2}}],[\"cope\",{\"1\":{\"152\":1}}],[\"copying\",{\"1\":{\"273\":1,\"286\":5,\"292\":1}}],[\"copy\",{\"0\":{\"286\":2},\"1\":{\"37\":2,\"109\":3,\"132\":1,\"286\":14,\"289\":1,\"292\":3}}],[\"coreclr\",{\"1\":{\"194\":1}}],[\"core\",{\"1\":{\"139\":1,\"194\":1}}],[\"coroutines\",{\"1\":{\"119\":1,\"298\":2}}],[\"coroutine\",{\"1\":{\"70\":1,\"119\":3,\"298\":2}}],[\"correspond\",{\"1\":{\"135\":1}}],[\"corresponding\",{\"1\":{\"64\":1,\"79\":1,\"82\":1,\"98\":1,\"132\":1,\"140\":1,\"141\":1,\"163\":1,\"165\":1,\"166\":2,\"247\":1,\"264\":2,\"292\":1}}],[\"correctly\",{\"1\":{\"147\":1,\"160\":1}}],[\"correct\",{\"1\":{\"41\":1,\"132\":1,\"137\":1,\"170\":1,\"278\":1}}],[\"columns\",{\"1\":{\"233\":1,\"235\":1,\"236\":1,\"237\":2,\"250\":1,\"251\":1,\"263\":1}}],[\"column\",{\"0\":{\"261\":1},\"1\":{\"228\":3,\"251\":6,\"263\":4}}],[\"colours\",{\"1\":{\"279\":1}}],[\"colon\",{\"1\":{\"143\":1}}],[\"color\",{\"1\":{\"5\":6,\"188\":1}}],[\"collection\",{\"1\":{\"224\":1,\"276\":1,\"302\":1}}],[\"collections\",{\"1\":{\"60\":1}}],[\"collecting\",{\"1\":{\"163\":1}}],[\"collected\",{\"1\":{\"142\":1,\"302\":2}}],[\"collects\",{\"1\":{\"142\":1}}],[\"course\",{\"0\":{\"231\":1},\"1\":{\"232\":2,\"233\":4,\"235\":4,\"236\":4,\"237\":4}}],[\"could\",{\"1\":{\"29\":1,\"31\":1,\"32\":2}}],[\"counts\",{\"1\":{\"249\":3}}],[\"count\",{\"1\":{\"16\":2,\"173\":1,\"247\":3,\"249\":5}}],[\"countingwritecloser\",{\"1\":{\"16\":2}}],[\"costs\",{\"1\":{\"181\":1}}],[\"cost\",{\"1\":{\"11\":2,\"258\":1,\"259\":1,\"263\":1}}],[\"combat\",{\"1\":{\"302\":1}}],[\"combination\",{\"1\":{\"228\":1,\"251\":1}}],[\"combining\",{\"1\":{\"163\":1}}],[\"combined\",{\"1\":{\"140\":1}}],[\"combine\",{\"1\":{\"94\":2,\"95\":1,\"96\":1}}],[\"commits\",{\"1\":{\"269\":1}}],[\"committed\",{\"1\":{\"269\":4}}],[\"committing\",{\"0\":{\"185\":1},\"1\":{\"269\":1}}],[\"commit\",{\"1\":{\"184\":6}}],[\"community\",{\"1\":{\"181\":1,\"200\":4,\"205\":2}}],[\"communicate\",{\"1\":{\"162\":2}}],[\"communication\",{\"1\":{\"67\":1,\"111\":1,\"128\":2,\"146\":1,\"152\":1,\"162\":1,\"173\":2}}],[\"comment\",{\"1\":{\"217\":1}}],[\"commented\",{\"1\":{\"75\":1}}],[\"commerce\",{\"1\":{\"136\":1}}],[\"commands\",{\"0\":{\"182\":1,\"184\":1},\"1\":{\"188\":1,\"192\":1,\"225\":1}}],[\"command\",{\"1\":{\"53\":1,\"149\":3,\"182\":1,\"184\":1,\"201\":2,\"206\":1,\"239\":1}}],[\"commonly\",{\"0\":{\"184\":1},\"1\":{\"119\":1,\"137\":1,\"162\":1,\"224\":1,\"225\":1,\"266\":1,\"267\":1,\"287\":1}}],[\"common\",{\"0\":{\"163\":1,\"168\":1,\"173\":1,\"182\":1,\"249\":1},\"1\":{\"7\":2,\"9\":1,\"43\":1,\"128\":1,\"132\":1,\"140\":1,\"152\":1,\"225\":1,\"292\":1}}],[\"compiled\",{\"1\":{\"194\":1}}],[\"compiler\",{\"1\":{\"51\":1}}],[\"compilation\",{\"1\":{\"194\":1}}],[\"competent\",{\"1\":{\"183\":1}}],[\"comprehensive\",{\"1\":{\"205\":1}}],[\"compress\",{\"1\":{\"135\":1}}],[\"compression\",{\"1\":{\"135\":1}}],[\"compromised\",{\"1\":{\"168\":1}}],[\"computer\",{\"1\":{\"166\":1}}],[\"computers\",{\"1\":{\"160\":1}}],[\"comparator\",{\"1\":{\"226\":2}}],[\"comparing\",{\"1\":{\"225\":1}}],[\"comparison\",{\"1\":{\"29\":2,\"192\":1,\"225\":1}}],[\"compared\",{\"1\":{\"196\":1,\"267\":1}}],[\"compare\",{\"1\":{\"137\":1,\"225\":1,\"226\":1}}],[\"composition\",{\"1\":{\"171\":1}}],[\"composite\",{\"0\":{\"57\":1,\"262\":1,\"279\":1},\"1\":{\"49\":1,\"217\":1,\"251\":3,\"263\":1,\"264\":2,\"279\":8}}],[\"composed\",{\"1\":{\"75\":1,\"77\":1,\"80\":1}}],[\"compound\",{\"1\":{\"49\":1}}],[\"completely\",{\"1\":{\"160\":1}}],[\"completed\",{\"1\":{\"149\":1}}],[\"complete\",{\"1\":{\"115\":1,\"264\":2}}],[\"completing\",{\"1\":{\"64\":1}}],[\"complexities\",{\"1\":{\"181\":1}}],[\"complexdata2\",{\"1\":{\"74\":1}}],[\"complexdata\",{\"1\":{\"74\":1}}],[\"complex128\",{\"1\":{\"74\":1,\"82\":1}}],[\"complex64complex128\",{\"1\":{\"276\":1}}],[\"complex64\",{\"1\":{\"74\":2,\"82\":1}}],[\"complex\",{\"0\":{\"74\":2},\"1\":{\"37\":2,\"38\":1,\"74\":3,\"196\":1,\"200\":2,\"210\":1,\"273\":1,\"276\":1}}],[\"complicate\",{\"1\":{\"44\":1}}],[\"comes\",{\"1\":{\"64\":1}}],[\"come\",{\"1\":{\"11\":1,\"72\":1}}],[\"com\",{\"1\":{\"8\":2,\"192\":4,\"198\":1,\"202\":1,\"207\":1,\"226\":1}}],[\"connie\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"connects\",{\"1\":{\"194\":1}}],[\"connected\",{\"1\":{\"172\":1,\"175\":1,\"267\":3}}],[\"connections\",{\"1\":{\"163\":5,\"168\":1,\"178\":1}}],[\"connectionless\",{\"1\":{\"139\":1,\"159\":1,\"160\":1,\"162\":1}}],[\"connection\",{\"1\":{\"135\":5,\"139\":1,\"144\":2,\"146\":1,\"147\":4,\"149\":3,\"160\":1,\"162\":3,\"163\":5,\"194\":1}}],[\"connect\",{\"1\":{\"131\":2,\"177\":1}}],[\"conjunction\",{\"1\":{\"157\":1}}],[\"congestion\",{\"1\":{\"140\":1,\"150\":1,\"152\":2,\"154\":5,\"156\":3,\"162\":1}}],[\"conventional\",{\"1\":{\"279\":1}}],[\"convenient\",{\"1\":{\"128\":1,\"210\":1,\"217\":1}}],[\"conveniently\",{\"1\":{\"119\":1,\"188\":1}}],[\"convertor\",{\"1\":{\"225\":1}}],[\"convert\",{\"1\":{\"176\":3}}],[\"converting\",{\"1\":{\"46\":1,\"188\":1,\"225\":1}}],[\"conversions\",{\"1\":{\"210\":1}}],[\"conversion\",{\"1\":{\"46\":1,\"128\":1,\"129\":1,\"175\":2,\"176\":3,\"178\":1,\"225\":1}}],[\"conduit\",{\"1\":{\"111\":1}}],[\"condition\",{\"1\":{\"65\":1,\"86\":1,\"225\":2,\"237\":2,\"264\":5}}],[\"conditions\",{\"1\":{\"64\":1,\"229\":1,\"237\":1}}],[\"conditional\",{\"1\":{\"63\":1,\"225\":1}}],[\"conferencing\",{\"1\":{\"160\":1}}],[\"confirm\",{\"1\":{\"147\":2}}],[\"confirmation\",{\"1\":{\"137\":1}}],[\"configured\",{\"1\":{\"119\":1,\"134\":1}}],[\"configure\",{\"1\":{\"39\":1,\"60\":1,\"193\":2}}],[\"configurations\",{\"1\":{\"194\":8}}],[\"configuration\",{\"0\":{\"193\":1,\"194\":1},\"1\":{\"36\":1,\"143\":1,\"166\":1,\"193\":2,\"194\":2,\"217\":1}}],[\"conflicts\",{\"1\":{\"36\":2}}],[\"conflict\",{\"1\":{\"8\":1}}],[\"concatenation\",{\"1\":{\"225\":1}}],[\"concluded\",{\"1\":{\"137\":1}}],[\"concurrency\",{\"0\":{\"103\":1,\"301\":1},\"1\":{\"225\":2,\"269\":1,\"292\":1,\"301\":2}}],[\"concurrent\",{\"1\":{\"35\":1,\"103\":1,\"135\":2,\"269\":1,\"292\":1}}],[\"concretelist\",{\"1\":{\"36\":6}}],[\"concise\",{\"1\":{\"12\":1,\"16\":1}}],[\"console\",{\"1\":{\"194\":6}}],[\"consume\",{\"1\":{\"168\":1,\"180\":1}}],[\"consumption\",{\"1\":{\"163\":1,\"250\":2}}],[\"consecutive\",{\"1\":{\"157\":2}}],[\"consistent\",{\"1\":{\"181\":1,\"237\":1,\"258\":1,\"269\":3}}],[\"consistently\",{\"1\":{\"180\":1}}],[\"consistency\",{\"1\":{\"181\":2}}],[\"consisting\",{\"1\":{\"60\":1}}],[\"consider\",{\"1\":{\"25\":1,\"31\":1,\"35\":1,\"42\":1}}],[\"cons\",{\"1\":{\"16\":2,\"196\":2,\"200\":2,\"205\":2,\"210\":1,\"217\":2}}],[\"constraints\",{\"1\":{\"217\":1}}],[\"construct\",{\"1\":{\"136\":1,\"279\":1}}],[\"constfuncimportpackagetypevar\",{\"1\":{\"49\":1}}],[\"constant\",{\"1\":{\"26\":1,\"29\":1,\"51\":1,\"276\":3,\"278\":2}}],[\"constants\",{\"0\":{\"15\":1},\"1\":{\"5\":1,\"51\":1,\"274\":1,\"276\":1}}],[\"const\",{\"1\":{\"5\":6,\"11\":1,\"15\":2,\"26\":2,\"51\":6}}],[\"continuous\",{\"1\":{\"181\":2}}],[\"continue\",{\"1\":{\"12\":1,\"64\":1,\"65\":4,\"66\":1,\"132\":5,\"134\":1}}],[\"contact\",{\"1\":{\"129\":1}}],[\"containers\",{\"1\":{\"180\":4,\"181\":4,\"182\":1}}],[\"container\",{\"1\":{\"180\":4,\"182\":13}}],[\"contained\",{\"1\":{\"137\":1}}],[\"contain\",{\"1\":{\"73\":1,\"74\":1,\"172\":1,\"267\":6}}],[\"contains\",{\"1\":{\"19\":1,\"95\":2,\"172\":1,\"266\":3,\"267\":1}}],[\"contrast\",{\"1\":{\"269\":1}}],[\"contract\",{\"1\":{\"32\":1}}],[\"contributing\",{\"1\":{\"200\":1}}],[\"contributor\",{\"1\":{\"34\":1}}],[\"controls\",{\"1\":{\"194\":2}}],[\"control\",{\"0\":{\"62\":1},\"1\":{\"16\":1,\"35\":1,\"40\":1,\"49\":2,\"125\":1,\"140\":2,\"146\":1,\"147\":1,\"150\":2,\"153\":2,\"154\":1,\"162\":2,\"170\":1,\"269\":1}}],[\"context\",{\"0\":{\"118\":1,\"120\":1},\"1\":{\"30\":1,\"119\":3,\"120\":3,\"121\":2,\"122\":4,\"123\":12,\"124\":2,\"125\":8,\"126\":6,\"198\":1,\"217\":2,\"298\":2}}],[\"content\",{\"1\":{\"1\":1,\"132\":6,\"134\":4,\"137\":1,\"140\":1,\"269\":1}}],[\"db\",{\"1\":{\"219\":1,\"220\":1,\"221\":1,\"222\":1}}],[\"driven\",{\"1\":{\"232\":2,\"236\":1}}],[\"driving\",{\"1\":{\"232\":2,\"235\":1,\"237\":1}}],[\"dryrun\",{\"1\":{\"217\":1}}],[\"drops\",{\"1\":{\"149\":1}}],[\"dll>\",{\"1\":{\"194\":1}}],[\"d2\",{\"1\":{\"172\":1}}],[\"dd\",{\"1\":{\"172\":1}}],[\"ddos\",{\"1\":{\"163\":2}}],[\"d\",{\"1\":{\"152\":4,\"172\":9,\"184\":1,\"284\":2}}],[\"dhcpv6\",{\"1\":{\"143\":1}}],[\"dhcp\",{\"1\":{\"143\":1}}],[\"df\",{\"1\":{\"140\":2,\"141\":1,\"142\":1}}],[\"dscp\",{\"1\":{\"140\":1}}],[\"ds\",{\"1\":{\"140\":1}}],[\"dns\",{\"0\":{\"164\":1,\"166\":1,\"167\":1,\"168\":1},\"1\":{\"129\":1,\"165\":4,\"166\":5,\"168\":8}}],[\"damaged\",{\"1\":{\"140\":1}}],[\"dates\",{\"1\":{\"225\":1}}],[\"datetime\",{\"1\":{\"225\":1}}],[\"date\",{\"1\":{\"132\":1,\"225\":1,\"249\":2}}],[\"datastructure\",{\"1\":{\"225\":1}}],[\"dataslice2\",{\"1\":{\"105\":2}}],[\"dataslice1\",{\"1\":{\"105\":3}}],[\"dataslice\",{\"1\":{\"105\":2}}],[\"datagram\",{\"1\":{\"140\":2,\"141\":3,\"159\":1,\"160\":2,\"161\":1}}],[\"data2\",{\"1\":{\"108\":2}}],[\"data1\",{\"1\":{\"108\":2,\"109\":7}}],[\"datamap\",{\"1\":{\"99\":9,\"100\":9,\"101\":7,\"102\":1}}],[\"databases\",{\"1\":{\"210\":1,\"217\":1}}],[\"database\",{\"1\":{\"38\":1,\"165\":1,\"210\":3,\"217\":2,\"250\":2,\"269\":2}}],[\"data\",{\"0\":{\"71\":1,\"108\":1,\"113\":1,\"212\":1,\"213\":1,\"214\":1,\"215\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"265\":1,\"289\":1,\"291\":1},\"1\":{\"12\":2,\"18\":6,\"39\":7,\"51\":1,\"58\":3,\"67\":1,\"77\":2,\"78\":5,\"79\":2,\"81\":1,\"98\":2,\"105\":1,\"106\":4,\"107\":4,\"108\":7,\"109\":9,\"111\":2,\"112\":3,\"113\":2,\"115\":5,\"117\":1,\"119\":2,\"121\":1,\"124\":2,\"128\":10,\"129\":6,\"131\":3,\"132\":1,\"133\":4,\"134\":1,\"136\":3,\"137\":4,\"140\":8,\"141\":4,\"142\":1,\"144\":2,\"147\":15,\"149\":1,\"150\":1,\"151\":1,\"152\":12,\"153\":1,\"158\":2,\"160\":4,\"161\":1,\"162\":2,\"163\":1,\"166\":2,\"168\":1,\"170\":1,\"171\":2,\"172\":9,\"176\":4,\"210\":3,\"214\":1,\"225\":4,\"228\":4,\"233\":1,\"235\":2,\"236\":2,\"237\":3,\"245\":2,\"248\":1,\"250\":5,\"251\":3,\"258\":12,\"259\":18,\"263\":5,\"264\":7,\"266\":2,\"267\":8,\"269\":18,\"272\":3,\"273\":8,\"274\":1,\"288\":2,\"291\":2,\"292\":2,\"298\":3}}],[\"day\",{\"1\":{\"64\":1}}],[\"dayofweek\",{\"1\":{\"64\":2}}],[\"dirty\",{\"1\":{\"269\":4}}],[\"directory\",{\"1\":{\"194\":2}}],[\"directories\",{\"1\":{\"193\":1,\"225\":1}}],[\"directly\",{\"1\":{\"64\":1,\"105\":3,\"166\":1,\"172\":1,\"177\":1,\"178\":1,\"263\":1,\"273\":2,\"292\":1,\"300\":1}}],[\"direct\",{\"1\":{\"1\":1,\"16\":1,\"53\":1,\"229\":1}}],[\"dictionary\",{\"1\":{\"212\":1,\"213\":1,\"214\":4,\"215\":1}}],[\"diagram\",{\"0\":{\"230\":1},\"1\":{\"176\":1}}],[\"diagnosing\",{\"1\":{\"140\":1}}],[\"diagnosis\",{\"1\":{\"131\":1}}],[\"divert\",{\"1\":{\"163\":1}}],[\"divided\",{\"1\":{\"140\":1,\"141\":2}}],[\"divides\",{\"1\":{\"128\":1}}],[\"division\",{\"0\":{\"252\":1,\"257\":1,\"260\":1},\"1\":{\"84\":1,\"251\":3}}],[\"digits\",{\"1\":{\"140\":1}}],[\"digital\",{\"0\":{\"136\":1,\"137\":1},\"1\":{\"136\":9,\"137\":11}}],[\"digest\",{\"1\":{\"137\":1}}],[\"disk\",{\"1\":{\"250\":1,\"251\":1,\"258\":1,\"259\":1}}],[\"distinct\",{\"1\":{\"242\":1}}],[\"distinguish\",{\"1\":{\"188\":1}}],[\"distractions\",{\"1\":{\"163\":1}}],[\"distributed\",{\"1\":{\"165\":1}}],[\"distribute\",{\"1\":{\"163\":1}}],[\"disadvantages\",{\"0\":{\"178\":1},\"1\":{\"210\":1,\"250\":1,\"258\":2,\"259\":2}}],[\"disadvantage\",{\"1\":{\"152\":1,\"292\":2}}],[\"discrimination\",{\"1\":{\"263\":3}}],[\"discrepancies\",{\"1\":{\"181\":1}}],[\"discontinuous\",{\"1\":{\"258\":1,\"259\":2}}],[\"disconnected\",{\"1\":{\"178\":1}}],[\"disconnect\",{\"1\":{\"144\":1,\"149\":3}}],[\"discarded\",{\"1\":{\"139\":1,\"140\":2,\"173\":1}}],[\"displays\",{\"1\":{\"194\":1}}],[\"displayed\",{\"1\":{\"194\":2}}],[\"display\",{\"1\":{\"134\":1}}],[\"dissolve\",{\"1\":{\"129\":1}}],[\"diff\",{\"1\":{\"184\":1}}],[\"difference\",{\"0\":{\"278\":1,\"281\":1,\"287\":1,\"288\":1},\"1\":{\"162\":1,\"228\":1,\"251\":1}}],[\"differences\",{\"1\":{\"135\":1,\"143\":1,\"184\":1,\"225\":1,\"267\":1,\"281\":1}}],[\"differentiated\",{\"1\":{\"140\":1}}],[\"differently\",{\"1\":{\"32\":1}}],[\"different\",{\"0\":{\"277\":1,\"282\":1,\"283\":1,\"284\":1,\"285\":1},\"1\":{\"32\":1,\"64\":2,\"128\":1,\"144\":1,\"172\":1,\"177\":1,\"259\":1,\"269\":2,\"277\":1,\"286\":1,\"298\":1}}],[\"difficult\",{\"1\":{\"36\":1,\"40\":1}}],[\"dynamically\",{\"1\":{\"273\":2}}],[\"dynamic\",{\"1\":{\"29\":2,\"78\":1,\"170\":1,\"173\":1,\"273\":1,\"288\":1}}],[\"duke\",{\"1\":{\"226\":1}}],[\"duplication\",{\"1\":{\"263\":1}}],[\"duplicates\",{\"0\":{\"242\":1}}],[\"duplicated\",{\"1\":{\"139\":1}}],[\"duplicate\",{\"1\":{\"26\":1,\"152\":4,\"157\":2,\"267\":3}}],[\"duplex\",{\"1\":{\"149\":1}}],[\"during\",{\"1\":{\"38\":1,\"41\":1,\"53\":1,\"132\":1,\"133\":3,\"136\":2,\"140\":1,\"149\":1,\"152\":1,\"158\":1,\"160\":1,\"161\":1,\"194\":1,\"269\":3,\"273\":1,\"292\":1}}],[\"due\",{\"1\":{\"21\":1,\"121\":1,\"139\":1,\"200\":1,\"217\":1}}],[\"dozens\",{\"1\":{\"180\":1}}],[\"docker\",{\"0\":{\"179\":1,\"180\":1,\"181\":1,\"182\":1},\"1\":{\"180\":1,\"181\":12,\"182\":18}}],[\"documentation\",{\"1\":{\"196\":2,\"200\":5,\"201\":1,\"205\":4,\"206\":1,\"210\":2}}],[\"document\",{\"1\":{\"132\":1,\"136\":1}}],[\"dos\",{\"1\":{\"173\":1}}],[\"domains\",{\"1\":{\"168\":1}}],[\"domain\",{\"1\":{\"165\":6,\"166\":12,\"168\":5}}],[\"doubling\",{\"1\":{\"156\":1}}],[\"double\",{\"1\":{\"149\":1,\"155\":1}}],[\"dotted\",{\"1\":{\"143\":1}}],[\"do\",{\"1\":{\"139\":1,\"173\":1,\"278\":1,\"286\":1,\"288\":1,\"302\":1}}],[\"download\",{\"1\":{\"187\":1,\"191\":1}}],[\"down\",{\"1\":{\"128\":1,\"181\":1}}],[\"does\",{\"0\":{\"150\":1,\"276\":1},\"1\":{\"52\":1,\"131\":1,\"132\":1,\"139\":2,\"152\":1,\"156\":1,\"160\":2,\"172\":1,\"173\":1,\"196\":3,\"228\":1,\"269\":1}}],[\"doesn\",{\"1\":{\"8\":1,\"19\":1,\"32\":2,\"43\":1,\"163\":1,\"166\":1,\"217\":1,\"276\":1}}],[\"doe\",{\"1\":{\"21\":2,\"22\":2}}],[\"done\",{\"1\":{\"38\":1,\"42\":4,\"43\":5,\"120\":1,\"125\":1,\"126\":1}}],[\"don\",{\"1\":{\"9\":1,\"14\":1,\"140\":1,\"263\":1}}],[\"deep\",{\"0\":{\"286\":1},\"1\":{\"286\":6}}],[\"dereference\",{\"1\":{\"272\":1}}],[\"derived\",{\"0\":{\"121\":1,\"123\":1},\"1\":{\"121\":3,\"123\":1,\"124\":1}}],[\"demo\",{\"1\":{\"208\":1}}],[\"demand\",{\"1\":{\"181\":1}}],[\"debugs\",{\"1\":{\"194\":1}}],[\"debugging\",{\"1\":{\"193\":7,\"194\":6}}],[\"debugger\",{\"1\":{\"193\":2,\"194\":4}}],[\"debug\",{\"1\":{\"193\":1,\"194\":3}}],[\"denial\",{\"1\":{\"168\":3,\"173\":1}}],[\"denied\",{\"1\":{\"137\":1}}],[\"dedicated\",{\"1\":{\"163\":1}}],[\"deduplicate\",{\"1\":{\"151\":1}}],[\"depend\",{\"1\":{\"286\":1}}],[\"dependency\",{\"0\":{\"189\":1},\"1\":{\"200\":1}}],[\"dependencies\",{\"1\":{\"180\":2,\"196\":1,\"200\":1}}],[\"depending\",{\"1\":{\"152\":1}}],[\"deployment\",{\"1\":{\"181\":3}}],[\"deployed\",{\"1\":{\"180\":1,\"181\":1}}],[\"deploy\",{\"1\":{\"173\":1}}],[\"deploying\",{\"1\":{\"163\":1}}],[\"deprecated\",{\"1\":{\"140\":6}}],[\"degradation\",{\"1\":{\"168\":1}}],[\"degraded\",{\"1\":{\"32\":1}}],[\"degrade\",{\"1\":{\"32\":3}}],[\"degree\",{\"1\":{\"147\":1}}],[\"deadline\",{\"1\":{\"120\":3}}],[\"deadlock\",{\"1\":{\"117\":1}}],[\"delivery\",{\"1\":{\"159\":1,\"170\":1,\"181\":1}}],[\"delivered\",{\"1\":{\"139\":1,\"140\":1,\"151\":1}}],[\"delayed\",{\"1\":{\"152\":1}}],[\"delay\",{\"1\":{\"42\":2,\"152\":1}}],[\"deleting\",{\"0\":{\"100\":1,\"215\":1,\"222\":1},\"1\":{\"258\":1,\"259\":1}}],[\"deleted\",{\"0\":{\"302\":1},\"1\":{\"302\":2}}],[\"deleteoneid\",{\"1\":{\"215\":1}}],[\"deletes\",{\"1\":{\"131\":1}}],[\"delete\",{\"0\":{\"296\":1},\"1\":{\"37\":2,\"100\":4,\"131\":2,\"184\":3,\"217\":1,\"222\":1,\"296\":3}}],[\"delegated\",{\"1\":{\"16\":1}}],[\"detailed\",{\"1\":{\"205\":1}}],[\"details\",{\"1\":{\"16\":1,\"149\":3,\"152\":3,\"175\":1,\"214\":1,\"286\":1}}],[\"detect\",{\"1\":{\"161\":1,\"163\":1}}],[\"detects\",{\"1\":{\"156\":1}}],[\"detection\",{\"1\":{\"129\":1}}],[\"determined\",{\"1\":{\"288\":1}}],[\"determine\",{\"1\":{\"32\":1,\"95\":2,\"114\":1,\"142\":1,\"149\":1,\"170\":1,\"172\":1,\"291\":1}}],[\"decline\",{\"1\":{\"163\":1}}],[\"declare\",{\"1\":{\"41\":1,\"49\":2,\"51\":2,\"52\":1,\"56\":3,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"79\":1,\"98\":1,\"105\":1,\"279\":2}}],[\"declared\",{\"1\":{\"17\":1,\"51\":1}}],[\"declaring\",{\"0\":{\"41\":1},\"1\":{\"18\":1,\"37\":1,\"51\":1}}],[\"declaration\",{\"0\":{\"50\":1},\"1\":{\"5\":1,\"49\":1,\"79\":1,\"98\":1}}],[\"declarations\",{\"0\":{\"5\":1,\"6\":1,\"14\":1},\"1\":{\"5\":2,\"6\":1,\"11\":1}}],[\"decreased\",{\"1\":{\"163\":1}}],[\"decreases\",{\"1\":{\"140\":1}}],[\"decrement\",{\"1\":{\"84\":1}}],[\"decrypt\",{\"1\":{\"134\":3,\"137\":1}}],[\"decrypted\",{\"1\":{\"133\":1,\"137\":1}}],[\"decryption\",{\"1\":{\"133\":1,\"136\":2,\"225\":1}}],[\"decimal\",{\"1\":{\"73\":1,\"143\":1,\"277\":2}}],[\"decode\",{\"1\":{\"18\":2}}],[\"desc\",{\"1\":{\"212\":1}}],[\"descriptive\",{\"1\":{\"167\":1}}],[\"descriptions\",{\"1\":{\"140\":1,\"194\":1}}],[\"description\",{\"1\":{\"31\":1,\"32\":2,\"72\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"131\":1,\"132\":1,\"140\":4,\"147\":1,\"161\":1,\"162\":1,\"163\":1,\"167\":1,\"168\":1,\"171\":1,\"182\":1,\"184\":1,\"192\":4,\"193\":1,\"194\":1,\"225\":1,\"228\":1,\"245\":1,\"249\":1,\"251\":1,\"269\":1}}],[\"describe\",{\"1\":{\"10\":1}}],[\"design\",{\"1\":{\"210\":1,\"217\":1}}],[\"designed\",{\"1\":{\"200\":1,\"205\":1}}],[\"desired\",{\"1\":{\"16\":1}}],[\"destination\",{\"1\":{\"139\":1,\"140\":2,\"147\":1,\"161\":2,\"163\":1,\"171\":9}}],[\"deserialization\",{\"1\":{\"41\":1}}],[\"defend\",{\"1\":{\"173\":1}}],[\"defenses\",{\"1\":{\"163\":1}}],[\"defense\",{\"1\":{\"163\":2}}],[\"defers\",{\"0\":{\"290\":1}}],[\"defergo\",{\"1\":{\"49\":1}}],[\"defer\",{\"1\":{\"40\":1,\"42\":2,\"43\":2,\"69\":6,\"290\":3}}],[\"defaults\",{\"1\":{\"244\":1}}],[\"default\",{\"1\":{\"22\":1,\"52\":1,\"64\":5,\"115\":4,\"125\":1,\"126\":1,\"133\":2,\"149\":1,\"172\":2,\"198\":1,\"269\":1}}],[\"defaultuser\",{\"1\":{\"15\":2}}],[\"defaultport\",{\"1\":{\"15\":2}}],[\"define\",{\"1\":{\"54\":1,\"55\":6,\"81\":1,\"119\":1,\"193\":1,\"210\":1,\"272\":1,\"279\":2}}],[\"defines\",{\"1\":{\"32\":1,\"128\":1}}],[\"defined\",{\"1\":{\"14\":1,\"136\":1,\"245\":1}}],[\"definition\",{\"1\":{\"14\":1,\"133\":1,\"200\":2,\"201\":1,\"205\":2,\"206\":1,\"269\":1,\"279\":2}}],[\"definitions\",{\"1\":{\"11\":1,\"26\":1,\"217\":1}}],[\"defining\",{\"0\":{\"26\":1},\"1\":{\"9\":1,\"26\":1}}],[\"devgit\",{\"1\":{\"184\":4}}],[\"device\",{\"1\":{\"170\":1,\"172\":3,\"173\":3}}],[\"devices\",{\"1\":{\"128\":1,\"163\":1,\"168\":1,\"170\":1,\"172\":4,\"173\":3,\"175\":1,\"177\":2,\"178\":1}}],[\"dev\",{\"0\":{\"2\":1},\"1\":{\"184\":8}}],[\"developer\",{\"1\":{\"217\":2}}],[\"developers\",{\"1\":{\"1\":1,\"180\":1,\"181\":1,\"187\":1,\"188\":1,\"191\":1,\"196\":4,\"200\":3,\"205\":2,\"210\":1,\"217\":1,\"224\":1}}],[\"development\",{\"0\":{\"27\":1},\"1\":{\"1\":2,\"180\":1,\"181\":5,\"187\":2,\"191\":1,\"192\":1,\"196\":1,\"200\":4,\"203\":1,\"205\":3,\"224\":1}}],[\"octal\",{\"1\":{\"277\":1}}],[\"occupy\",{\"1\":{\"292\":1}}],[\"occupied\",{\"0\":{\"284\":1}}],[\"occupies\",{\"0\":{\"284\":2},\"1\":{\"140\":1,\"250\":1,\"284\":4}}],[\"occur\",{\"1\":{\"147\":1,\"269\":2,\"278\":1}}],[\"occurred\",{\"1\":{\"132\":2}}],[\"occurs\",{\"1\":{\"40\":1,\"156\":1}}],[\"o\",{\"1\":{\"250\":1,\"258\":1,\"259\":3}}],[\"oderwat\",{\"1\":{\"192\":2}}],[\"owner\",{\"1\":{\"136\":1,\"137\":2}}],[\"own\",{\"1\":{\"134\":1,\"149\":4,\"172\":1,\"173\":2,\"194\":1}}],[\"obtain\",{\"1\":{\"149\":1,\"165\":1,\"172\":1,\"274\":1}}],[\"obtains\",{\"1\":{\"137\":2,\"166\":1,\"172\":1}}],[\"obtaining\",{\"1\":{\"134\":3,\"165\":1}}],[\"obtained\",{\"1\":{\"133\":2,\"137\":2}}],[\"objects\",{\"0\":{\"274\":1},\"1\":{\"274\":2}}],[\"object\",{\"1\":{\"96\":1,\"194\":2,\"279\":2}}],[\"overflows\",{\"1\":{\"291\":1}}],[\"overflow\",{\"0\":{\"291\":1},\"1\":{\"291\":3}}],[\"overwhelm\",{\"1\":{\"163\":1}}],[\"overhead\",{\"1\":{\"135\":1,\"196\":1,\"200\":1,\"210\":1}}],[\"over\",{\"0\":{\"46\":1},\"1\":{\"46\":1,\"141\":2,\"196\":1,\"225\":1}}],[\"op\",{\"1\":{\"171\":1}}],[\"optionally\",{\"1\":{\"279\":1}}],[\"option\",{\"1\":{\"140\":2,\"147\":1,\"152\":1}}],[\"options\",{\"1\":{\"131\":2,\"140\":3,\"147\":1,\"196\":1,\"217\":1}}],[\"optimizer\",{\"1\":{\"217\":1}}],[\"optimization\",{\"0\":{\"45\":1},\"1\":{\"264\":1}}],[\"optimizing\",{\"1\":{\"38\":1}}],[\"operate\",{\"1\":{\"180\":2,\"302\":1}}],[\"operating\",{\"1\":{\"134\":1,\"181\":1}}],[\"operations\",{\"0\":{\"35\":1},\"1\":{\"35\":2,\"67\":1,\"103\":1,\"163\":1,\"217\":1,\"225\":3,\"258\":1,\"259\":2,\"292\":1}}],[\"operation\",{\"1\":{\"5\":4,\"32\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"115\":1,\"149\":2,\"171\":2,\"259\":1,\"296\":2}}],[\"operator\",{\"1\":{\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"245\":1,\"272\":2}}],[\"operators\",{\"0\":{\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1},\"1\":{\"272\":1}}],[\"openonfirstsessionstart\",{\"1\":{\"194\":1}}],[\"openonsessionstart\",{\"1\":{\"194\":1}}],[\"open\",{\"1\":{\"29\":3,\"31\":1,\"40\":2,\"159\":1,\"163\":7,\"180\":1,\"181\":2,\"189\":1,\"191\":1,\"205\":1}}],[\"our\",{\"1\":{\"31\":2,\"42\":1}}],[\"outfiles\",{\"1\":{\"194\":1}}],[\"output\",{\"1\":{\"79\":1,\"94\":2,\"95\":4,\"96\":1,\"194\":1,\"226\":1,\"272\":3,\"284\":1,\"286\":1,\"294\":1,\"295\":1,\"296\":1}}],[\"out\",{\"1\":{\"69\":1,\"125\":2,\"147\":2,\"149\":1,\"152\":1,\"163\":2,\"196\":1,\"290\":1}}],[\"outside\",{\"0\":{\"26\":1},\"1\":{\"26\":1,\"81\":1}}],[\"outer\",{\"0\":{\"234\":1,\"237\":1},\"1\":{\"16\":1,\"237\":2}}],[\"omitted\",{\"1\":{\"51\":1}}],[\"omit\",{\"0\":{\"22\":1},\"1\":{\"22\":1}}],[\"ok\",{\"1\":{\"16\":3,\"33\":3,\"101\":4,\"114\":2,\"120\":1,\"132\":2}}],[\"otherwise\",{\"1\":{\"43\":1,\"85\":6,\"86\":2,\"166\":1}}],[\"other\",{\"0\":{\"89\":1},\"1\":{\"16\":3,\"32\":2,\"35\":1,\"40\":1,\"42\":1,\"120\":1,\"128\":1,\"129\":1,\"132\":2,\"136\":1,\"139\":1,\"140\":2,\"144\":1,\"147\":1,\"149\":3,\"152\":1,\"168\":2,\"172\":1,\"173\":1,\"175\":1,\"180\":1,\"192\":1,\"196\":1,\"228\":1,\"235\":1,\"236\":1,\"237\":1,\"263\":1,\"267\":2,\"269\":2,\"279\":1,\"286\":1}}],[\"others\",{\"0\":{\"280\":1},\"1\":{\"11\":1}}],[\"offer\",{\"1\":{\"205\":1}}],[\"offers\",{\"1\":{\"196\":1,\"200\":1,\"217\":2,\"225\":1}}],[\"offering\",{\"1\":{\"187\":1,\"200\":1,\"205\":1,\"224\":1}}],[\"offload\",{\"1\":{\"163\":1}}],[\"offset\",{\"1\":{\"140\":2,\"141\":2,\"142\":2,\"147\":1,\"244\":1}}],[\"official\",{\"1\":{\"103\":1,\"159\":1}}],[\"often\",{\"1\":{\"29\":1,\"111\":1,\"247\":1,\"263\":1,\"269\":2}}],[\"of\",{\"0\":{\"19\":1,\"29\":1,\"34\":1,\"102\":1,\"150\":1,\"177\":1,\"178\":1,\"197\":1,\"211\":1,\"218\":1,\"265\":1,\"290\":1,\"300\":1,\"302\":1},\"1\":{\"7\":1,\"9\":1,\"11\":1,\"14\":2,\"16\":9,\"17\":2,\"24\":1,\"25\":1,\"26\":1,\"29\":1,\"31\":5,\"36\":1,\"38\":2,\"39\":2,\"42\":1,\"49\":1,\"53\":1,\"56\":2,\"58\":3,\"60\":2,\"64\":1,\"65\":1,\"69\":3,\"70\":1,\"75\":2,\"77\":3,\"79\":3,\"80\":2,\"81\":3,\"89\":1,\"95\":1,\"98\":3,\"102\":1,\"106\":2,\"107\":4,\"108\":2,\"113\":1,\"119\":1,\"121\":1,\"124\":1,\"128\":5,\"132\":4,\"134\":2,\"135\":4,\"136\":9,\"137\":9,\"139\":2,\"140\":18,\"141\":5,\"143\":3,\"144\":3,\"147\":14,\"149\":3,\"150\":1,\"151\":1,\"152\":15,\"153\":1,\"155\":1,\"156\":3,\"157\":1,\"161\":1,\"162\":1,\"163\":12,\"165\":1,\"166\":2,\"167\":1,\"168\":5,\"170\":4,\"171\":9,\"172\":11,\"173\":11,\"176\":2,\"177\":3,\"178\":3,\"180\":2,\"181\":4,\"187\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"196\":4,\"200\":5,\"205\":1,\"210\":2,\"217\":3,\"224\":2,\"228\":4,\"229\":3,\"237\":3,\"245\":1,\"247\":2,\"250\":4,\"251\":6,\"258\":6,\"259\":8,\"263\":11,\"264\":1,\"266\":4,\"267\":14,\"269\":11,\"272\":1,\"273\":5,\"274\":1,\"276\":3,\"277\":1,\"278\":3,\"279\":3,\"282\":2,\"283\":1,\"285\":1,\"286\":6,\"288\":2,\"289\":1,\"292\":5,\"294\":1,\"300\":2,\"302\":1}}],[\"ordinary\",{\"0\":{\"253\":1},\"1\":{\"251\":2,\"259\":1,\"272\":2}}],[\"ordered\",{\"0\":{\"300\":1},\"1\":{\"258\":1,\"300\":1}}],[\"orderliness\",{\"1\":{\"162\":1}}],[\"order\",{\"0\":{\"243\":1,\"290\":1},\"1\":{\"11\":1,\"38\":1,\"44\":1,\"69\":1,\"135\":1,\"140\":1,\"152\":1,\"226\":1,\"243\":1,\"251\":2,\"258\":2,\"259\":2,\"267\":1,\"290\":1,\"300\":1}}],[\"ordering\",{\"0\":{\"11\":1},\"1\":{\"11\":1}}],[\"orm\",{\"1\":{\"217\":2}}],[\"origin\",{\"1\":{\"184\":4}}],[\"original\",{\"1\":{\"1\":1,\"30\":1,\"131\":1,\"132\":2,\"140\":1,\"273\":1,\"292\":2}}],[\"oriented\",{\"1\":{\"146\":1,\"159\":1,\"162\":1}}],[\"or\",{\"0\":{\"40\":1,\"246\":1,\"292\":1,\"300\":1},\"1\":{\"9\":2,\"11\":1,\"12\":1,\"17\":1,\"29\":2,\"30\":1,\"32\":1,\"35\":1,\"40\":3,\"41\":1,\"56\":1,\"69\":2,\"72\":1,\"76\":1,\"85\":2,\"87\":1,\"93\":1,\"121\":1,\"129\":1,\"131\":1,\"132\":4,\"134\":1,\"135\":1,\"136\":3,\"139\":1,\"140\":3,\"141\":1,\"143\":2,\"147\":2,\"152\":3,\"154\":1,\"158\":1,\"160\":1,\"161\":1,\"163\":1,\"166\":1,\"168\":2,\"170\":1,\"171\":3,\"173\":1,\"180\":2,\"181\":3,\"182\":1,\"184\":1,\"194\":5,\"196\":1,\"228\":2,\"245\":3,\"246\":3,\"249\":1,\"250\":1}}],[\"organizations\",{\"1\":{\"136\":1}}],[\"org\",{\"1\":{\"7\":4}}],[\"ospf\",{\"1\":{\"129\":1}}],[\"osi\",{\"0\":{\"128\":1},\"1\":{\"128\":1,\"129\":1,\"159\":1}}],[\"os\",{\"1\":{\"7\":2,\"18\":4,\"40\":7}}],[\"online\",{\"1\":{\"136\":2}}],[\"only\",{\"1\":{\"35\":1,\"40\":1,\"43\":1,\"53\":1,\"55\":1,\"131\":1,\"132\":3,\"135\":1,\"136\":1,\"147\":1,\"152\":1,\"161\":1,\"162\":2,\"163\":1,\"172\":1,\"173\":1,\"180\":1,\"194\":2,\"228\":2,\"233\":2,\"235\":1,\"236\":1,\"237\":2,\"244\":1,\"249\":3,\"251\":1,\"259\":1,\"263\":1,\"267\":5,\"276\":1,\"283\":1,\"285\":2,\"286\":1}}],[\"once\",{\"1\":{\"51\":1,\"75\":1,\"77\":1,\"142\":1,\"160\":1,\"258\":1}}],[\"one\",{\"1\":{\"35\":1,\"43\":1,\"64\":1,\"67\":1,\"94\":1,\"108\":1,\"135\":2,\"139\":1,\"140\":1,\"162\":6,\"163\":2,\"196\":1,\"200\":2,\"205\":2,\"217\":1,\"228\":2,\"250\":1,\"273\":1}}],[\"ones\",{\"0\":{\"5\":1}}],[\"on\",{\"1\":{\"1\":1,\"2\":1,\"56\":1,\"64\":1,\"72\":1,\"78\":1,\"88\":1,\"113\":1,\"128\":4,\"129\":1,\"132\":2,\"135\":1,\"136\":1,\"137\":1,\"140\":1,\"142\":1,\"143\":1,\"152\":4,\"153\":2,\"162\":3,\"163\":3,\"168\":1,\"170\":1,\"171\":1,\"172\":2,\"173\":1,\"176\":1,\"180\":2,\"181\":3,\"189\":2,\"194\":2,\"196\":1,\"200\":3,\"205\":3,\"224\":2,\"233\":1,\"235\":1,\"236\":1,\"237\":4,\"251\":3,\"253\":1,\"254\":1,\"256\":1,\"261\":1,\"262\":1,\"263\":1,\"266\":1,\"267\":2,\"286\":1,\"288\":1,\"296\":2}}],[\"mvcc\",{\"1\":{\"269\":3}}],[\"mx\",{\"1\":{\"167\":1}}],[\"ms\",{\"1\":{\"192\":1}}],[\"mss\",{\"1\":{\"147\":1}}],[\"msg\",{\"1\":{\"26\":4}}],[\"mf\",{\"1\":{\"140\":2,\"141\":2}}],[\"mtu\",{\"1\":{\"129\":1,\"141\":6}}],[\"mtx\",{\"1\":{\"16\":1}}],[\"m\",{\"1\":{\"25\":7,\"53\":2,\"60\":2,\"79\":4,\"98\":5,\"184\":1,\"266\":3,\"279\":1,\"287\":2,\"291\":3,\"294\":2,\"295\":2,\"296\":2}}],[\"migrations\",{\"1\":{\"217\":1}}],[\"might\",{\"1\":{\"43\":1}}],[\"microservice\",{\"0\":{\"203\":1,\"208\":1},\"1\":{\"200\":2,\"205\":5}}],[\"microservices\",{\"1\":{\"200\":5,\"203\":1,\"205\":1}}],[\"microsoft\",{\"1\":{\"191\":1,\"192\":1}}],[\"middleware\",{\"1\":{\"196\":3}}],[\"middlename\",{\"1\":{\"22\":1}}],[\"miss\",{\"1\":{\"173\":3}}],[\"missing\",{\"1\":{\"132\":1,\"152\":3}}],[\"mitigate\",{\"1\":{\"163\":3}}],[\"min\",{\"1\":{\"249\":1}}],[\"minutes\",{\"1\":{\"172\":1}}],[\"minus\",{\"1\":{\"141\":1}}],[\"minimizing\",{\"1\":{\"163\":1}}],[\"minimize\",{\"0\":{\"13\":1,\"34\":1},\"1\":{\"18\":1}}],[\"minimal\",{\"1\":{\"163\":1,\"196\":1}}],[\"minimum\",{\"1\":{\"140\":1,\"161\":1,\"249\":1}}],[\"mike\",{\"1\":{\"105\":1}}],[\"mix\",{\"1\":{\"16\":1,\"36\":1}}],[\"members\",{\"1\":{\"302\":1}}],[\"memory\",{\"0\":{\"302\":1},\"1\":{\"47\":1,\"81\":1,\"109\":1,\"196\":2,\"200\":1,\"273\":9,\"274\":1,\"286\":2,\"287\":1,\"292\":1}}],[\"medium\",{\"0\":{\"297\":1}}],[\"media\",{\"1\":{\"129\":1,\"170\":1}}],[\"meet\",{\"1\":{\"237\":1,\"264\":1,\"273\":1}}],[\"meets\",{\"1\":{\"225\":1,\"248\":1,\"264\":1}}],[\"merging\",{\"1\":{\"225\":2}}],[\"merge\",{\"1\":{\"184\":3}}],[\"measurement\",{\"1\":{\"152\":1}}],[\"measure\",{\"1\":{\"140\":1,\"152\":1,\"163\":1}}],[\"mean\",{\"0\":{\"276\":1}}],[\"means\",{\"1\":{\"69\":1,\"113\":2,\"137\":1,\"139\":1,\"147\":1,\"173\":1,\"259\":1,\"269\":4}}],[\"meaning\",{\"1\":{\"132\":2,\"170\":1,\"269\":1}}],[\"meaningless\",{\"1\":{\"10\":1}}],[\"meaningful\",{\"1\":{\"9\":1,\"128\":1}}],[\"mechanisms\",{\"1\":{\"152\":1,\"225\":1}}],[\"mechanism\",{\"1\":{\"43\":1,\"151\":1,\"152\":4,\"163\":1,\"180\":1,\"299\":1}}],[\"meta\",{\"1\":{\"132\":1}}],[\"metrics\",{\"1\":{\"32\":2}}],[\"method\",{\"1\":{\"16\":2,\"42\":1,\"92\":1,\"100\":1,\"109\":1,\"119\":1,\"131\":1,\"152\":2,\"163\":1,\"173\":1,\"279\":4,\"298\":1}}],[\"methods\",{\"0\":{\"131\":1,\"173\":1},\"1\":{\"16\":4,\"38\":1,\"120\":1,\"131\":3,\"224\":1,\"233\":1,\"279\":1,\"301\":1}}],[\"messages\",{\"1\":{\"32\":1,\"147\":1,\"149\":1,\"172\":1,\"173\":8}}],[\"message\",{\"1\":{\"29\":2,\"114\":1,\"132\":3,\"134\":2,\"147\":1,\"156\":1,\"159\":1,\"173\":5,\"198\":1}}],[\"morris\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"more\",{\"1\":{\"12\":1,\"69\":1,\"128\":1,\"140\":1,\"141\":2,\"152\":1,\"162\":1,\"163\":2,\"192\":1,\"193\":1,\"217\":1,\"250\":1,\"267\":1,\"286\":1,\"292\":1}}],[\"moved\",{\"1\":{\"132\":4}}],[\"module\",{\"1\":{\"225\":1}}],[\"modulus\",{\"1\":{\"84\":1}}],[\"mode\",{\"1\":{\"194\":4,\"217\":2}}],[\"models\",{\"1\":{\"210\":1}}],[\"model\",{\"0\":{\"128\":1,\"129\":1},\"1\":{\"129\":3,\"159\":1,\"160\":1,\"210\":1,\"217\":2,\"220\":1}}],[\"mod\",{\"1\":{\"189\":1}}],[\"modifications\",{\"1\":{\"292\":1}}],[\"modification\",{\"1\":{\"173\":1,\"188\":1,\"292\":1}}],[\"modified\",{\"1\":{\"75\":1,\"77\":1,\"132\":4,\"141\":1,\"161\":1,\"170\":1,\"173\":1,\"269\":1}}],[\"modifiers\",{\"0\":{\"68\":1},\"1\":{\"49\":1}}],[\"modifying\",{\"1\":{\"269\":1}}],[\"modify\",{\"1\":{\"49\":1,\"53\":2,\"75\":1,\"81\":1,\"137\":1,\"141\":1,\"173\":1,\"188\":1,\"273\":2}}],[\"monday\",{\"1\":{\"64\":1}}],[\"most\",{\"1\":{\"8\":1,\"9\":1,\"149\":1,\"249\":1,\"251\":1,\"263\":4}}],[\"made\",{\"1\":{\"292\":1}}],[\"magical\",{\"1\":{\"269\":1}}],[\"maxuint8\",{\"1\":{\"291\":1}}],[\"maxint8\",{\"1\":{\"291\":1}}],[\"maximum\",{\"1\":{\"140\":1,\"141\":2,\"147\":1,\"163\":2,\"249\":1,\"291\":1}}],[\"max\",{\"1\":{\"249\":1}}],[\"master\",{\"1\":{\"200\":1}}],[\"mastering\",{\"1\":{\"183\":1}}],[\"mac\",{\"1\":{\"170\":7,\"171\":9,\"172\":11,\"173\":1}}],[\"machines\",{\"1\":{\"180\":2,\"181\":1,\"192\":1}}],[\"machine\",{\"0\":{\"148\":1},\"1\":{\"180\":1}}],[\"mail\",{\"1\":{\"167\":1}}],[\"mainclass\",{\"1\":{\"194\":1}}],[\"maintenance\",{\"1\":{\"178\":1,\"181\":2,\"200\":1,\"205\":1,\"258\":1,\"259\":1,\"263\":1}}],[\"maintained\",{\"1\":{\"258\":1,\"259\":1}}],[\"maintains\",{\"1\":{\"172\":1}}],[\"maintaining\",{\"1\":{\"128\":1,\"210\":1}}],[\"main\",{\"0\":{\"40\":1,\"225\":1},\"1\":{\"40\":4,\"43\":1,\"64\":2,\"66\":2,\"67\":2,\"69\":4,\"70\":2,\"75\":2,\"78\":2,\"93\":2,\"94\":2,\"95\":2,\"96\":2,\"99\":2,\"100\":2,\"101\":2,\"105\":2,\"107\":2,\"108\":2,\"109\":2,\"116\":2,\"123\":2,\"125\":2,\"126\":2,\"178\":1,\"198\":2,\"226\":2,\"251\":1,\"277\":1,\"278\":3,\"279\":2,\"286\":4,\"287\":4,\"289\":2,\"290\":2,\"291\":2,\"294\":2,\"295\":2,\"296\":2}}],[\"mainly\",{\"1\":{\"1\":1,\"128\":2,\"131\":2,\"136\":2,\"152\":1,\"172\":1,\"175\":1,\"188\":1,\"239\":1,\"248\":1,\"264\":1,\"269\":2,\"272\":1,\"287\":1}}],[\"maliciously\",{\"1\":{\"173\":1}}],[\"malicious\",{\"1\":{\"163\":3,\"173\":1}}],[\"male\",{\"1\":{\"51\":1}}],[\"marketplace\",{\"1\":{\"192\":8}}],[\"mark\",{\"1\":{\"152\":1}}],[\"marshal\",{\"1\":{\"41\":2}}],[\"mathematical\",{\"1\":{\"225\":1}}],[\"mathutil\",{\"1\":{\"225\":1}}],[\"math\",{\"1\":{\"53\":4,\"231\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"279\":1,\"291\":3}}],[\"matches\",{\"1\":{\"96\":1,\"134\":1,\"245\":1}}],[\"matching\",{\"1\":{\"29\":1,\"30\":1,\"233\":1}}],[\"match\",{\"1\":{\"8\":1,\"31\":2,\"32\":3,\"263\":2}}],[\"man\",{\"1\":{\"279\":4}}],[\"manipulate\",{\"1\":{\"273\":1}}],[\"manipulation\",{\"1\":{\"188\":2,\"225\":2}}],[\"mandatory\",{\"1\":{\"147\":1}}],[\"manual\",{\"1\":{\"143\":2,\"200\":1}}],[\"manually\",{\"1\":{\"126\":2,\"196\":1,\"301\":1}}],[\"manner\",{\"1\":{\"132\":1}}],[\"manage\",{\"1\":{\"192\":2}}],[\"managed\",{\"1\":{\"119\":1,\"170\":4}}],[\"management\",{\"1\":{\"36\":1,\"119\":1,\"196\":1}}],[\"many\",{\"1\":{\"40\":1,\"160\":2,\"200\":1,\"217\":3,\"263\":3}}],[\"major\",{\"1\":{\"34\":1}}],[\"making\",{\"1\":{\"31\":2,\"36\":1,\"173\":1,\"181\":1,\"188\":1,\"196\":1,\"210\":3}}],[\"makes\",{\"1\":{\"192\":2,\"210\":1,\"269\":1}}],[\"makefile\",{\"1\":{\"188\":4}}],[\"make\",{\"1\":{\"17\":2,\"25\":5,\"34\":1,\"37\":2,\"39\":2,\"40\":1,\"42\":2,\"43\":1,\"58\":2,\"60\":2,\"67\":2,\"79\":2,\"98\":4,\"99\":1,\"100\":1,\"101\":1,\"105\":2,\"107\":1,\"109\":1,\"112\":3,\"128\":1,\"140\":1,\"178\":1,\"188\":1,\"286\":2,\"287\":2,\"294\":1}}],[\"maputil\",{\"1\":{\"225\":1}}],[\"mapped\",{\"1\":{\"171\":1}}],[\"mappings\",{\"1\":{\"194\":1}}],[\"mapping\",{\"1\":{\"79\":1,\"98\":1,\"165\":1,\"172\":1,\"176\":1,\"194\":2}}],[\"map\",{\"0\":{\"47\":1,\"79\":2,\"97\":1,\"98\":1,\"99\":1,\"102\":1,\"293\":1,\"294\":1,\"295\":1,\"296\":1,\"300\":1,\"301\":1,\"302\":1},\"1\":{\"25\":6,\"60\":7,\"79\":7,\"82\":1,\"98\":9,\"99\":5,\"100\":7,\"101\":3,\"102\":1,\"103\":1,\"217\":1,\"225\":1,\"274\":1,\"279\":2,\"287\":3,\"294\":2,\"295\":2,\"296\":3,\"300\":2,\"301\":2,\"302\":4}}],[\"mapsliceschan\",{\"1\":{\"302\":1}}],[\"maps\",{\"0\":{\"25\":1},\"1\":{\"103\":1,\"225\":2,\"274\":1,\"279\":2}}],[\"may\",{\"1\":{\"16\":2,\"32\":1,\"33\":1,\"36\":1,\"40\":2,\"44\":1,\"120\":1,\"133\":1,\"139\":1,\"152\":3,\"200\":2,\"205\":1,\"258\":1,\"259\":1,\"269\":6}}],[\"mysql\",{\"1\":{\"210\":1,\"244\":1,\"258\":1,\"259\":1,\"263\":1,\"264\":3,\"269\":2}}],[\"myerror\",{\"1\":{\"14\":9}}],[\"my\",{\"1\":{\"5\":2}}],[\"murphy\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"music\",{\"1\":{\"231\":1,\"233\":2,\"235\":2,\"236\":2,\"237\":2}}],[\"must\",{\"1\":{\"1\":1,\"34\":1,\"51\":1,\"117\":1,\"132\":2,\"135\":1,\"140\":1,\"141\":1,\"147\":1,\"196\":2,\"247\":1,\"251\":2,\"278\":1}}],[\"much\",{\"1\":{\"192\":1,\"267\":1}}],[\"mutual\",{\"1\":{\"175\":1}}],[\"mutex\",{\"1\":{\"16\":3}}],[\"multicast\",{\"1\":{\"162\":2,\"170\":1}}],[\"multi\",{\"1\":{\"53\":1,\"193\":1,\"210\":1,\"251\":1,\"266\":1,\"269\":1}}],[\"multiplied\",{\"1\":{\"229\":1}}],[\"multiplication\",{\"1\":{\"84\":1}}],[\"multiplexing\",{\"1\":{\"135\":1}}],[\"multiple\",{\"0\":{\"290\":1},\"1\":{\"36\":1,\"43\":1,\"51\":1,\"52\":1,\"53\":1,\"56\":2,\"67\":2,\"94\":2,\"95\":1,\"96\":1,\"108\":1,\"115\":2,\"119\":2,\"120\":1,\"132\":3,\"135\":3,\"136\":1,\"163\":4,\"181\":1,\"191\":1,\"200\":1,\"217\":1,\"228\":2,\"237\":1,\"245\":1,\"251\":1,\"266\":1,\"269\":1,\"277\":1}}],[\"multiply\",{\"1\":{\"5\":2}}],[\"www\",{\"1\":{\"132\":1}}],[\"wrote\",{\"1\":{\"181\":1}}],[\"writing\",{\"1\":{\"217\":1,\"224\":1,\"225\":1,\"250\":1}}],[\"written\",{\"1\":{\"170\":1,\"196\":1,\"205\":1}}],[\"writefile\",{\"1\":{\"18\":2}}],[\"writecloser\",{\"1\":{\"16\":2}}],[\"write\",{\"1\":{\"16\":6,\"32\":1,\"59\":1,\"152\":1,\"153\":1,\"172\":1,\"217\":1,\"263\":1,\"298\":1,\"301\":1}}],[\"wrap\",{\"1\":{\"30\":2,\"32\":2}}],[\"wrapping\",{\"0\":{\"30\":1},\"1\":{\"19\":1}}],[\"wg\",{\"1\":{\"16\":1,\"43\":4}}],[\"wan\",{\"1\":{\"175\":3}}],[\"wants\",{\"1\":{\"132\":1}}],[\"wanterror\",{\"1\":{\"19\":2}}],[\"want\",{\"1\":{\"14\":1,\"64\":1,\"109\":1,\"285\":1,\"302\":1}}],[\"was\",{\"1\":{\"94\":1,\"132\":2,\"149\":1,\"264\":2,\"269\":1}}],[\"ways\",{\"1\":{\"93\":1,\"105\":1}}],[\"way\",{\"0\":{\"149\":1},\"1\":{\"74\":1,\"105\":3,\"136\":1,\"149\":7,\"152\":1,\"163\":3,\"266\":1,\"279\":1}}],[\"waits\",{\"1\":{\"152\":1,\"163\":1}}],[\"waiting\",{\"0\":{\"43\":1},\"1\":{\"194\":1}}],[\"wait\",{\"1\":{\"42\":2,\"43\":4,\"67\":1}}],[\"waitgroup\",{\"1\":{\"16\":2,\"43\":2}}],[\"warning\",{\"1\":{\"30\":1,\"42\":1,\"112\":1,\"114\":1,\"125\":1,\"134\":1,\"140\":1,\"153\":1,\"162\":1,\"228\":1,\"232\":1,\"237\":1,\"263\":1,\"269\":1}}],[\"w\",{\"1\":{\"16\":3,\"30\":2,\"32\":3}}],[\"why\",{\"0\":{\"181\":1,\"273\":1},\"1\":{\"149\":3}}],[\"what\",{\"0\":{\"144\":1,\"272\":1,\"276\":1,\"278\":1,\"279\":1,\"281\":1,\"286\":1,\"287\":1,\"288\":1,\"290\":1,\"291\":1,\"295\":1,\"296\":1,\"298\":1},\"1\":{\"149\":3,\"152\":3,\"163\":2,\"172\":2,\"180\":1,\"286\":3,\"289\":1}}],[\"white\",{\"1\":{\"279\":1}}],[\"while\",{\"1\":{\"30\":1,\"40\":1,\"46\":1,\"124\":1,\"163\":1,\"180\":1,\"217\":1,\"272\":1,\"288\":1}}],[\"which\",{\"0\":{\"274\":2},\"1\":{\"16\":1,\"51\":2,\"53\":1,\"77\":1,\"80\":1,\"132\":3,\"136\":1,\"139\":2,\"149\":1,\"152\":3,\"166\":1,\"170\":1,\"173\":1,\"177\":1,\"180\":1,\"200\":1,\"205\":1,\"251\":2,\"259\":2,\"264\":1,\"269\":3,\"276\":1,\"278\":1,\"292\":1}}],[\"wheel\",{\"1\":{\"224\":1}}],[\"whether\",{\"1\":{\"95\":2,\"114\":1,\"134\":4,\"149\":1,\"160\":2,\"161\":1,\"172\":1,\"194\":1,\"248\":1,\"264\":1,\"291\":1}}],[\"where\",{\"0\":{\"245\":1},\"1\":{\"29\":2,\"79\":1,\"98\":1,\"172\":2,\"194\":1,\"214\":2,\"229\":1,\"237\":4,\"245\":8,\"246\":3,\"248\":2,\"266\":1}}],[\"when\",{\"1\":{\"8\":1,\"9\":2,\"17\":2,\"19\":1,\"21\":1,\"24\":1,\"25\":1,\"26\":1,\"29\":1,\"32\":1,\"33\":1,\"36\":1,\"37\":1,\"38\":4,\"42\":1,\"43\":2,\"44\":1,\"46\":1,\"51\":1,\"105\":1,\"112\":1,\"117\":1,\"121\":1,\"132\":2,\"140\":1,\"141\":2,\"147\":4,\"152\":3,\"153\":1,\"156\":2,\"157\":1,\"163\":3,\"166\":1,\"173\":1,\"176\":5,\"237\":2,\"258\":1,\"259\":2,\"263\":4,\"269\":1,\"273\":1,\"288\":1,\"289\":1,\"291\":1,\"300\":1}}],[\"won\",{\"1\":{\"36\":1}}],[\"world\",{\"1\":{\"63\":1,\"64\":2,\"69\":2,\"133\":1,\"276\":3}}],[\"workload\",{\"1\":{\"217\":1}}],[\"working\",{\"0\":{\"134\":1,\"172\":1,\"176\":1},\"1\":{\"132\":1,\"193\":1,\"194\":1,\"225\":4,\"264\":1}}],[\"workspacefolder\",{\"1\":{\"194\":8}}],[\"works\",{\"0\":{\"137\":1},\"1\":{\"128\":1}}],[\"work\",{\"1\":{\"16\":1}}],[\"words\",{\"1\":{\"10\":1,\"279\":1}}],[\"word\",{\"1\":{\"8\":1}}],[\"would\",{\"1\":{\"14\":1,\"264\":1,\"296\":1}}],[\"wildcards\",{\"1\":{\"245\":1}}],[\"willing\",{\"1\":{\"147\":1}}],[\"will\",{\"0\":{\"289\":1,\"302\":1},\"1\":{\"1\":1,\"32\":2,\"40\":1,\"42\":1,\"51\":1,\"53\":1,\"60\":1,\"64\":1,\"67\":2,\"75\":1,\"109\":1,\"112\":2,\"114\":2,\"115\":1,\"121\":2,\"132\":4,\"134\":1,\"136\":1,\"139\":1,\"140\":1,\"141\":2,\"144\":1,\"149\":5,\"152\":7,\"153\":1,\"155\":1,\"156\":4,\"157\":1,\"158\":1,\"160\":1,\"166\":10,\"172\":10,\"173\":3,\"176\":4,\"178\":1,\"189\":1,\"237\":4,\"259\":4,\"263\":2,\"264\":1,\"269\":1,\"278\":1,\"279\":1,\"286\":3,\"288\":1,\"289\":1,\"291\":3,\"292\":6,\"294\":1,\"295\":1,\"296\":1,\"298\":1,\"302\":2}}],[\"window\",{\"1\":{\"147\":2,\"153\":3,\"154\":1}}],[\"windows\",{\"1\":{\"4\":1}}],[\"widely\",{\"1\":{\"160\":1,\"196\":1}}],[\"wide\",{\"1\":{\"133\":1,\"136\":1,\"175\":1,\"217\":1}}],[\"withcancel\",{\"0\":{\"126\":1},\"1\":{\"126\":2}}],[\"withtimeout\",{\"0\":{\"125\":1},\"1\":{\"125\":3}}],[\"withdeadline\",{\"0\":{\"125\":1},\"1\":{\"125\":2}}],[\"withvalue\",{\"0\":{\"124\":1},\"1\":{\"123\":11,\"124\":1}}],[\"withxxx\",{\"1\":{\"123\":1}}],[\"without\",{\"1\":{\"17\":1,\"53\":1,\"135\":1,\"152\":1,\"163\":1,\"165\":1,\"200\":1,\"205\":1,\"224\":1,\"228\":1,\"269\":1,\"273\":1,\"292\":1}}],[\"within\",{\"1\":{\"5\":1,\"7\":1,\"11\":1,\"18\":1,\"38\":1,\"81\":1,\"134\":1,\"152\":1,\"166\":1,\"173\":1,\"180\":1,\"181\":1,\"192\":1,\"193\":1,\"245\":1,\"269\":2,\"283\":1,\"292\":1}}],[\"with\",{\"0\":{\"16\":1,\"22\":1,\"23\":1},\"1\":{\"5\":1,\"7\":1,\"11\":1,\"16\":1,\"17\":1,\"30\":1,\"31\":3,\"32\":1,\"38\":1,\"60\":2,\"64\":1,\"65\":1,\"72\":2,\"74\":1,\"87\":2,\"107\":1,\"109\":2,\"125\":1,\"129\":1,\"131\":1,\"132\":2,\"133\":1,\"134\":2,\"140\":1,\"141\":2,\"144\":2,\"147\":1,\"152\":1,\"153\":1,\"157\":1,\"162\":2,\"163\":3,\"168\":2,\"170\":1,\"172\":1,\"173\":2,\"180\":1,\"181\":3,\"196\":1,\"200\":3,\"205\":1,\"210\":3,\"217\":2,\"221\":1,\"225\":4,\"228\":2,\"245\":2,\"247\":1,\"258\":1,\"259\":1,\"264\":1,\"266\":1,\"267\":1,\"276\":1,\"286\":1}}],[\"well\",{\"1\":{\"181\":1,\"187\":1,\"200\":1}}],[\"welcome\",{\"1\":{\"1\":1}}],[\"wealth\",{\"1\":{\"181\":1,\"187\":1,\"191\":1,\"224\":1}}],[\"websocket\",{\"1\":{\"196\":2}}],[\"website\",{\"1\":{\"136\":1,\"165\":2}}],[\"websites\",{\"1\":{\"136\":2}}],[\"web\",{\"0\":{\"198\":1},\"1\":{\"133\":1,\"136\":1,\"196\":6}}],[\"wednesday\",{\"1\":{\"64\":1}}],[\"weights\",{\"1\":{\"11\":2}}],[\"we\",{\"1\":{\"1\":1,\"14\":2,\"30\":1,\"32\":1,\"42\":1,\"53\":2,\"88\":1,\"93\":1,\"95\":1,\"96\":1,\"109\":1,\"112\":1,\"114\":1,\"115\":1,\"121\":1,\"152\":2,\"177\":1,\"232\":1,\"245\":1,\"250\":1,\"263\":3,\"264\":1,\"273\":3,\"286\":1,\"298\":1,\"302\":2}}],[\"ptr\",{\"1\":{\"272\":3}}],[\"pythonpath\",{\"1\":{\"194\":1}}],[\"python\",{\"1\":{\"193\":1,\"194\":4}}],[\"phantom\",{\"1\":{\"168\":2,\"269\":5}}],[\"phase\",{\"1\":{\"155\":1}}],[\"phone\",{\"1\":{\"160\":1,\"225\":1}}],[\"physical\",{\"0\":{\"257\":1},\"1\":{\"128\":2,\"129\":3,\"251\":2,\"258\":1,\"259\":1}}],[\"ps\",{\"1\":{\"182\":2}}],[\"psh\",{\"1\":{\"147\":1}}],[\"pseudorandom\",{\"1\":{\"134\":1}}],[\"ping\",{\"1\":{\"163\":1,\"198\":1}}],[\"pip\",{\"1\":{\"140\":1}}],[\"pieces\",{\"1\":{\"108\":1}}],[\"piece\",{\"1\":{\"108\":1}}],[\"pki\",{\"1\":{\"136\":1}}],[\"ppp\",{\"1\":{\"129\":1}}],[\"persistent\",{\"1\":{\"135\":2}}],[\"personal\",{\"1\":{\"136\":1}}],[\"person\",{\"1\":{\"61\":1}}],[\"period\",{\"1\":{\"134\":1,\"137\":2,\"173\":1}}],[\"permanently\",{\"1\":{\"132\":3}}],[\"performs\",{\"1\":{\"163\":1,\"200\":1}}],[\"performance\",{\"0\":{\"45\":1},\"1\":{\"39\":1,\"163\":2,\"168\":1,\"178\":2,\"196\":3,\"200\":1,\"210\":2,\"217\":2,\"269\":1}}],[\"performing\",{\"1\":{\"33\":1,\"296\":2}}],[\"perform\",{\"1\":{\"26\":1,\"64\":1,\"69\":1,\"70\":1,\"168\":1}}],[\"p1\",{\"1\":{\"52\":1}}],[\"p\",{\"1\":{\"52\":4,\"87\":4,\"140\":1}}],[\"play\",{\"1\":{\"273\":1}}],[\"platform\",{\"1\":{\"180\":1,\"181\":1}}],[\"platforms\",{\"1\":{\"163\":1}}],[\"plaintext\",{\"1\":{\"134\":4}}],[\"places\",{\"1\":{\"259\":1}}],[\"placed\",{\"1\":{\"141\":1}}],[\"place\",{\"1\":{\"11\":1,\"300\":1,\"302\":1}}],[\"plugin\",{\"1\":{\"188\":3,\"192\":4,\"217\":1}}],[\"plugins\",{\"0\":{\"188\":1,\"192\":1},\"1\":{\"187\":1,\"191\":1,\"200\":2,\"205\":1}}],[\"pluggable\",{\"1\":{\"38\":1}}],[\"plurals\",{\"1\":{\"9\":1}}],[\"polymorphism\",{\"1\":{\"217\":1}}],[\"pong\",{\"1\":{\"198\":1}}],[\"powerful\",{\"1\":{\"187\":1,\"192\":1,\"210\":1,\"217\":2}}],[\"popular\",{\"1\":{\"180\":1,\"196\":1,\"217\":1}}],[\"poisoning\",{\"1\":{\"168\":1}}],[\"pointed\",{\"1\":{\"147\":1}}],[\"pointer\",{\"0\":{\"81\":1,\"271\":1,\"272\":2,\"292\":1},\"1\":{\"16\":3,\"24\":1,\"81\":1,\"82\":1,\"89\":1,\"147\":3,\"225\":3,\"272\":1,\"274\":1,\"286\":2,\"287\":1,\"292\":3}}],[\"pointers\",{\"0\":{\"24\":1,\"81\":1,\"273\":1},\"1\":{\"16\":1,\"81\":2,\"225\":1,\"267\":6,\"272\":1,\"273\":8,\"274\":2}}],[\"pointing\",{\"1\":{\"113\":1}}],[\"point\",{\"0\":{\"73\":1},\"1\":{\"73\":2,\"74\":1,\"134\":1,\"162\":2,\"193\":1,\"194\":1,\"217\":1,\"269\":1}}],[\"points\",{\"1\":{\"1\":1,\"193\":1,\"217\":1}}],[\"portability\",{\"1\":{\"181\":1}}],[\"portable\",{\"1\":{\"180\":1}}],[\"ports\",{\"1\":{\"163\":1}}],[\"port\",{\"1\":{\"133\":3,\"147\":4,\"161\":4,\"163\":1,\"176\":3}}],[\"postgresql\",{\"1\":{\"210\":1,\"244\":1}}],[\"postdebugtask\",{\"1\":{\"194\":1}}],[\"post\",{\"1\":{\"131\":2,\"132\":1}}],[\"positive\",{\"1\":{\"72\":2,\"147\":1,\"291\":1}}],[\"position\",{\"1\":{\"66\":1,\"140\":1,\"250\":1}}],[\"possible\",{\"1\":{\"10\":1,\"147\":1,\"245\":1,\"267\":1}}],[\"padding\",{\"1\":{\"225\":1}}],[\"padded\",{\"1\":{\"87\":2}}],[\"pauses\",{\"1\":{\"194\":1}}],[\"pause\",{\"1\":{\"193\":1}}],[\"passing\",{\"1\":{\"273\":1,\"288\":1,\"292\":2}}],[\"pass\",{\"1\":{\"140\":1,\"273\":1}}],[\"password\",{\"1\":{\"136\":1}}],[\"passes\",{\"1\":{\"134\":1,\"140\":2,\"152\":1,\"155\":1,\"156\":1}}],[\"passed\",{\"1\":{\"128\":1,\"288\":2,\"292\":1}}],[\"packet\",{\"0\":{\"171\":1},\"1\":{\"128\":1,\"140\":13,\"141\":4,\"147\":6,\"149\":1,\"152\":12,\"157\":1,\"163\":2,\"168\":1,\"171\":7,\"176\":5}}],[\"packets\",{\"1\":{\"128\":1,\"129\":1,\"139\":2,\"140\":2,\"151\":2,\"152\":11}}],[\"package\",{\"0\":{\"9\":1},\"1\":{\"8\":3,\"9\":2,\"29\":2,\"31\":2,\"35\":1,\"38\":2,\"46\":2,\"53\":3,\"54\":2,\"64\":1,\"66\":1,\"67\":1,\"69\":2,\"70\":1,\"75\":1,\"78\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"99\":1,\"100\":1,\"101\":1,\"105\":1,\"107\":1,\"108\":1,\"109\":1,\"116\":1,\"123\":1,\"125\":1,\"126\":1,\"180\":1,\"189\":1,\"198\":1,\"226\":1,\"286\":2,\"287\":2,\"289\":1,\"290\":1,\"291\":1,\"294\":1,\"295\":1,\"296\":1}}],[\"packages\",{\"1\":{\"7\":1,\"9\":1,\"16\":1,\"53\":3,\"180\":1}}],[\"pair\",{\"1\":{\"100\":2,\"136\":1,\"137\":1}}],[\"pairs\",{\"0\":{\"100\":1},\"1\":{\"60\":1,\"99\":2}}],[\"payload\",{\"1\":{\"141\":1}}],[\"pay\",{\"0\":{\"42\":1}}],[\"parent\",{\"1\":{\"124\":1}}],[\"parentheses\",{\"1\":{\"56\":1,\"90\":1}}],[\"parameter\",{\"1\":{\"52\":1,\"193\":1,\"288\":1}}],[\"parameters\",{\"0\":{\"292\":1},\"1\":{\"52\":2,\"193\":1,\"217\":1,\"288\":1}}],[\"parsing\",{\"1\":{\"41\":1,\"137\":1,\"225\":1}}],[\"participate\",{\"1\":{\"140\":1}}],[\"parties\",{\"1\":{\"133\":2,\"137\":1}}],[\"partial\",{\"1\":{\"131\":1,\"132\":2}}],[\"part\",{\"1\":{\"31\":2,\"74\":1,\"132\":1}}],[\"party\",{\"1\":{\"7\":2,\"147\":1}}],[\"panic\",{\"1\":{\"16\":3,\"29\":1,\"33\":2,\"34\":3,\"37\":2,\"40\":2,\"114\":1,\"295\":2,\"296\":1}}],[\"pattern\",{\"1\":{\"245\":1}}],[\"patterns\",{\"1\":{\"7\":2,\"163\":1}}],[\"patch\",{\"1\":{\"131\":2}}],[\"paths\",{\"1\":{\"194\":2}}],[\"path\",{\"1\":{\"8\":1,\"31\":2,\"40\":6,\"79\":2,\"98\":2,\"140\":5,\"194\":1}}],[\"pushdown\",{\"0\":{\"264\":1},\"1\":{\"264\":4}}],[\"push\",{\"1\":{\"135\":1,\"184\":5}}],[\"put\",{\"1\":{\"131\":3}}],[\"public\",{\"0\":{\"36\":1},\"1\":{\"31\":2,\"36\":1,\"53\":1,\"56\":2,\"134\":3,\"136\":4,\"137\":6,\"177\":1}}],[\"publisher\",{\"1\":{\"192\":4}}],[\"publish\",{\"1\":{\"1\":1}}],[\"purposes\",{\"1\":{\"136\":1}}],[\"purpose\",{\"1\":{\"10\":1,\"16\":1,\"128\":1,\"134\":1,\"149\":3,\"152\":1,\"224\":1}}],[\"pull\",{\"1\":{\"1\":1,\"182\":2,\"184\":2}}],[\"practices\",{\"1\":{\"200\":4,\"205\":1}}],[\"practical\",{\"1\":{\"188\":1}}],[\"preload\",{\"1\":{\"217\":1}}],[\"preloading\",{\"1\":{\"217\":3}}],[\"prelaunchtask\",{\"1\":{\"194\":2}}],[\"previous\",{\"1\":{\"135\":1,\"147\":1,\"149\":1,\"152\":1,\"184\":1}}],[\"prevents\",{\"1\":{\"163\":1}}],[\"preventing\",{\"1\":{\"133\":1,\"173\":3,\"177\":1}}],[\"prevent\",{\"1\":{\"40\":2,\"163\":1,\"269\":1,\"300\":1}}],[\"pre\",{\"1\":{\"134\":1,\"140\":1,\"250\":1}}],[\"presentation\",{\"1\":{\"128\":1,\"129\":1}}],[\"preserved\",{\"1\":{\"162\":2}}],[\"preserve\",{\"1\":{\"30\":1}}],[\"preceded\",{\"1\":{\"279\":1}}],[\"precedence\",{\"0\":{\"90\":1},\"1\":{\"90\":2}}],[\"precompiled\",{\"1\":{\"217\":1}}],[\"precomputed\",{\"1\":{\"38\":1}}],[\"precautions\",{\"0\":{\"117\":1}}],[\"prematurely\",{\"1\":{\"43\":1}}],[\"predictable\",{\"1\":{\"42\":1}}],[\"predefined\",{\"1\":{\"29\":1}}],[\"preallocate\",{\"0\":{\"39\":1},\"1\":{\"47\":1}}],[\"prefix\",{\"0\":{\"15\":1},\"1\":{\"263\":7}}],[\"preferable\",{\"1\":{\"40\":1}}],[\"prefer\",{\"0\":{\"46\":1},\"1\":{\"6\":1,\"19\":1,\"46\":1,\"263\":1}}],[\"primarily\",{\"1\":{\"172\":1}}],[\"primary\",{\"0\":{\"255\":1},\"1\":{\"163\":1,\"166\":1,\"217\":1,\"228\":10,\"251\":2,\"255\":1,\"258\":1}}],[\"priority\",{\"1\":{\"147\":1}}],[\"priorities\",{\"1\":{\"143\":1}}],[\"price\",{\"1\":{\"41\":5}}],[\"principle\",{\"0\":{\"134\":1,\"172\":1,\"176\":1},\"1\":{\"163\":1,\"263\":3,\"264\":1}}],[\"principles\",{\"0\":{\"27\":1,\"263\":1},\"1\":{\"210\":2}}],[\"print\",{\"1\":{\"37\":2,\"98\":1,\"99\":6,\"115\":1,\"272\":1}}],[\"println\",{\"1\":{\"18\":2,\"37\":2,\"40\":2,\"63\":2,\"64\":11,\"65\":5,\"66\":2,\"67\":2,\"69\":3,\"70\":3,\"78\":1,\"79\":1,\"80\":1,\"93\":1,\"94\":2,\"95\":4,\"96\":1,\"98\":1,\"99\":3,\"100\":2,\"101\":4,\"105\":1,\"106\":1,\"107\":1,\"108\":3,\"109\":2,\"115\":4,\"116\":2,\"123\":4,\"125\":2,\"126\":2,\"226\":1,\"272\":3,\"277\":3,\"278\":2,\"286\":6,\"287\":5,\"289\":1,\"290\":3,\"291\":2,\"294\":1}}],[\"printf\",{\"0\":{\"26\":1},\"1\":{\"12\":2,\"26\":3,\"32\":2,\"75\":1,\"99\":3,\"284\":1}}],[\"private\",{\"1\":{\"7\":1,\"56\":2,\"134\":1,\"136\":2,\"137\":2,\"175\":2}}],[\"prs\",{\"1\":{\"1\":1}}],[\"product\",{\"1\":{\"229\":6}}],[\"production\",{\"1\":{\"34\":1,\"180\":1,\"181\":4,\"196\":1}}],[\"prometheus\",{\"1\":{\"217\":1}}],[\"promptly\",{\"1\":{\"1\":1}}],[\"proxies\",{\"1\":{\"163\":1}}],[\"proxy\",{\"1\":{\"132\":5,\"163\":1,\"172\":6}}],[\"prohibited\",{\"1\":{\"162\":1}}],[\"prohibits\",{\"1\":{\"132\":1}}],[\"proves\",{\"1\":{\"137\":1}}],[\"providers\",{\"1\":{\"166\":1}}],[\"provide\",{\"1\":{\"32\":2,\"42\":1,\"140\":1,\"163\":1,\"200\":1}}],[\"provided\",{\"1\":{\"16\":1,\"35\":1,\"132\":1,\"194\":1}}],[\"provides\",{\"1\":{\"1\":2,\"46\":1,\"92\":1,\"93\":1,\"128\":2,\"129\":1,\"136\":1,\"159\":1,\"191\":1,\"196\":2,\"200\":1,\"205\":2,\"206\":1,\"210\":1,\"217\":1,\"224\":1,\"225\":2}}],[\"providing\",{\"1\":{\"16\":1,\"132\":1,\"133\":1,\"143\":2,\"163\":3,\"201\":1,\"224\":1}}],[\"protection\",{\"1\":{\"136\":1,\"163\":3}}],[\"protecting\",{\"1\":{\"136\":1,\"163\":1}}],[\"protect\",{\"1\":{\"136\":1}}],[\"protocols\",{\"1\":{\"128\":1,\"132\":2,\"139\":1}}],[\"protocol\",{\"1\":{\"128\":5,\"129\":1,\"132\":1,\"133\":1,\"134\":1,\"139\":2,\"140\":9,\"142\":1,\"146\":2,\"149\":1,\"152\":1,\"159\":2,\"160\":1,\"162\":1,\"168\":1,\"170\":2,\"171\":8,\"172\":10,\"175\":2,\"177\":3,\"178\":1}}],[\"problems\",{\"1\":{\"117\":1,\"128\":1,\"140\":1,\"152\":1,\"181\":1,\"269\":1,\"292\":1}}],[\"problem\",{\"1\":{\"103\":1,\"152\":1,\"177\":1}}],[\"propagation\",{\"1\":{\"155\":1,\"156\":1}}],[\"propagated\",{\"1\":{\"40\":1}}],[\"properties\",{\"1\":{\"279\":2}}],[\"proper\",{\"1\":{\"30\":1}}],[\"programs\",{\"1\":{\"193\":1}}],[\"programmer\",{\"1\":{\"183\":1}}],[\"programming\",{\"1\":{\"35\":1,\"193\":1}}],[\"program\",{\"0\":{\"40\":1},\"1\":{\"40\":6,\"43\":1,\"44\":2,\"49\":2,\"70\":1,\"163\":2,\"193\":2,\"194\":11,\"273\":4}}],[\"pros\",{\"1\":{\"16\":2,\"196\":2,\"200\":2,\"205\":2,\"210\":1,\"217\":2}}],[\"processed\",{\"1\":{\"132\":4}}],[\"processing\",{\"1\":{\"132\":2,\"133\":1,\"225\":1}}],[\"process\",{\"0\":{\"166\":1},\"1\":{\"12\":2,\"38\":1,\"128\":1,\"132\":1,\"133\":1,\"134\":2,\"136\":1,\"137\":2,\"141\":1,\"149\":3,\"165\":1,\"176\":1,\"193\":1}}],[\"pr\",{\"1\":{\"1\":2}}],[\"hutool\",{\"1\":{\"224\":1}}],[\"hundreds\",{\"1\":{\"180\":1}}],[\"h\",{\"1\":{\"198\":1}}],[\"hybrid\",{\"1\":{\"163\":1}}],[\"hypertext\",{\"1\":{\"133\":2}}],[\"hpack\",{\"1\":{\"135\":1}}],[\"hint\",{\"1\":{\"192\":1,\"217\":1}}],[\"hints\",{\"1\":{\"192\":1}}],[\"history\",{\"1\":{\"184\":1}}],[\"hijacking\",{\"1\":{\"168\":1}}],[\"highest\",{\"1\":{\"269\":1}}],[\"higher\",{\"1\":{\"32\":3,\"132\":1,\"200\":1}}],[\"highly\",{\"1\":{\"196\":1,\"217\":1}}],[\"highlight\",{\"1\":{\"188\":1}}],[\"high\",{\"1\":{\"90\":1,\"147\":2,\"152\":1,\"173\":1,\"258\":1,\"263\":3}}],[\"hi\",{\"1\":{\"75\":1}}],[\"home\",{\"1\":{\"175\":1}}],[\"honeynets\",{\"1\":{\"163\":2}}],[\"honeypots\",{\"1\":{\"163\":2}}],[\"how\",{\"0\":{\"137\":1,\"150\":1},\"1\":{\"142\":1,\"163\":3,\"173\":1,\"194\":1,\"291\":1,\"302\":1}}],[\"however\",{\"1\":{\"6\":1,\"8\":1,\"38\":1,\"163\":1}}],[\"holder\",{\"1\":{\"137\":4}}],[\"hold\",{\"1\":{\"134\":1,\"278\":2}}],[\"hosts\",{\"1\":{\"144\":1,\"162\":4,\"163\":1,\"166\":1,\"172\":3,\"177\":3}}],[\"host\",{\"1\":{\"128\":1,\"144\":3,\"162\":1,\"167\":2,\"172\":18,\"173\":3,\"176\":3,\"180\":1,\"181\":2}}],[\"hooks\",{\"1\":{\"210\":1,\"217\":1}}],[\"hook\",{\"1\":{\"38\":1}}],[\"harder\",{\"1\":{\"205\":1}}],[\"hard\",{\"1\":{\"184\":1}}],[\"hardware\",{\"1\":{\"170\":3,\"171\":8}}],[\"had\",{\"1\":{\"181\":1,\"264\":1}}],[\"hallucination\",{\"1\":{\"269\":1}}],[\"halves\",{\"1\":{\"157\":1}}],[\"half\",{\"1\":{\"156\":1,\"163\":7}}],[\"happens\",{\"0\":{\"295\":1,\"296\":1},\"1\":{\"149\":1,\"163\":1}}],[\"handshake\",{\"0\":{\"149\":1},\"1\":{\"147\":1,\"149\":6,\"160\":1,\"163\":2}}],[\"handling\",{\"0\":{\"28\":1,\"32\":1,\"91\":1},\"1\":{\"29\":1,\"32\":2,\"40\":1,\"163\":2,\"217\":1,\"225\":2,\"298\":1}}],[\"handles\",{\"1\":{\"225\":3}}],[\"handled\",{\"1\":{\"32\":1}}],[\"handle\",{\"1\":{\"12\":1,\"29\":1,\"32\":3,\"33\":1,\"34\":1,\"163\":1,\"180\":1,\"196\":1}}],[\"having\",{\"1\":{\"135\":1,\"247\":2}}],[\"have\",{\"0\":{\"277\":1,\"298\":1},\"1\":{\"1\":1,\"22\":1,\"42\":1,\"43\":1,\"136\":1,\"152\":3,\"173\":1,\"228\":3,\"263\":2,\"269\":1,\"276\":1,\"288\":1,\"289\":1}}],[\"hasn\",{\"1\":{\"294\":1}}],[\"hash\",{\"1\":{\"60\":1,\"137\":1,\"300\":2}}],[\"has\",{\"1\":{\"16\":1,\"25\":1,\"42\":1,\"49\":1,\"69\":1,\"109\":1,\"114\":1,\"132\":11,\"139\":1,\"147\":3,\"149\":2,\"152\":1,\"157\":1,\"160\":2,\"175\":1,\"178\":1,\"181\":1,\"200\":3,\"205\":2,\"210\":1,\"217\":2,\"251\":1,\"266\":1,\"269\":3,\"276\":1,\"299\":1}}],[\"https\",{\"0\":{\"133\":1},\"1\":{\"133\":5,\"134\":4,\"192\":4}}],[\"http1\",{\"1\":{\"132\":2}}],[\"http\",{\"0\":{\"130\":1,\"132\":1,\"133\":1,\"135\":1},\"1\":{\"8\":1,\"16\":2,\"128\":1,\"129\":1,\"131\":3,\"132\":1,\"133\":6,\"135\":4,\"225\":2}}],[\"height\",{\"1\":{\"267\":4,\"279\":4}}],[\"hexadecimal\",{\"1\":{\"143\":1,\"277\":1}}],[\"heavy\",{\"1\":{\"217\":1}}],[\"heavyweight\",{\"1\":{\"162\":1}}],[\"heavier\",{\"1\":{\"46\":1}}],[\"head~1\",{\"1\":{\"184\":1}}],[\"head^\",{\"1\":{\"184\":1}}],[\"headers\",{\"1\":{\"135\":1}}],[\"header\",{\"0\":{\"147\":1},\"1\":{\"131\":1,\"132\":2,\"135\":1,\"140\":6,\"141\":3,\"143\":1,\"147\":7,\"153\":1,\"161\":1,\"162\":1,\"171\":2}}],[\"head\",{\"1\":{\"131\":2,\"135\":1}}],[\"hello\",{\"1\":{\"51\":1,\"63\":1,\"64\":1,\"69\":2,\"276\":3}}],[\"helps\",{\"1\":{\"4\":1,\"26\":1,\"193\":1}}],[\"help\",{\"1\":{\"1\":1,\"136\":2,\"187\":1,\"188\":1,\"191\":1,\"192\":2}}],[\"here\",{\"1\":{\"7\":1,\"16\":1,\"61\":1,\"132\":1,\"187\":1,\"191\":1,\"285\":1}}],[\"square\",{\"1\":{\"225\":1}}],[\"sqlite\",{\"1\":{\"210\":1}}],[\"sql\",{\"1\":{\"38\":1,\"217\":3,\"230\":1}}],[\"scenario\",{\"1\":{\"298\":1}}],[\"schema\",{\"1\":{\"210\":2}}],[\"scalability\",{\"1\":{\"181\":1}}],[\"scale\",{\"1\":{\"163\":1,\"181\":1}}],[\"scanned\",{\"1\":{\"263\":1}}],[\"scans\",{\"1\":{\"173\":1}}],[\"scan\",{\"1\":{\"173\":1}}],[\"scope\",{\"0\":{\"18\":1},\"1\":{\"18\":2}}],[\"ssh\",{\"1\":{\"192\":1}}],[\"ssthresh\",{\"1\":{\"154\":4,\"155\":1,\"156\":2,\"157\":2}}],[\"ssl\",{\"1\":{\"133\":1,\"136\":1}}],[\"snapshot\",{\"1\":{\"269\":1}}],[\"snhp\",{\"1\":{\"129\":1}}],[\"snippets\",{\"1\":{\"7\":1,\"16\":1}}],[\"small\",{\"1\":{\"200\":1,\"205\":1}}],[\"smaller\",{\"1\":{\"4\":1,\"141\":1,\"200\":1,\"205\":1}}],[\"smartstep\",{\"1\":{\"194\":1}}],[\"smtp\",{\"1\":{\"129\":1}}],[\"skipfiles\",{\"1\":{\"194\":1}}],[\"skips\",{\"1\":{\"194\":1}}],[\"skip\",{\"1\":{\"65\":1}}],[\"switches\",{\"1\":{\"132\":1}}],[\"switching\",{\"1\":{\"132\":3}}],[\"switch\",{\"1\":{\"64\":3,\"128\":1,\"132\":1,\"184\":3}}],[\"swap\",{\"1\":{\"35\":1}}],[\"swapint32\",{\"1\":{\"35\":1}}],[\"slower\",{\"1\":{\"267\":1}}],[\"slowly\",{\"1\":{\"168\":1}}],[\"slow\",{\"1\":{\"133\":1,\"154\":4,\"155\":1,\"156\":1,\"162\":1,\"168\":1}}],[\"sliding\",{\"1\":{\"153\":1}}],[\"slip\",{\"1\":{\"129\":1}}],[\"slicing\",{\"0\":{\"106\":1},\"1\":{\"225\":1}}],[\"slice2\",{\"1\":{\"286\":14}}],[\"slice1\",{\"1\":{\"286\":11}}],[\"slicemapchannelsinterfacesfunctions\",{\"1\":{\"286\":1}}],[\"slice\",{\"0\":{\"17\":1,\"39\":1,\"47\":1},\"1\":{\"17\":4,\"39\":2,\"82\":1,\"106\":2,\"107\":3,\"109\":2,\"225\":1,\"279\":1,\"286\":3,\"288\":1,\"292\":2}}],[\"slices\",{\"0\":{\"78\":2,\"104\":1,\"105\":1,\"106\":1,\"109\":1,\"288\":1},\"1\":{\"6\":1,\"17\":1,\"78\":1,\"105\":1,\"109\":2,\"225\":1,\"274\":1,\"279\":3,\"286\":1,\"287\":1,\"288\":2}}],[\"sleep\",{\"1\":{\"42\":1,\"70\":1,\"125\":2,\"126\":3}}],[\"saving\",{\"1\":{\"269\":1}}],[\"saved\",{\"1\":{\"217\":1}}],[\"save\",{\"1\":{\"166\":1,\"176\":1,\"177\":1,\"217\":2,\"273\":2}}],[\"satisfy\",{\"1\":{\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"saturday\",{\"1\":{\"64\":2}}],[\"sanchez\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"sandboxing\",{\"1\":{\"181\":1}}],[\"sandbox\",{\"1\":{\"180\":1}}],[\"sample\",{\"1\":{\"230\":3}}],[\"same\",{\"0\":{\"277\":1,\"289\":1},\"1\":{\"11\":1,\"16\":1,\"18\":1,\"56\":2,\"67\":1,\"109\":3,\"115\":2,\"134\":1,\"137\":2,\"171\":1,\"172\":4,\"233\":1,\"258\":1,\"266\":1,\"267\":5,\"269\":4}}],[\"sack\",{\"1\":{\"152\":9}}],[\"safely\",{\"1\":{\"160\":1}}],[\"safe\",{\"0\":{\"299\":1,\"301\":1},\"1\":{\"41\":1,\"103\":1,\"299\":1}}],[\"safety\",{\"1\":{\"35\":1,\"210\":1,\"301\":2}}],[\"sport\",{\"1\":{\"231\":1,\"236\":1,\"237\":1}}],[\"spoofing\",{\"0\":{\"144\":1},\"1\":{\"144\":1,\"168\":1,\"173\":1}}],[\"space\",{\"1\":{\"210\":1,\"250\":1,\"258\":1,\"259\":2,\"263\":1,\"273\":1,\"286\":1,\"292\":1}}],[\"speaking\",{\"1\":{\"292\":1}}],[\"spending\",{\"1\":{\"200\":1,\"205\":1,\"224\":1}}],[\"speed\",{\"1\":{\"133\":1,\"147\":1,\"153\":1,\"162\":1,\"250\":2,\"251\":2,\"267\":4}}],[\"specifies\",{\"1\":{\"140\":2,\"149\":1,\"194\":3,\"245\":1}}],[\"specified\",{\"1\":{\"66\":1,\"131\":2,\"132\":1,\"139\":1,\"140\":2,\"244\":1}}],[\"specification\",{\"1\":{\"159\":1}}],[\"specifications\",{\"0\":{\"2\":1}}],[\"specific\",{\"0\":{\"241\":1},\"1\":{\"16\":1,\"32\":1,\"131\":1,\"152\":1,\"162\":1,\"163\":1,\"184\":1,\"193\":1,\"217\":1,\"267\":2,\"276\":1}}],[\"specifying\",{\"1\":{\"149\":1}}],[\"specify\",{\"0\":{\"47\":1},\"1\":{\"14\":1,\"51\":1}}],[\"special\",{\"1\":{\"9\":1,\"12\":1,\"16\":1,\"49\":2,\"251\":1,\"276\":1}}],[\"sprintf\",{\"1\":{\"31\":2}}],[\"sptr\",{\"1\":{\"24\":3}}],[\"symmetric\",{\"1\":{\"134\":8}}],[\"symbols\",{\"0\":{\"89\":1}}],[\"symbol\",{\"0\":{\"90\":1},\"1\":{\"24\":1,\"41\":1}}],[\"syn=1\",{\"1\":{\"147\":1,\"149\":1}}],[\"syn\",{\"1\":{\"147\":2,\"149\":9,\"163\":20}}],[\"syntax\",{\"1\":{\"128\":1,\"188\":1}}],[\"synchronize\",{\"1\":{\"149\":2}}],[\"synchronizing\",{\"1\":{\"149\":1}}],[\"sync\",{\"1\":{\"7\":2,\"16\":5,\"35\":1,\"43\":2,\"103\":1,\"301\":1}}],[\"systems\",{\"1\":{\"128\":1,\"159\":1,\"160\":1}}],[\"system\",{\"1\":{\"72\":1,\"134\":1,\"147\":1,\"165\":1,\"166\":1,\"180\":1,\"181\":1,\"225\":3}}],[\"shielding\",{\"1\":{\"178\":1}}],[\"shift\",{\"1\":{\"87\":2}}],[\"shows\",{\"1\":{\"277\":1}}],[\"showasyncstacks\",{\"1\":{\"194\":1}}],[\"shown\",{\"1\":{\"176\":1}}],[\"shortcomings\",{\"1\":{\"178\":1}}],[\"shortage\",{\"1\":{\"177\":1}}],[\"short\",{\"1\":{\"152\":1,\"159\":1}}],[\"should\",{\"0\":{\"292\":1},\"1\":{\"4\":1,\"10\":1,\"11\":1,\"12\":1,\"32\":1,\"39\":1,\"40\":2,\"132\":3,\"147\":1,\"263\":4}}],[\"shutdown\",{\"1\":{\"149\":2,\"181\":1}}],[\"shallow\",{\"0\":{\"286\":1},\"1\":{\"286\":7}}],[\"sha256md5\",{\"1\":{\"137\":1}}],[\"shares\",{\"1\":{\"177\":1,\"181\":1}}],[\"share\",{\"1\":{\"172\":1,\"175\":1}}],[\"shared\",{\"1\":{\"9\":1,\"109\":1,\"121\":1,\"136\":1}}],[\"sharing\",{\"1\":{\"109\":1,\"111\":1}}],[\"student\",{\"0\":{\"232\":1},\"1\":{\"228\":11,\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"studio\",{\"1\":{\"192\":1,\"193\":1}}],[\"steps\",{\"0\":{\"185\":1},\"1\":{\"165\":1,\"172\":2}}],[\"steal\",{\"1\":{\"144\":1}}],[\"st\",{\"1\":{\"140\":2}}],[\"still\",{\"1\":{\"136\":1,\"166\":2,\"217\":1}}],[\"storage\",{\"1\":{\"251\":2,\"258\":5,\"259\":8,\"263\":1,\"273\":1}}],[\"storm\",{\"1\":{\"162\":1}}],[\"stores\",{\"1\":{\"172\":1}}],[\"stored\",{\"0\":{\"283\":1},\"1\":{\"147\":1,\"251\":1,\"258\":1,\"259\":3,\"269\":1}}],[\"store\",{\"1\":{\"30\":2,\"72\":2,\"81\":1,\"139\":2,\"147\":1,\"163\":1,\"165\":1,\"267\":1,\"272\":2,\"283\":2,\"286\":1}}],[\"stolen\",{\"1\":{\"136\":1}}],[\"stock\",{\"1\":{\"41\":4}}],[\"stopatentry\",{\"1\":{\"194\":1}}],[\"stoponerror\",{\"1\":{\"194\":1}}],[\"stoponentry\",{\"1\":{\"194\":2}}],[\"stops\",{\"1\":{\"129\":1,\"194\":1}}],[\"stopped\",{\"1\":{\"42\":2}}],[\"stopping\",{\"1\":{\"42\":1}}],[\"stop\",{\"1\":{\"11\":2,\"42\":7,\"181\":1,\"182\":2}}],[\"stars\",{\"1\":{\"196\":1}}],[\"startup\",{\"1\":{\"181\":1,\"194\":1}}],[\"started\",{\"1\":{\"152\":1,\"217\":1}}],[\"starts\",{\"1\":{\"44\":1,\"149\":1,\"194\":2,\"245\":2}}],[\"start\",{\"1\":{\"35\":4,\"70\":2,\"116\":1,\"154\":4,\"155\":1,\"156\":1,\"181\":1,\"182\":2,\"244\":2,\"291\":1}}],[\"starting\",{\"1\":{\"11\":1,\"30\":1,\"31\":1,\"72\":2}}],[\"stands\",{\"1\":{\"152\":2}}],[\"standards\",{\"1\":{\"128\":1}}],[\"standard\",{\"1\":{\"7\":2}}],[\"stage\",{\"1\":{\"147\":1,\"184\":1}}],[\"stacks\",{\"1\":{\"225\":1}}],[\"stack\",{\"1\":{\"32\":2,\"139\":1,\"142\":1,\"193\":1,\"194\":1,\"290\":1}}],[\"stateful\",{\"1\":{\"148\":1}}],[\"state\",{\"0\":{\"148\":1},\"1\":{\"139\":1,\"163\":1}}],[\"stateless\",{\"1\":{\"139\":1}}],[\"statements\",{\"1\":{\"64\":1,\"65\":1}}],[\"statement\",{\"0\":{\"239\":1,\"243\":1,\"244\":1,\"247\":1,\"248\":1},\"1\":{\"18\":2}}],[\"status\",{\"0\":{\"132\":1},\"1\":{\"132\":7,\"140\":1,\"184\":2,\"212\":1,\"213\":1}}],[\"statically\",{\"1\":{\"210\":2}}],[\"static\",{\"1\":{\"26\":1,\"29\":1}}],[\"strutil\",{\"1\":{\"225\":1}}],[\"structure\",{\"0\":{\"140\":1,\"147\":1,\"161\":1,\"265\":1},\"1\":{\"55\":1,\"92\":1,\"121\":2,\"170\":1,\"210\":1,\"250\":1,\"266\":1,\"267\":1,\"292\":1}}],[\"structures\",{\"0\":{\"36\":1,\"80\":1},\"1\":{\"36\":1,\"61\":1,\"80\":1,\"225\":1,\"273\":3,\"279\":4}}],[\"structs\",{\"0\":{\"16\":1,\"21\":1,\"41\":1},\"1\":{\"41\":1,\"225\":2,\"274\":1}}],[\"struct\",{\"0\":{\"20\":1,\"23\":1,\"24\":1,\"80\":1},\"1\":{\"11\":3,\"14\":2,\"16\":8,\"21\":2,\"24\":1,\"31\":2,\"35\":2,\"36\":2,\"41\":2,\"42\":2,\"43\":2,\"55\":1,\"61\":2,\"80\":1,\"82\":1,\"96\":1,\"120\":1,\"217\":1,\"226\":1,\"274\":1,\"279\":2}}],[\"strategy\",{\"1\":{\"163\":1}}],[\"strategies\",{\"1\":{\"163\":1}}],[\"straightforward\",{\"1\":{\"12\":1,\"196\":1,\"210\":1}}],[\"strict\",{\"1\":{\"140\":1,\"173\":2}}],[\"stringarrayintstructfloatbool\",{\"1\":{\"286\":1}}],[\"strings\",{\"0\":{\"19\":2,\"75\":1},\"1\":{\"46\":1,\"75\":1,\"225\":2,\"276\":1}}],[\"string\",{\"0\":{\"26\":1,\"75\":1},\"1\":{\"5\":2,\"14\":6,\"16\":2,\"17\":2,\"19\":2,\"26\":2,\"31\":4,\"33\":2,\"37\":2,\"40\":6,\"41\":2,\"55\":1,\"60\":4,\"61\":1,\"75\":3,\"79\":2,\"80\":1,\"82\":1,\"92\":1,\"96\":2,\"98\":3,\"99\":6,\"100\":6,\"101\":4,\"105\":4,\"123\":7,\"188\":5,\"194\":1,\"225\":2,\"276\":3,\"278\":4,\"279\":5,\"287\":2}}],[\"streams\",{\"1\":{\"168\":1}}],[\"stream\",{\"1\":{\"140\":2,\"146\":1,\"225\":2}}],[\"str\",{\"1\":{\"75\":3}}],[\"strconv\",{\"1\":{\"46\":3}}],[\"soft\",{\"1\":{\"184\":2}}],[\"solution\",{\"1\":{\"178\":1,\"200\":2,\"205\":2}}],[\"solutions\",{\"1\":{\"163\":2}}],[\"solidification\",{\"1\":{\"173\":1}}],[\"solving\",{\"1\":{\"128\":1}}],[\"solves\",{\"1\":{\"152\":1}}],[\"solved\",{\"1\":{\"135\":1}}],[\"solve\",{\"1\":{\"103\":1}}],[\"soon\",{\"1\":{\"147\":1}}],[\"so\",{\"1\":{\"31\":2,\"132\":1,\"149\":2,\"152\":2,\"192\":1,\"267\":1,\"269\":2,\"285\":1,\"286\":2,\"289\":1,\"300\":2}}],[\"something\",{\"1\":{\"11\":10}}],[\"some\",{\"1\":{\"10\":1,\"49\":1,\"137\":1,\"147\":1,\"166\":1,\"200\":1,\"205\":1,\"210\":1,\"269\":2,\"281\":1}}],[\"sorted\",{\"1\":{\"251\":1,\"263\":1}}],[\"sorts\",{\"1\":{\"142\":1,\"250\":1}}],[\"sort\",{\"1\":{\"7\":1,\"151\":1,\"226\":1}}],[\"sourced\",{\"1\":{\"205\":1}}],[\"sourcemappathoverrides\",{\"1\":{\"194\":1}}],[\"sourcemaps\",{\"1\":{\"194\":1}}],[\"source\",{\"1\":{\"2\":1,\"136\":1,\"140\":4,\"147\":1,\"161\":2,\"171\":10,\"176\":4,\"180\":1,\"181\":2,\"191\":1,\"194\":3,\"200\":1}}],[\"s\",{\"0\":{\"287\":1,\"288\":1},\"1\":{\"6\":3,\"7\":1,\"8\":3,\"11\":6,\"14\":3,\"16\":1,\"17\":7,\"19\":1,\"21\":2,\"25\":1,\"26\":1,\"30\":1,\"34\":1,\"36\":1,\"38\":1,\"40\":2,\"41\":1,\"43\":1,\"53\":1,\"69\":1,\"75\":1,\"81\":1,\"93\":1,\"94\":1,\"95\":1,\"99\":4,\"120\":1,\"132\":5,\"134\":1,\"137\":6,\"141\":1,\"147\":2,\"149\":4,\"153\":1,\"163\":3,\"166\":1,\"173\":2,\"193\":1,\"196\":1,\"200\":4,\"201\":1,\"217\":3,\"224\":1,\"233\":3,\"235\":3,\"236\":3,\"237\":3,\"269\":1,\"276\":1,\"279\":1,\"286\":1,\"287\":3}}],[\"sip\",{\"1\":{\"140\":1}}],[\"situations\",{\"1\":{\"119\":1,\"152\":1}}],[\"sites\",{\"1\":{\"168\":1}}],[\"site\",{\"1\":{\"1\":1,\"134\":1,\"168\":1}}],[\"sides\",{\"1\":{\"86\":2}}],[\"side\",{\"1\":{\"85\":8,\"86\":1,\"113\":1,\"132\":1,\"149\":1}}],[\"signature\",{\"0\":{\"137\":1},\"1\":{\"136\":1,\"137\":9}}],[\"signal\",{\"1\":{\"42\":3,\"120\":1}}],[\"significance\",{\"1\":{\"273\":2}}],[\"significantly\",{\"1\":{\"217\":1}}],[\"significant\",{\"1\":{\"32\":1,\"210\":1}}],[\"signing\",{\"1\":{\"136\":1}}],[\"signed\",{\"1\":{\"72\":3,\"137\":4}}],[\"simplify\",{\"1\":{\"210\":2,\"224\":1}}],[\"simplifies\",{\"1\":{\"193\":1}}],[\"simplicity\",{\"1\":{\"196\":1,\"210\":1}}],[\"simplest\",{\"1\":{\"286\":1}}],[\"simpler\",{\"1\":{\"279\":1}}],[\"simple\",{\"0\":{\"198\":1,\"203\":1,\"208\":1},\"1\":{\"9\":1,\"140\":1,\"159\":1,\"163\":1,\"196\":2,\"200\":2,\"205\":2,\"210\":1}}],[\"simultaneously\",{\"1\":{\"120\":1,\"180\":1}}],[\"similar\",{\"1\":{\"32\":1,\"131\":2,\"132\":3,\"136\":1,\"173\":1,\"180\":1,\"217\":1,\"224\":1,\"251\":1,\"290\":1}}],[\"similarly\",{\"1\":{\"31\":1,\"141\":1,\"279\":1}}],[\"sizeof\",{\"1\":{\"284\":2}}],[\"sizes\",{\"0\":{\"284\":1}}],[\"size\",{\"1\":{\"25\":1,\"39\":3,\"78\":1,\"112\":1,\"140\":1,\"141\":2,\"153\":2,\"157\":1,\"161\":1,\"173\":1,\"210\":1,\"267\":1}}],[\"sin\",{\"1\":{\"53\":3}}],[\"since\",{\"1\":{\"14\":1,\"38\":1,\"44\":1,\"95\":1,\"160\":1,\"259\":1,\"267\":2,\"285\":1}}],[\"single\",{\"0\":{\"6\":1,\"261\":1},\"1\":{\"6\":1,\"38\":1,\"53\":2,\"65\":1,\"135\":2,\"163\":1,\"180\":1,\"181\":1,\"217\":1,\"228\":1,\"245\":2,\"251\":3,\"263\":1}}],[\"su\",{\"1\":{\"279\":4}}],[\"sudden\",{\"1\":{\"163\":1}}],[\"sum\",{\"1\":{\"147\":1,\"249\":2}}],[\"suppose\",{\"1\":{\"172\":1,\"269\":1}}],[\"supported\",{\"1\":{\"131\":2,\"132\":1,\"135\":6,\"187\":1,\"237\":1}}],[\"support\",{\"1\":{\"52\":1,\"143\":3,\"160\":1,\"172\":1,\"192\":1,\"193\":1,\"196\":4,\"210\":1,\"217\":1,\"267\":1}}],[\"supports\",{\"1\":{\"52\":1,\"53\":1,\"131\":2,\"162\":1,\"191\":1,\"192\":1,\"194\":1,\"210\":1,\"245\":1}}],[\"super\",{\"1\":{\"228\":8}}],[\"supercharge\",{\"1\":{\"192\":1}}],[\"supercharged\",{\"1\":{\"192\":1}}],[\"supervision\",{\"1\":{\"137\":1}}],[\"superior\",{\"1\":{\"134\":1}}],[\"successful\",{\"1\":{\"132\":1,\"149\":1}}],[\"successfully\",{\"1\":{\"132\":6,\"151\":1,\"152\":2}}],[\"success\",{\"1\":{\"132\":1}}],[\"such\",{\"1\":{\"5\":1,\"37\":1,\"41\":1,\"51\":1,\"88\":1,\"113\":2,\"128\":1,\"132\":1,\"137\":1,\"140\":1,\"152\":1,\"170\":1,\"176\":2,\"180\":1,\"193\":2,\"201\":1,\"206\":1,\"210\":1,\"217\":1,\"225\":5,\"228\":1,\"237\":2,\"245\":2,\"269\":1,\"273\":1,\"291\":1}}],[\"suite\",{\"1\":{\"129\":1}}],[\"suitable\",{\"1\":{\"29\":1,\"292\":1}}],[\"sunday\",{\"1\":{\"64\":1}}],[\"sure\",{\"1\":{\"34\":1,\"132\":1}}],[\"suffix\",{\"1\":{\"31\":1}}],[\"subquery\",{\"1\":{\"248\":1}}],[\"subqueries\",{\"1\":{\"217\":1}}],[\"subset\",{\"1\":{\"228\":1}}],[\"substring\",{\"1\":{\"225\":1}}],[\"substantial\",{\"1\":{\"210\":1}}],[\"sub\",{\"1\":{\"172\":1}}],[\"subnet\",{\"1\":{\"172\":2}}],[\"subdomains\",{\"1\":{\"168\":1}}],[\"subdomain\",{\"1\":{\"168\":2}}],[\"submission\",{\"1\":{\"131\":1}}],[\"submits\",{\"1\":{\"131\":1}}],[\"submitted\",{\"1\":{\"1\":1,\"142\":1}}],[\"submit\",{\"1\":{\"1\":2,\"131\":1,\"132\":1}}],[\"subtraction\",{\"1\":{\"84\":1}}],[\"subtract\",{\"1\":{\"5\":2}}],[\"seamlessly\",{\"1\":{\"192\":1}}],[\"searching\",{\"1\":{\"267\":1}}],[\"search\",{\"1\":{\"166\":1,\"251\":1,\"259\":1,\"266\":1,\"267\":2}}],[\"seq=y+1\",{\"1\":{\"149\":1}}],[\"seq\",{\"1\":{\"147\":1}}],[\"sequence\",{\"1\":{\"75\":1,\"128\":1,\"147\":8,\"149\":8,\"150\":1,\"151\":1,\"269\":1}}],[\"sequentially\",{\"1\":{\"267\":1}}],[\"sequential\",{\"0\":{\"32\":1},\"1\":{\"267\":2}}],[\"segmented\",{\"1\":{\"147\":1}}],[\"segments\",{\"1\":{\"144\":1,\"172\":1,\"173\":1,\"175\":3}}],[\"segment\",{\"1\":{\"140\":1,\"141\":1,\"147\":6,\"149\":1,\"152\":1,\"157\":1,\"172\":2,\"173\":1}}],[\"sessions\",{\"1\":{\"196\":1}}],[\"session\",{\"1\":{\"128\":1,\"129\":1,\"196\":2}}],[\"serves\",{\"1\":{\"224\":1}}],[\"servers\",{\"1\":{\"136\":1,\"163\":1,\"168\":2,\"178\":1}}],[\"server\",{\"1\":{\"131\":4,\"132\":20,\"133\":1,\"134\":6,\"135\":2,\"144\":4,\"149\":9,\"160\":2,\"162\":1,\"163\":16,\"165\":1,\"166\":12,\"167\":2,\"168\":1,\"172\":2,\"176\":4,\"200\":2,\"201\":1,\"205\":2,\"206\":1}}],[\"services\",{\"1\":{\"128\":1,\"140\":1,\"160\":1,\"163\":1}}],[\"service\",{\"0\":{\"198\":1},\"1\":{\"128\":1,\"129\":1,\"132\":2,\"140\":1,\"143\":1,\"149\":1,\"159\":1,\"166\":1,\"168\":3,\"173\":1}}],[\"serial\",{\"1\":{\"137\":1}}],[\"serializable\",{\"1\":{\"269\":1}}],[\"serialization\",{\"1\":{\"41\":1,\"269\":1}}],[\"serialized\",{\"0\":{\"41\":1},\"1\":{\"41\":1}}],[\"series\",{\"1\":{\"77\":1,\"80\":1}}],[\"seven\",{\"0\":{\"128\":1},\"1\":{\"129\":1}}],[\"several\",{\"1\":{\"93\":1}}],[\"sent\",{\"1\":{\"112\":1,\"135\":1,\"147\":3,\"149\":1,\"152\":2,\"156\":1,\"157\":1,\"160\":2,\"166\":1,\"173\":2}}],[\"sender\",{\"1\":{\"139\":1,\"140\":1,\"147\":6,\"152\":8,\"153\":2,\"156\":1,\"157\":1,\"171\":1,\"172\":1}}],[\"sends\",{\"1\":{\"128\":2,\"134\":2,\"149\":5,\"168\":2,\"172\":4,\"173\":1,\"176\":2}}],[\"sending\",{\"0\":{\"113\":1},\"1\":{\"58\":2,\"113\":1,\"149\":1,\"152\":2,\"163\":3,\"225\":1}}],[\"send\",{\"1\":{\"12\":2,\"114\":1,\"115\":1,\"135\":1,\"144\":1,\"149\":3,\"165\":2,\"166\":2,\"172\":3,\"173\":2,\"176\":2}}],[\"setdesc\",{\"1\":{\"212\":1}}],[\"setname\",{\"1\":{\"212\":1}}],[\"settitle\",{\"1\":{\"212\":1}}],[\"settings\",{\"1\":{\"193\":1}}],[\"setting\",{\"1\":{\"25\":1,\"119\":1,\"193\":1}}],[\"setups\",{\"1\":{\"181\":1}}],[\"setstatus\",{\"1\":{\"212\":1,\"213\":1}}],[\"sets\",{\"1\":{\"149\":2,\"168\":1,\"228\":1}}],[\"set\",{\"1\":{\"53\":1,\"79\":1,\"98\":2,\"115\":1,\"140\":3,\"141\":1,\"144\":1,\"156\":1,\"157\":1,\"163\":1,\"193\":1,\"196\":2,\"200\":1,\"229\":1,\"298\":1,\"302\":1}}],[\"selected\",{\"1\":{\"188\":1}}],[\"selective\",{\"1\":{\"152\":1}}],[\"selects\",{\"1\":{\"128\":1,\"129\":1}}],[\"select\",{\"0\":{\"115\":1,\"239\":1},\"1\":{\"42\":1,\"67\":3,\"115\":4,\"125\":1,\"126\":1,\"233\":4,\"235\":1,\"236\":1,\"237\":1,\"239\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":4,\"245\":7,\"246\":3,\"247\":1,\"248\":2}}],[\"seen\",{\"1\":{\"269\":1,\"286\":1}}],[\"seems\",{\"1\":{\"269\":1}}],[\"see\",{\"1\":{\"32\":1,\"132\":2,\"152\":2,\"166\":1,\"189\":1,\"192\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"seeking\",{\"1\":{\"1\":1}}],[\"separation\",{\"1\":{\"217\":1}}],[\"separating\",{\"1\":{\"7\":1}}],[\"separately\",{\"1\":{\"149\":1,\"196\":1,\"259\":2}}],[\"separate\",{\"0\":{\"16\":1},\"1\":{\"5\":2,\"10\":1}}],[\"secure\",{\"1\":{\"133\":2,\"136\":2}}],[\"security\",{\"1\":{\"133\":2,\"136\":4,\"137\":1,\"140\":2,\"143\":1,\"177\":2,\"181\":2}}],[\"seconds\",{\"1\":{\"181\":2}}],[\"second\",{\"1\":{\"5\":2,\"70\":1,\"93\":1,\"94\":3,\"95\":3,\"96\":2,\"99\":6,\"100\":6,\"101\":2,\"105\":1,\"116\":1,\"125\":5,\"126\":3,\"232\":1}}],[\"section\",{\"1\":{\"1\":1,\"140\":2}}],[\"ll\",{\"1\":{\"201\":1,\"206\":1}}],[\"lucky\",{\"1\":{\"80\":1}}],[\"l\",{\"1\":{\"36\":4,\"212\":1,\"213\":1,\"214\":2,\"215\":1}}],[\"loose\",{\"1\":{\"140\":1}}],[\"loop\",{\"1\":{\"65\":3,\"114\":1}}],[\"loss\",{\"1\":{\"149\":1,\"152\":4,\"178\":3}}],[\"lost\",{\"1\":{\"139\":1,\"152\":4,\"158\":1,\"160\":1,\"161\":1}}],[\"loses\",{\"1\":{\"30\":1}}],[\"lower\",{\"1\":{\"132\":1,\"181\":1,\"217\":1,\"267\":1}}],[\"lowercase\",{\"1\":{\"9\":1,\"188\":1}}],[\"low\",{\"1\":{\"90\":1,\"196\":1,\"200\":1,\"259\":2}}],[\"load\",{\"1\":{\"35\":1,\"163\":1,\"173\":1,\"177\":2}}],[\"locate\",{\"1\":{\"250\":1}}],[\"located\",{\"1\":{\"172\":1}}],[\"locations\",{\"1\":{\"132\":1}}],[\"location\",{\"1\":{\"66\":1,\"251\":1}}],[\"local\",{\"1\":{\"7\":1,\"133\":1,\"143\":1,\"166\":2,\"170\":1,\"172\":4,\"175\":1,\"184\":2,\"187\":1,\"193\":2}}],[\"locks\",{\"1\":{\"35\":1,\"217\":1,\"225\":1,\"269\":2,\"301\":1}}],[\"lock\",{\"1\":{\"16\":1,\"168\":1,\"269\":1,\"299\":1}}],[\"logger\",{\"1\":{\"217\":1}}],[\"logic\",{\"1\":{\"200\":2,\"205\":2,\"224\":1}}],[\"logical\",{\"0\":{\"86\":1,\"252\":1},\"1\":{\"251\":2}}],[\"logs\",{\"1\":{\"32\":1,\"182\":2}}],[\"log\",{\"1\":{\"12\":2,\"32\":4,\"40\":6,\"184\":1}}],[\"longer\",{\"1\":{\"173\":1}}],[\"long\",{\"1\":{\"8\":1,\"152\":2,\"170\":1,\"263\":1}}],[\"lacking\",{\"1\":{\"200\":1}}],[\"lacks\",{\"1\":{\"196\":1}}],[\"launch\",{\"1\":{\"193\":3,\"194\":12}}],[\"launched\",{\"1\":{\"187\":1,\"191\":1}}],[\"lancet\",{\"0\":{\"223\":1},\"1\":{\"224\":2,\"226\":1}}],[\"languages\",{\"1\":{\"191\":1,\"193\":1}}],[\"language\",{\"1\":{\"180\":1,\"187\":1,\"188\":2,\"192\":2,\"193\":1,\"281\":1}}],[\"lan\",{\"1\":{\"162\":3,\"175\":2}}],[\"latest\",{\"1\":{\"202\":1,\"207\":1}}],[\"latency\",{\"1\":{\"152\":2}}],[\"later\",{\"1\":{\"16\":2}}],[\"labels\",{\"1\":{\"143\":1}}],[\"large\",{\"1\":{\"140\":1,\"144\":1,\"147\":1,\"163\":6,\"173\":4,\"177\":1,\"210\":1,\"292\":1}}],[\"larger\",{\"1\":{\"4\":1,\"152\":1,\"267\":1,\"291\":1}}],[\"layers\",{\"1\":{\"266\":1,\"267\":1}}],[\"layered\",{\"1\":{\"163\":1}}],[\"layer\",{\"0\":{\"128\":1},\"1\":{\"128\":6,\"129\":3,\"141\":3,\"146\":1,\"149\":1,\"159\":1,\"163\":1}}],[\"lastname\",{\"1\":{\"21\":1,\"22\":2}}],[\"last\",{\"1\":{\"8\":1,\"69\":1,\"140\":2,\"141\":1,\"147\":2,\"170\":1,\"290\":1}}],[\"legitimate\",{\"1\":{\"163\":2,\"168\":2}}],[\"legal\",{\"1\":{\"137\":1}}],[\"let\",{\"1\":{\"136\":1,\"286\":1}}],[\"letters\",{\"1\":{\"9\":1}}],[\"less\",{\"1\":{\"85\":2,\"141\":1,\"147\":1,\"245\":2,\"267\":1}}],[\"left\",{\"0\":{\"235\":1},\"1\":{\"85\":4,\"87\":1,\"88\":1,\"113\":1,\"235\":1,\"237\":1,\"263\":4}}],[\"len\",{\"1\":{\"16\":1,\"17\":2,\"37\":2,\"102\":2,\"107\":2,\"109\":1}}],[\"length\",{\"0\":{\"4\":1,\"102\":1,\"107\":1},\"1\":{\"17\":1,\"102\":1,\"107\":2,\"109\":1,\"140\":2,\"141\":7,\"143\":2,\"147\":5,\"152\":1,\"161\":2,\"162\":1,\"171\":8,\"263\":1,\"279\":1,\"288\":2}}],[\"levels\",{\"0\":{\"269\":1},\"1\":{\"188\":1,\"269\":2}}],[\"level\",{\"0\":{\"14\":1,\"15\":1},\"1\":{\"16\":1,\"29\":1,\"32\":3,\"166\":5,\"192\":1,\"266\":1,\"267\":2,\"269\":3}}],[\"leaks\",{\"1\":{\"273\":1}}],[\"leaves\",{\"1\":{\"267\":2}}],[\"least\",{\"1\":{\"266\":1}}],[\"leaf\",{\"1\":{\"266\":3,\"267\":13}}],[\"learns\",{\"1\":{\"173\":1}}],[\"learn\",{\"1\":{\"163\":1,\"173\":1,\"196\":1,\"229\":1}}],[\"learning\",{\"1\":{\"1\":1,\"173\":2,\"200\":2,\"210\":2,\"272\":1}}],[\"leading\",{\"1\":{\"269\":1}}],[\"lead\",{\"1\":{\"16\":1,\"36\":1,\"38\":1,\"152\":1,\"200\":1}}],[\"leads\",{\"1\":{\"12\":1,\"163\":1}}],[\"literal\",{\"0\":{\"275\":1,\"276\":1,\"278\":1,\"279\":1},\"1\":{\"276\":3,\"278\":3,\"279\":7}}],[\"literals\",{\"0\":{\"277\":1},\"1\":{\"274\":2,\"276\":1,\"277\":2,\"279\":2}}],[\"license\",{\"1\":{\"180\":1}}],[\"light\",{\"1\":{\"189\":2}}],[\"lightweight\",{\"1\":{\"162\":1,\"181\":1,\"196\":2}}],[\"lighter\",{\"1\":{\"46\":1,\"181\":1}}],[\"live\",{\"1\":{\"140\":1,\"172\":1}}],[\"linux\",{\"1\":{\"149\":1,\"180\":1}}],[\"linking\",{\"1\":{\"267\":1}}],[\"linked\",{\"1\":{\"225\":1,\"267\":3,\"273\":1}}],[\"link\",{\"1\":{\"31\":1,\"128\":3,\"129\":2,\"141\":4,\"143\":1,\"178\":1,\"192\":4}}],[\"lines\",{\"1\":{\"4\":1}}],[\"line\",{\"0\":{\"4\":1,\"16\":1},\"1\":{\"5\":1,\"7\":1,\"53\":2,\"135\":1,\"149\":1,\"201\":2,\"206\":1}}],[\"lib\",{\"1\":{\"9\":1,\"53\":3}}],[\"libraries\",{\"1\":{\"7\":3,\"180\":1}}],[\"library\",{\"1\":{\"7\":2,\"217\":1,\"224\":2}}],[\"like\",{\"1\":{\"9\":1,\"35\":1,\"99\":1,\"100\":1,\"181\":1,\"196\":1,\"225\":10,\"245\":5,\"263\":1,\"267\":1,\"269\":1,\"278\":1}}],[\"lists\",{\"1\":{\"225\":1,\"273\":1}}],[\"listening\",{\"1\":{\"163\":1}}],[\"list\",{\"1\":{\"6\":4,\"36\":7,\"52\":1,\"132\":1,\"134\":1,\"267\":1,\"279\":1}}],[\"limiting\",{\"1\":{\"163\":3,\"173\":5}}],[\"limit\",{\"0\":{\"4\":1,\"244\":1},\"1\":{\"42\":1,\"173\":3,\"239\":1,\"244\":4}}],[\"limited\",{\"1\":{\"1\":1,\"4\":1,\"18\":1,\"143\":1,\"177\":1,\"285\":1}}],[\"ffff\",{\"1\":{\"171\":2}}],[\"ff\",{\"1\":{\"170\":6}}],[\"ftp\",{\"1\":{\"129\":1}}],[\"feat\",{\"1\":{\"184\":1}}],[\"featured\",{\"1\":{\"217\":1}}],[\"features\",{\"0\":{\"225\":1},\"1\":{\"150\":1,\"187\":1,\"196\":2,\"200\":2,\"201\":1,\"205\":1,\"206\":1,\"217\":2}}],[\"feature\",{\"1\":{\"133\":1,\"135\":1,\"143\":1,\"162\":1,\"184\":1,\"193\":1,\"196\":1,\"200\":1,\"217\":1,\"264\":1}}],[\"female\",{\"1\":{\"51\":1}}],[\"fewer\",{\"1\":{\"46\":1,\"180\":1,\"205\":1}}],[\"feels\",{\"1\":{\"269\":1}}],[\"feel\",{\"1\":{\"1\":1,\"203\":1,\"269\":1}}],[\"flexible\",{\"1\":{\"217\":1}}],[\"flexibility\",{\"1\":{\"193\":1,\"210\":1,\"217\":1,\"273\":1}}],[\"flags\",{\"1\":{\"140\":2}}],[\"flag\",{\"1\":{\"53\":2,\"140\":2,\"141\":1,\"142\":1,\"144\":1,\"152\":2}}],[\"flush\",{\"1\":{\"42\":2}}],[\"flooding\",{\"1\":{\"168\":1}}],[\"flood\",{\"1\":{\"163\":12,\"173\":1}}],[\"flow\",{\"0\":{\"62\":1},\"1\":{\"40\":1,\"49\":2,\"143\":2,\"147\":1,\"150\":1,\"162\":1}}],[\"float\",{\"0\":{\"73\":1},\"1\":{\"74\":2,\"276\":1}}],[\"floating\",{\"0\":{\"73\":1},\"1\":{\"73\":1,\"74\":1}}],[\"float32float64\",{\"1\":{\"276\":1}}],[\"float32\",{\"1\":{\"37\":2,\"73\":1,\"82\":1}}],[\"float64\",{\"1\":{\"5\":4,\"37\":2,\"73\":1,\"82\":1}}],[\"fundamental\",{\"1\":{\"183\":1}}],[\"functionality\",{\"1\":{\"131\":1,\"132\":1,\"210\":1,\"217\":1}}],[\"functional\",{\"1\":{\"16\":1}}],[\"function\",{\"0\":{\"10\":1,\"11\":1,\"68\":1,\"252\":1,\"292\":1},\"1\":{\"5\":1,\"10\":2,\"11\":2,\"38\":2,\"40\":1,\"49\":1,\"53\":1,\"69\":2,\"81\":2,\"108\":1,\"128\":1,\"129\":1,\"173\":2,\"194\":2,\"225\":2,\"249\":1,\"251\":1,\"278\":1,\"292\":1}}],[\"functions\",{\"0\":{\"38\":1,\"249\":1},\"1\":{\"5\":1,\"10\":1,\"11\":2,\"36\":1,\"38\":3,\"40\":2,\"44\":2,\"49\":1,\"52\":1,\"53\":1,\"129\":1,\"137\":1,\"140\":1,\"192\":1,\"224\":3,\"225\":16,\"247\":1,\"273\":2,\"274\":1,\"288\":1}}],[\"func\",{\"1\":{\"5\":4,\"6\":2,\"11\":8,\"14\":6,\"16\":1,\"17\":2,\"29\":1,\"31\":2,\"35\":4,\"36\":2,\"40\":4,\"42\":2,\"43\":2,\"52\":4,\"64\":1,\"66\":1,\"67\":3,\"69\":3,\"70\":3,\"75\":1,\"78\":1,\"82\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":2,\"99\":1,\"100\":1,\"101\":1,\"105\":1,\"107\":1,\"108\":1,\"109\":1,\"116\":1,\"123\":1,\"125\":2,\"126\":2,\"198\":2,\"226\":2,\"277\":1,\"278\":4,\"279\":2,\"286\":2,\"287\":2,\"289\":1,\"290\":4,\"291\":1,\"294\":1,\"295\":1,\"296\":1}}],[\"fulltext\",{\"1\":{\"256\":1}}],[\"full\",{\"0\":{\"237\":1,\"256\":1},\"1\":{\"149\":1,\"181\":1,\"217\":1,\"237\":1,\"251\":3}}],[\"further\",{\"1\":{\"141\":1,\"152\":1}}],[\"future\",{\"1\":{\"36\":1,\"132\":1,\"178\":1}}],[\"familiar\",{\"1\":{\"200\":1,\"286\":1}}],[\"fact\",{\"1\":{\"259\":1,\"269\":1}}],[\"factor\",{\"1\":{\"147\":1}}],[\"facilitates\",{\"1\":{\"181\":1}}],[\"failed\",{\"1\":{\"225\":1}}],[\"fails\",{\"1\":{\"152\":1,\"163\":1}}],[\"failures\",{\"1\":{\"34\":1}}],[\"failure\",{\"1\":{\"32\":2}}],[\"fast\",{\"1\":{\"133\":1,\"152\":3,\"154\":2,\"157\":4,\"160\":1,\"162\":1,\"196\":2,\"200\":1,\"278\":2}}],[\"faster\",{\"1\":{\"46\":1,\"160\":1,\"267\":2}}],[\"fallthrough\",{\"1\":{\"64\":7}}],[\"false\",{\"1\":{\"22\":1,\"37\":2,\"76\":2,\"82\":1,\"85\":9,\"86\":7,\"95\":1,\"114\":1,\"194\":3,\"249\":1}}],[\"fatal\",{\"1\":{\"40\":10}}],[\"firmware\",{\"1\":{\"170\":1}}],[\"firewalls\",{\"1\":{\"163\":1}}],[\"firewall\",{\"1\":{\"163\":1}}],[\"first\",{\"1\":{\"69\":1,\"93\":1,\"94\":3,\"95\":3,\"96\":2,\"99\":6,\"100\":5,\"101\":3,\"105\":1,\"147\":2,\"152\":1,\"166\":1,\"170\":1,\"172\":1,\"173\":1,\"187\":1,\"201\":1,\"221\":1,\"229\":1,\"232\":1,\"237\":1,\"264\":2,\"286\":1,\"290\":1,\"291\":1}}],[\"firstname\",{\"1\":{\"21\":1,\"22\":2}}],[\"fixed\",{\"1\":{\"143\":2,\"288\":1}}],[\"five\",{\"1\":{\"129\":1}}],[\"fin=1\",{\"1\":{\"147\":1,\"149\":3}}],[\"fin\",{\"1\":{\"147\":1}}],[\"fingerprints\",{\"1\":{\"137\":1}}],[\"fingerprint\",{\"1\":{\"137\":4}}],[\"financial\",{\"1\":{\"136\":1}}],[\"finally\",{\"1\":{\"181\":1}}],[\"final\",{\"1\":{\"69\":1,\"176\":1}}],[\"findinbatches\",{\"1\":{\"217\":1}}],[\"find\",{\"1\":{\"109\":1,\"166\":2,\"217\":2}}],[\"finished\",{\"1\":{\"69\":1}}],[\"finish\",{\"1\":{\"43\":2,\"116\":1}}],[\"fibonacci\",{\"1\":{\"67\":2}}],[\"field2\",{\"1\":{\"241\":1}}],[\"field1\",{\"1\":{\"241\":1}}],[\"field\",{\"0\":{\"21\":1,\"260\":1},\"1\":{\"21\":1,\"22\":1,\"132\":2,\"140\":6,\"141\":1,\"142\":1,\"147\":6,\"152\":1,\"161\":1,\"171\":9,\"194\":2,\"225\":1,\"228\":4,\"242\":1,\"243\":1,\"251\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"261\":1,\"262\":2,\"263\":2,\"269\":1}}],[\"fields\",{\"0\":{\"22\":1,\"194\":1,\"240\":1,\"241\":1},\"1\":{\"16\":6,\"21\":1,\"22\":1,\"80\":1,\"141\":1,\"228\":2,\"249\":2,\"259\":1,\"263\":5}}],[\"filled\",{\"1\":{\"279\":1}}],[\"filter\",{\"1\":{\"163\":2,\"225\":1}}],[\"filtering\",{\"1\":{\"163\":1,\"229\":1,\"237\":1,\"245\":1}}],[\"filtered\",{\"1\":{\"6\":6}}],[\"fileutil\",{\"1\":{\"225\":1}}],[\"filesystem\",{\"1\":{\"180\":1}}],[\"files\",{\"1\":{\"137\":1,\"193\":1,\"194\":2,\"210\":1,\"225\":1,\"259\":1}}],[\"file\",{\"1\":{\"11\":1,\"31\":3,\"59\":1,\"129\":2,\"131\":1,\"166\":1,\"189\":1,\"193\":1,\"194\":9,\"225\":1,\"258\":1}}],[\"f1\",{\"1\":{\"12\":2}}],[\"fmt\",{\"1\":{\"7\":2,\"18\":2,\"26\":2,\"29\":1,\"30\":3,\"31\":2,\"32\":2,\"40\":2,\"46\":2,\"53\":1,\"63\":2,\"64\":12,\"65\":5,\"66\":3,\"67\":3,\"69\":5,\"70\":4,\"75\":2,\"78\":2,\"79\":1,\"80\":1,\"93\":5,\"94\":5,\"95\":7,\"96\":2,\"98\":1,\"99\":7,\"100\":3,\"101\":5,\"105\":2,\"106\":1,\"107\":2,\"108\":4,\"109\":3,\"115\":4,\"116\":3,\"123\":5,\"125\":3,\"126\":3,\"226\":2,\"272\":3,\"277\":4,\"278\":2,\"284\":1,\"286\":8,\"287\":7,\"289\":2,\"290\":4,\"291\":3,\"294\":2}}],[\"folders\",{\"1\":{\"194\":1}}],[\"follows\",{\"1\":{\"79\":1,\"98\":1,\"171\":1,\"172\":1,\"279\":5,\"286\":4}}],[\"followed\",{\"1\":{\"31\":1,\"279\":1}}],[\"following\",{\"1\":{\"14\":1,\"42\":1,\"64\":1,\"75\":1,\"119\":1,\"139\":1,\"150\":1,\"163\":1,\"172\":2,\"193\":1,\"210\":1,\"230\":1,\"233\":1,\"274\":2,\"276\":1,\"278\":1,\"301\":1}}],[\"follow\",{\"1\":{\"9\":1,\"11\":1}}],[\"focused\",{\"1\":{\"128\":1}}],[\"focus\",{\"1\":{\"128\":2,\"200\":2,\"205\":2,\"224\":1}}],[\"four\",{\"1\":{\"129\":1,\"149\":3,\"163\":1}}],[\"fourth\",{\"1\":{\"101\":1}}],[\"found\",{\"1\":{\"31\":2,\"132\":5,\"163\":1,\"166\":2,\"258\":1}}],[\"foo\",{\"1\":{\"6\":2,\"15\":2,\"29\":3,\"35\":8}}],[\"foreign\",{\"1\":{\"228\":4}}],[\"force\",{\"1\":{\"184\":1,\"302\":1}}],[\"forwards\",{\"1\":{\"172\":1}}],[\"forwarding\",{\"1\":{\"172\":1}}],[\"forwarded\",{\"1\":{\"172\":1}}],[\"forge\",{\"1\":{\"173\":1}}],[\"forged\",{\"1\":{\"168\":1,\"173\":1}}],[\"forging\",{\"1\":{\"144\":1}}],[\"forbidden\",{\"1\":{\"132\":2}}],[\"form\",{\"1\":{\"129\":1,\"132\":1,\"137\":1,\"139\":1,\"286\":1}}],[\"forming\",{\"1\":{\"121\":1}}],[\"formatter\",{\"1\":{\"225\":1}}],[\"formatting\",{\"1\":{\"30\":1,\"129\":1,\"192\":1,\"225\":2}}],[\"format\",{\"0\":{\"26\":1},\"1\":{\"5\":2,\"26\":2,\"128\":1,\"137\":1,\"172\":1}}],[\"for\",{\"0\":{\"15\":1,\"43\":1,\"185\":1,\"263\":1,\"298\":1},\"1\":{\"1\":1,\"6\":4,\"9\":2,\"10\":2,\"11\":2,\"12\":2,\"16\":1,\"17\":1,\"29\":5,\"31\":2,\"32\":1,\"35\":2,\"38\":1,\"39\":5,\"42\":5,\"43\":4,\"58\":3,\"63\":1,\"65\":8,\"66\":1,\"67\":3,\"69\":1,\"78\":1,\"99\":3,\"111\":2,\"121\":1,\"125\":1,\"126\":1,\"128\":4,\"129\":1,\"131\":3,\"132\":1,\"134\":2,\"136\":9,\"137\":2,\"139\":1,\"140\":7,\"141\":1,\"143\":1,\"147\":2,\"152\":6,\"158\":1,\"159\":1,\"160\":1,\"162\":3,\"163\":2,\"165\":1,\"166\":2,\"168\":2,\"171\":5,\"173\":2,\"175\":3,\"177\":1,\"178\":1,\"180\":1,\"181\":1,\"187\":2,\"188\":1,\"191\":1,\"192\":3,\"193\":2,\"194\":3,\"196\":2,\"200\":4,\"203\":1,\"205\":3,\"210\":1,\"217\":4,\"224\":2,\"225\":15,\"228\":2,\"229\":1,\"245\":1,\"247\":1,\"249\":2,\"251\":1,\"259\":1,\"263\":2,\"264\":1,\"266\":1,\"267\":4,\"269\":1,\"272\":1,\"276\":1,\"277\":1,\"278\":1,\"279\":4,\"286\":1,\"287\":2,\"289\":2,\"291\":1,\"292\":2,\"294\":1,\"302\":1}}],[\"f\",{\"1\":{\"5\":2,\"6\":2,\"14\":9,\"35\":8,\"40\":4,\"182\":1,\"184\":1}}],[\"friendly\",{\"1\":{\"196\":1,\"217\":2}}],[\"friday\",{\"1\":{\"64\":2}}],[\"frequently\",{\"1\":{\"163\":1,\"263\":3}}],[\"frequent\",{\"1\":{\"152\":1,\"173\":1}}],[\"free\",{\"1\":{\"1\":1,\"173\":2,\"203\":1}}],[\"francisco\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"fragments\",{\"1\":{\"140\":1,\"141\":4,\"142\":2,\"258\":1,\"259\":1}}],[\"fragmented\",{\"1\":{\"140\":3,\"141\":2,\"142\":1}}],[\"fragment\",{\"1\":{\"140\":5,\"141\":5,\"142\":1}}],[\"fragmentation\",{\"0\":{\"141\":1},\"1\":{\"140\":4,\"141\":1}}],[\"framework\",{\"1\":{\"196\":3,\"200\":3,\"205\":3,\"210\":1}}],[\"framework>\",{\"1\":{\"194\":1}}],[\"frameworks\",{\"1\":{\"1\":1,\"196\":1}}],[\"frame\",{\"1\":{\"171\":3,\"172\":1}}],[\"frames\",{\"1\":{\"128\":3}}],[\"front\",{\"1\":{\"81\":1}}],[\"from\",{\"0\":{\"296\":1,\"302\":1},\"1\":{\"9\":1,\"30\":1,\"32\":1,\"36\":1,\"40\":2,\"90\":1,\"114\":1,\"128\":2,\"132\":2,\"133\":2,\"140\":1,\"144\":1,\"147\":2,\"149\":2,\"152\":1,\"156\":1,\"162\":1,\"163\":2,\"165\":1,\"172\":1,\"173\":1,\"177\":1,\"180\":1,\"194\":1,\"228\":1,\"233\":4,\"235\":2,\"236\":2,\"237\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":5,\"245\":7,\"246\":3,\"247\":1,\"248\":2,\"266\":1,\"269\":1,\"272\":2,\"286\":1,\"291\":1,\"300\":1}}],[\"ibd\",{\"1\":{\"258\":1,\"259\":1}}],[\"iris\",{\"1\":{\"196\":1}}],[\"ieee\",{\"1\":{\"170\":2}}],[\"ieee802\",{\"1\":{\"129\":2}}],[\"ietf\",{\"1\":{\"159\":1}}],[\"ix\",{\"1\":{\"140\":1}}],[\"ii\",{\"1\":{\"140\":1}}],[\"icmp\",{\"1\":{\"163\":2}}],[\"icmf\",{\"1\":{\"129\":1}}],[\"ichp\",{\"1\":{\"129\":1}}],[\"ipsec\",{\"1\":{\"143\":2}}],[\"ipv7\",{\"1\":{\"140\":1}}],[\"ipv6\",{\"0\":{\"143\":1},\"1\":{\"140\":1,\"143\":3,\"167\":1,\"178\":1}}],[\"ipv4\",{\"1\":{\"140\":3,\"143\":2,\"170\":1,\"177\":2}}],[\"ip\",{\"0\":{\"129\":1,\"138\":1,\"139\":1,\"144\":1},\"1\":{\"128\":1,\"129\":4,\"139\":6,\"140\":8,\"141\":4,\"144\":3,\"147\":1,\"160\":1,\"163\":1,\"165\":5,\"166\":6,\"167\":1,\"168\":1,\"170\":2,\"171\":5,\"172\":11,\"173\":4,\"175\":4,\"176\":2,\"177\":2}}],[\"i++\",{\"1\":{\"43\":1,\"65\":1,\"67\":1}}],[\"i\",{\"1\":{\"33\":2,\"43\":2,\"65\":15,\"66\":5,\"67\":2,\"69\":4,\"78\":4,\"147\":1,\"149\":4,\"156\":1,\"228\":1,\"250\":1,\"258\":1,\"259\":3,\"269\":1}}],[\"id=c\",{\"1\":{\"233\":2,\"235\":2,\"236\":2,\"237\":2}}],[\"idstudent\",{\"1\":{\"228\":1}}],[\"idteacher\",{\"1\":{\"228\":1}}],[\"ide\",{\"1\":{\"187\":1}}],[\"identifies\",{\"1\":{\"170\":1}}],[\"identifier2\",{\"1\":{\"51\":1}}],[\"identifier1\",{\"1\":{\"51\":1}}],[\"identifier\",{\"1\":{\"51\":1}}],[\"identifiers\",{\"1\":{\"49\":1,\"53\":1}}],[\"identification\",{\"1\":{\"140\":1}}],[\"identify\",{\"1\":{\"136\":1,\"140\":3,\"163\":1,\"228\":7}}],[\"identity\",{\"1\":{\"133\":1,\"136\":3,\"137\":2}}],[\"identical\",{\"1\":{\"36\":1}}],[\"id\",{\"1\":{\"32\":6,\"182\":7,\"184\":3,\"192\":4,\"213\":1,\"215\":1,\"221\":1,\"228\":9,\"231\":1,\"232\":2,\"233\":5,\"235\":5,\"236\":5,\"237\":5}}],[\"image\",{\"1\":{\"182\":5}}],[\"images\",{\"1\":{\"181\":1,\"182\":2}}],[\"imaginary\",{\"1\":{\"74\":3}}],[\"imag\",{\"1\":{\"37\":2}}],[\"immediately\",{\"1\":{\"17\":1,\"152\":2,\"157\":1,\"163\":1}}],[\"improving\",{\"1\":{\"181\":1,\"264\":1,\"273\":1}}],[\"improve\",{\"1\":{\"4\":1,\"39\":1,\"187\":1,\"191\":1,\"250\":2,\"251\":1,\"258\":2,\"263\":3,\"264\":1,\"267\":1,\"273\":1}}],[\"impossible\",{\"1\":{\"160\":1}}],[\"important\",{\"1\":{\"119\":1,\"154\":1,\"163\":2,\"170\":1,\"237\":1,\"273\":1}}],[\"importing\",{\"1\":{\"8\":1}}],[\"imported\",{\"1\":{\"7\":1,\"38\":1,\"53\":2}}],[\"import\",{\"0\":{\"7\":1,\"8\":1},\"1\":{\"5\":3,\"7\":2,\"8\":2,\"38\":1,\"53\":12,\"64\":1,\"66\":1,\"67\":1,\"69\":2,\"70\":1,\"75\":1,\"78\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"99\":1,\"100\":1,\"101\":1,\"105\":1,\"107\":1,\"108\":1,\"109\":1,\"116\":1,\"123\":1,\"125\":1,\"126\":1,\"198\":1,\"226\":1,\"277\":1,\"284\":1,\"286\":2,\"287\":2,\"289\":1,\"290\":1,\"291\":1,\"294\":1}}],[\"imports\",{\"1\":{\"5\":1,\"9\":1,\"16\":1,\"53\":2}}],[\"impact\",{\"1\":{\"152\":1,\"163\":1,\"289\":1}}],[\"impersonate\",{\"1\":{\"144\":1}}],[\"implementing\",{\"1\":{\"200\":1,\"224\":1}}],[\"implementation\",{\"1\":{\"152\":1,\"200\":1,\"205\":2}}],[\"implemented\",{\"1\":{\"116\":1,\"132\":2,\"269\":1,\"299\":1}}],[\"implements\",{\"1\":{\"92\":1,\"128\":1,\"225\":1}}],[\"implement\",{\"1\":{\"16\":1,\"136\":1,\"196\":2,\"269\":2}}],[\"io\",{\"1\":{\"16\":2}}],[\"iota\",{\"1\":{\"5\":3,\"37\":2,\"51\":2}}],[\"isolation\",{\"0\":{\"269\":1},\"1\":{\"269\":5}}],[\"isolating\",{\"1\":{\"180\":1,\"181\":1}}],[\"isp\",{\"1\":{\"166\":2}}],[\"isn\",{\"1\":{\"149\":2}}],[\"isnumber\",{\"1\":{\"76\":3}}],[\"issuing\",{\"1\":{\"137\":1}}],[\"issues\",{\"1\":{\"181\":1,\"200\":1,\"205\":1,\"210\":1}}],[\"issuer\",{\"1\":{\"137\":6}}],[\"issued\",{\"1\":{\"136\":1}}],[\"is02110\",{\"1\":{\"129\":1}}],[\"isrunning\",{\"1\":{\"35\":2}}],[\"isempty\",{\"1\":{\"17\":2}}],[\"is\",{\"0\":{\"17\":1,\"95\":1,\"144\":1,\"272\":1,\"278\":1,\"279\":1,\"281\":1,\"290\":1,\"291\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1},\"1\":{\"5\":3,\"8\":1,\"14\":1,\"16\":2,\"17\":1,\"18\":2,\"29\":2,\"30\":1,\"31\":4,\"32\":5,\"34\":1,\"38\":4,\"43\":1,\"46\":2,\"51\":2,\"52\":3,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"58\":1,\"59\":1,\"60\":2,\"61\":2,\"63\":1,\"64\":1,\"65\":1,\"69\":3,\"70\":1,\"75\":2,\"76\":1,\"79\":4,\"85\":4,\"86\":2,\"95\":6,\"98\":4,\"109\":1,\"111\":1,\"112\":2,\"114\":3,\"116\":1,\"119\":2,\"121\":1,\"122\":1,\"125\":1,\"128\":5,\"132\":15,\"133\":11,\"134\":5,\"136\":8,\"137\":3,\"139\":1,\"140\":9,\"141\":3,\"142\":3,\"146\":1,\"147\":20,\"149\":15,\"152\":17,\"155\":1,\"157\":1,\"158\":1,\"159\":2,\"160\":4,\"161\":3,\"162\":6,\"163\":7,\"165\":2,\"166\":5,\"170\":5,\"171\":8,\"172\":5,\"175\":1,\"176\":5,\"178\":1,\"180\":2,\"181\":1,\"183\":1,\"187\":4,\"188\":2,\"191\":2,\"192\":3,\"193\":1,\"194\":1,\"196\":6,\"200\":3,\"201\":1,\"205\":3,\"210\":2,\"217\":3,\"224\":1,\"228\":8,\"229\":2,\"232\":2,\"233\":1,\"237\":1,\"239\":1,\"244\":1,\"245\":4,\"246\":4,\"247\":1,\"248\":1,\"249\":2,\"250\":1,\"251\":11,\"258\":8,\"259\":7,\"263\":3,\"264\":1,\"266\":4,\"267\":9,\"269\":8,\"273\":1,\"276\":5,\"278\":5,\"279\":3,\"282\":2,\"283\":2,\"285\":2,\"286\":6,\"287\":3,\"288\":3,\"289\":2,\"290\":1,\"291\":1,\"292\":9,\"299\":2,\"300\":2,\"302\":3}}],[\"ifelse\",{\"1\":{\"63\":1}}],[\"if\",{\"0\":{\"23\":1,\"26\":1,\"101\":1,\"289\":1,\"295\":1,\"296\":1},\"1\":{\"1\":1,\"6\":2,\"8\":1,\"12\":4,\"13\":2,\"14\":1,\"16\":1,\"17\":6,\"18\":8,\"22\":1,\"25\":2,\"29\":2,\"30\":1,\"32\":8,\"33\":1,\"34\":1,\"35\":2,\"39\":1,\"40\":6,\"43\":2,\"47\":1,\"63\":1,\"64\":1,\"65\":2,\"66\":1,\"67\":1,\"85\":12,\"86\":4,\"101\":3,\"109\":2,\"114\":3,\"115\":1,\"134\":2,\"136\":2,\"137\":1,\"140\":2,\"142\":1,\"144\":1,\"147\":3,\"149\":3,\"152\":5,\"154\":3,\"156\":1,\"157\":1,\"160\":1,\"161\":1,\"163\":4,\"166\":8,\"172\":6,\"173\":2,\"178\":1,\"194\":6,\"226\":2,\"228\":2,\"237\":1,\"244\":1,\"251\":1,\"258\":1,\"263\":5,\"264\":1,\"278\":1,\"285\":1,\"286\":1,\"291\":1,\"292\":2,\"302\":2}}],[\"iterating\",{\"1\":{\"225\":1}}],[\"iteration\",{\"1\":{\"65\":1}}],[\"itemname=ms\",{\"1\":{\"192\":1}}],[\"itemname=eamodio\",{\"1\":{\"192\":1}}],[\"itemname=oderwat\",{\"1\":{\"192\":1}}],[\"itemname=golang\",{\"1\":{\"192\":1}}],[\"item\",{\"1\":{\"173\":5}}],[\"items\",{\"1\":{\"173\":4,\"192\":4}}],[\"itself\",{\"1\":{\"132\":1,\"133\":1,\"269\":1}}],[\"its\",{\"1\":{\"18\":1,\"32\":1,\"121\":1,\"134\":2,\"136\":2,\"137\":1,\"149\":7,\"152\":1,\"159\":1,\"161\":1,\"163\":2,\"166\":1,\"170\":1,\"172\":3,\"173\":2,\"180\":1,\"196\":1,\"200\":1,\"210\":1,\"251\":1,\"286\":1}}],[\"it\",{\"1\":{\"1\":2,\"6\":1,\"8\":2,\"17\":2,\"19\":2,\"21\":1,\"25\":1,\"26\":1,\"30\":1,\"31\":3,\"32\":5,\"34\":2,\"36\":1,\"38\":1,\"40\":3,\"41\":1,\"42\":3,\"43\":2,\"47\":1,\"51\":1,\"60\":1,\"64\":1,\"69\":1,\"75\":1,\"81\":1,\"95\":1,\"105\":1,\"114\":2,\"115\":1,\"126\":1,\"128\":1,\"132\":4,\"133\":2,\"134\":5,\"137\":1,\"139\":2,\"140\":3,\"141\":1,\"147\":6,\"149\":3,\"151\":1,\"152\":4,\"155\":1,\"156\":1,\"157\":1,\"159\":1,\"160\":4,\"163\":5,\"165\":1,\"166\":7,\"172\":3,\"173\":4,\"176\":2,\"180\":3,\"181\":2,\"182\":2,\"187\":2,\"188\":3,\"191\":1,\"192\":1,\"196\":5,\"200\":2,\"205\":1,\"210\":2,\"217\":2,\"224\":1,\"244\":1,\"248\":1,\"249\":2,\"251\":2,\"258\":1,\"259\":2,\"263\":2,\"267\":1,\"269\":5,\"272\":1,\"273\":1,\"276\":1,\"278\":3,\"286\":2,\"291\":1,\"292\":3,\"295\":1,\"300\":3,\"302\":1}}],[\"input\",{\"1\":{\"292\":1}}],[\"inheritance\",{\"1\":{\"217\":1}}],[\"inline\",{\"1\":{\"194\":1}}],[\"inbound\",{\"1\":{\"163\":2}}],[\"insertion\",{\"1\":{\"269\":1}}],[\"inserting\",{\"1\":{\"258\":1,\"259\":2}}],[\"inserted\",{\"1\":{\"258\":1,\"269\":1}}],[\"inserts\",{\"1\":{\"140\":1,\"217\":1,\"269\":1}}],[\"inspect\",{\"1\":{\"193\":1}}],[\"insights\",{\"1\":{\"192\":1}}],[\"installing\",{\"0\":{\"202\":1,\"207\":1}}],[\"install\",{\"1\":{\"201\":1,\"202\":1,\"206\":1}}],[\"installed\",{\"1\":{\"136\":1}}],[\"instructions\",{\"1\":{\"149\":1,\"205\":1}}],[\"instead\",{\"0\":{\"19\":1},\"1\":{\"9\":1,\"17\":1,\"24\":1,\"25\":1,\"29\":1,\"132\":1,\"263\":2,\"273\":1}}],[\"indefinitely\",{\"0\":{\"289\":1}}],[\"indentation\",{\"1\":{\"192\":2}}],[\"indent\",{\"1\":{\"192\":4}}],[\"indeed\",{\"1\":{\"147\":1}}],[\"independent\",{\"1\":{\"141\":1,\"180\":1,\"286\":1}}],[\"indexed\",{\"1\":{\"251\":1}}],[\"indexes\",{\"0\":{\"263\":1,\"265\":1},\"1\":{\"217\":1,\"237\":1,\"263\":6,\"264\":1,\"267\":3}}],[\"index\",{\"0\":{\"250\":1,\"251\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"258\":1,\"259\":1,\"261\":1,\"262\":1,\"264\":1},\"1\":{\"77\":1,\"217\":1,\"250\":2,\"251\":23,\"253\":2,\"254\":2,\"256\":2,\"258\":13,\"259\":21,\"261\":2,\"262\":2,\"263\":27,\"264\":7,\"266\":2,\"267\":2}}],[\"individuals\",{\"1\":{\"136\":1}}],[\"indicates\",{\"1\":{\"132\":16,\"147\":7}}],[\"indicative\",{\"1\":{\"132\":1}}],[\"indicating\",{\"1\":{\"19\":1,\"132\":3,\"147\":1,\"149\":1,\"163\":1}}],[\"infrequently\",{\"1\":{\"263\":1}}],[\"infrastructure\",{\"1\":{\"136\":1,\"163\":1}}],[\"infer\",{\"1\":{\"51\":1,\"56\":1}}],[\"informing\",{\"1\":{\"152\":1}}],[\"information\",{\"1\":{\"30\":2,\"67\":1,\"119\":1,\"131\":2,\"132\":6,\"136\":2,\"137\":6,\"139\":2,\"140\":3,\"163\":1,\"166\":7,\"194\":1}}],[\"info\",{\"1\":{\"40\":1,\"131\":1,\"182\":2,\"192\":4,\"235\":1,\"236\":1,\"237\":1,\"245\":1,\"250\":1}}],[\"inmain\",{\"1\":{\"40\":1}}],[\"initiate\",{\"1\":{\"149\":1}}],[\"initiated\",{\"1\":{\"135\":1,\"149\":1}}],[\"initiates\",{\"1\":{\"134\":2,\"149\":1}}],[\"initial\",{\"1\":{\"25\":3,\"51\":1,\"60\":1,\"149\":1,\"155\":1}}],[\"initializing\",{\"0\":{\"23\":1},\"1\":{\"21\":1,\"24\":1,\"25\":1,\"38\":1,\"287\":2}}],[\"initialized\",{\"1\":{\"22\":1}}],[\"initialize\",{\"0\":{\"21\":1,\"24\":1,\"25\":1},\"1\":{\"56\":2,\"74\":2,\"79\":1,\"98\":2,\"99\":2,\"100\":2,\"101\":1,\"105\":2,\"279\":2}}],[\"initialization\",{\"0\":{\"20\":1},\"1\":{\"44\":2,\"53\":1,\"60\":1,\"65\":1,\"279\":2,\"286\":2,\"294\":1}}],[\"init\",{\"1\":{\"38\":4,\"44\":2,\"53\":1}}],[\"inner\",{\"0\":{\"233\":1},\"1\":{\"16\":1,\"233\":4,\"237\":5}}],[\"incomplete\",{\"1\":{\"200\":1,\"205\":2}}],[\"incoming\",{\"1\":{\"163\":3}}],[\"inconsistent\",{\"1\":{\"181\":1,\"259\":1}}],[\"incorrect\",{\"1\":{\"14\":1,\"132\":3,\"168\":1,\"173\":1}}],[\"increasing\",{\"1\":{\"163\":1,\"210\":1}}],[\"increased\",{\"1\":{\"163\":1}}],[\"increase\",{\"1\":{\"90\":1,\"149\":1,\"163\":2,\"258\":1,\"259\":4,\"263\":1}}],[\"incremented\",{\"1\":{\"140\":1}}],[\"increment\",{\"1\":{\"84\":1}}],[\"includes\",{\"1\":{\"149\":2,\"180\":1}}],[\"include\",{\"1\":{\"21\":1,\"72\":2,\"132\":2,\"136\":1,\"196\":1}}],[\"including\",{\"1\":{\"1\":1,\"106\":1,\"137\":1,\"143\":1,\"160\":1,\"193\":1,\"200\":2,\"205\":2,\"217\":1,\"225\":4,\"249\":1}}],[\"involves\",{\"1\":{\"272\":1}}],[\"invocation\",{\"1\":{\"11\":1}}],[\"invalid\",{\"1\":{\"12\":2,\"64\":1,\"147\":1}}],[\"in\",{\"0\":{\"16\":1,\"36\":1,\"37\":1,\"41\":1,\"44\":1,\"281\":1,\"286\":1},\"1\":{\"1\":1,\"4\":1,\"8\":2,\"9\":1,\"11\":1,\"18\":1,\"19\":1,\"21\":1,\"32\":3,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"39\":2,\"40\":2,\"41\":1,\"44\":1,\"47\":1,\"49\":1,\"69\":1,\"70\":1,\"72\":3,\"81\":1,\"94\":1,\"96\":1,\"100\":1,\"103\":1,\"119\":4,\"128\":2,\"129\":1,\"132\":2,\"134\":1,\"135\":2,\"136\":3,\"137\":4,\"140\":4,\"141\":3,\"147\":6,\"149\":2,\"152\":4,\"155\":1,\"157\":1,\"159\":1,\"163\":4,\"165\":1,\"166\":5,\"170\":1,\"171\":3,\"172\":11,\"173\":2,\"176\":2,\"177\":1,\"178\":1,\"180\":1,\"181\":2,\"189\":1,\"193\":1,\"194\":4,\"196\":3,\"200\":4,\"205\":4,\"210\":3,\"212\":4,\"213\":2,\"214\":1,\"215\":1,\"228\":5,\"229\":3,\"232\":1,\"237\":2,\"245\":2,\"250\":1,\"251\":1,\"258\":2,\"259\":4,\"263\":3,\"264\":1,\"266\":1,\"267\":3,\"269\":7,\"273\":3,\"279\":2,\"281\":1,\"286\":2,\"288\":1,\"290\":1,\"292\":2,\"295\":1,\"296\":2,\"300\":1,\"302\":1}}],[\"intcomparator\",{\"1\":{\"226\":3}}],[\"intranet\",{\"1\":{\"176\":2,\"177\":4,\"178\":1}}],[\"introduces\",{\"1\":{\"168\":1,\"200\":1}}],[\"introduced\",{\"1\":{\"94\":1,\"157\":1,\"264\":1}}],[\"introduce\",{\"1\":{\"36\":1}}],[\"introduction\",{\"0\":{\"1\":1,\"111\":1,\"119\":1,\"165\":1,\"170\":1,\"175\":1,\"180\":1,\"196\":1,\"200\":1,\"205\":1,\"210\":1,\"217\":1,\"224\":1},\"1\":{\"49\":1,\"298\":1}}],[\"intuintfloat32stringstruct\",{\"1\":{\"302\":1}}],[\"intuint\",{\"1\":{\"72\":1}}],[\"intelligence\",{\"1\":{\"163\":1}}],[\"integratedterminal\",{\"1\":{\"194\":1}}],[\"integrates\",{\"1\":{\"181\":1,\"200\":2,\"205\":1}}],[\"integration\",{\"1\":{\"181\":2,\"200\":2}}],[\"integrity\",{\"1\":{\"133\":1,\"151\":1,\"250\":1}}],[\"integer\",{\"1\":{\"72\":1,\"276\":1}}],[\"integers\",{\"0\":{\"72\":1},\"1\":{\"72\":7,\"225\":1}}],[\"interference\",{\"1\":{\"269\":1}}],[\"interface\",{\"0\":{\"92\":1,\"120\":1},\"1\":{\"55\":2,\"59\":2,\"82\":1,\"92\":2,\"119\":1,\"120\":3,\"129\":3,\"200\":2,\"201\":1,\"205\":2,\"206\":1}}],[\"interfaces\",{\"1\":{\"16\":1,\"36\":1,\"59\":1}}],[\"interceptors\",{\"1\":{\"210\":1}}],[\"interconnection\",{\"1\":{\"159\":1}}],[\"interval\",{\"1\":{\"149\":1}}],[\"interview\",{\"1\":{\"1\":2}}],[\"intermediate\",{\"1\":{\"140\":1,\"269\":1}}],[\"internet\",{\"1\":{\"136\":2,\"139\":2,\"140\":8,\"160\":1,\"162\":1,\"166\":1,\"177\":1}}],[\"internalconsole\",{\"1\":{\"194\":2}}],[\"internalconsoleoptions\",{\"1\":{\"194\":1}}],[\"internally\",{\"1\":{\"177\":1,\"299\":1,\"300\":1}}],[\"internal\",{\"1\":{\"16\":1,\"82\":1,\"132\":1,\"175\":1,\"178\":1,\"194\":1,\"267\":3,\"274\":1}}],[\"interactive\",{\"1\":{\"128\":1}}],[\"interrupt\",{\"1\":{\"65\":1}}],[\"int16uint16\",{\"1\":{\"72\":1}}],[\"int16\",{\"1\":{\"37\":1,\"82\":1}}],[\"int8uint8int16uint16int32uint32int64uint64intuintuintptr\",{\"1\":{\"276\":1}}],[\"int8uint8\",{\"1\":{\"72\":1}}],[\"int8\",{\"1\":{\"37\":1,\"82\":1,\"291\":1}}],[\"int64uint64\",{\"1\":{\"72\":1}}],[\"int64\",{\"1\":{\"35\":1,\"37\":1,\"82\":1}}],[\"int32uint32\",{\"1\":{\"72\":1}}],[\"int32\",{\"1\":{\"35\":2,\"37\":1,\"55\":2,\"72\":1,\"82\":1,\"282\":1}}],[\"into\",{\"1\":{\"7\":1,\"16\":1,\"61\":1,\"94\":1,\"128\":2,\"134\":1,\"140\":2,\"141\":1,\"152\":1,\"153\":1,\"168\":1,\"170\":1,\"172\":1,\"180\":2,\"298\":1}}],[\"int\",{\"0\":{\"72\":1},\"1\":{\"5\":2,\"6\":4,\"11\":4,\"13\":1,\"16\":4,\"17\":4,\"37\":2,\"39\":2,\"41\":2,\"64\":1,\"65\":1,\"67\":3,\"72\":1,\"77\":1,\"78\":1,\"79\":2,\"81\":1,\"82\":1,\"98\":3,\"106\":1,\"107\":1,\"108\":1,\"109\":2,\"226\":4,\"279\":3,\"286\":4,\"287\":2,\"289\":1,\"291\":1,\"294\":2,\"295\":2,\"296\":2}}],[\"affect\",{\"1\":{\"286\":1,\"292\":2}}],[\"affected\",{\"1\":{\"269\":1}}],[\"after\",{\"0\":{\"302\":1},\"1\":{\"11\":1,\"64\":2,\"69\":1,\"132\":1,\"135\":1,\"137\":2,\"149\":2,\"152\":2,\"163\":1,\"172\":3,\"173\":1,\"194\":2,\"237\":1,\"259\":2,\"291\":2,\"298\":1,\"302\":2}}],[\"aggregate\",{\"0\":{\"249\":1},\"1\":{\"247\":1}}],[\"age\",{\"1\":{\"219\":1,\"220\":1,\"228\":3,\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"245\":6,\"246\":7,\"247\":5,\"248\":3}}],[\"against\",{\"1\":{\"163\":2,\"168\":1}}],[\"again\",{\"1\":{\"134\":1,\"258\":1,\"259\":1}}],[\"a2\",{\"1\":{\"172\":1}}],[\"aa\",{\"1\":{\"172\":1}}],[\"aaaa\",{\"1\":{\"167\":1}}],[\"automated\",{\"1\":{\"196\":1}}],[\"automatic\",{\"1\":{\"47\":1,\"143\":1,\"217\":1}}],[\"automatically\",{\"1\":{\"38\":1,\"60\":1,\"64\":1,\"78\":1,\"132\":1,\"167\":1,\"196\":1,\"279\":1,\"288\":1,\"298\":1,\"300\":1}}],[\"authorship\",{\"1\":{\"192\":1}}],[\"authority\",{\"1\":{\"137\":1}}],[\"authorities\",{\"1\":{\"136\":1}}],[\"authoritative\",{\"1\":{\"132\":2,\"136\":1,\"166\":3}}],[\"authenticate\",{\"1\":{\"132\":1}}],[\"authentication\",{\"1\":{\"132\":1,\"133\":1,\"140\":1}}],[\"aware\",{\"1\":{\"117\":1}}],[\"a++\",{\"1\":{\"84\":1}}],[\"achieve\",{\"1\":{\"193\":1}}],[\"achieving\",{\"1\":{\"177\":1,\"273\":1}}],[\"acked\",{\"1\":{\"152\":1}}],[\"ack=2\",{\"1\":{\"152\":1}}],[\"ack=y+2\",{\"1\":{\"149\":1}}],[\"ack=y+1\",{\"1\":{\"149\":1}}],[\"ack=1\",{\"1\":{\"147\":1}}],[\"acknowledges\",{\"1\":{\"149\":1}}],[\"acknowledge\",{\"1\":{\"149\":3}}],[\"acknowledgments\",{\"1\":{\"150\":1,\"157\":2}}],[\"acknowledgment\",{\"1\":{\"147\":4,\"149\":1,\"151\":1,\"152\":6}}],[\"ack\",{\"1\":{\"147\":2,\"149\":5,\"151\":1,\"152\":5,\"153\":1,\"163\":5}}],[\"accuracy\",{\"1\":{\"269\":1}}],[\"according\",{\"1\":{\"176\":1,\"251\":1}}],[\"account\",{\"1\":{\"136\":2}}],[\"accessing\",{\"1\":{\"132\":1,\"165\":1,\"225\":1}}],[\"accessed\",{\"1\":{\"35\":1,\"77\":1,\"80\":1,\"132\":2,\"267\":1}}],[\"access\",{\"1\":{\"16\":1,\"132\":1,\"137\":1,\"140\":1,\"144\":1,\"165\":1,\"170\":1,\"178\":1,\"251\":1,\"267\":2,\"273\":2}}],[\"accept\",{\"1\":{\"173\":1}}],[\"acceptance\",{\"1\":{\"147\":1}}],[\"acceptable\",{\"1\":{\"5\":1}}],[\"accepted\",{\"1\":{\"1\":1,\"132\":4}}],[\"across\",{\"1\":{\"120\":1,\"163\":1,\"180\":1,\"181\":2}}],[\"actively\",{\"1\":{\"149\":1,\"173\":1}}],[\"active\",{\"1\":{\"140\":2,\"181\":1,\"200\":2}}],[\"activities\",{\"1\":{\"136\":1}}],[\"action\",{\"1\":{\"64\":2,\"115\":1}}],[\"actions\",{\"1\":{\"64\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1}}],[\"acts\",{\"1\":{\"132\":1}}],[\"actually\",{\"1\":{\"109\":1,\"289\":1,\"292\":1}}],[\"among\",{\"1\":{\"119\":1}}],[\"amount\",{\"1\":{\"39\":1,\"210\":1,\"263\":1,\"264\":1,\"267\":1}}],[\"ambiguity\",{\"1\":{\"16\":1}}],[\"abnormalities\",{\"1\":{\"173\":1}}],[\"above\",{\"1\":{\"166\":1,\"176\":1}}],[\"about\",{\"1\":{\"139\":1,\"140\":1,\"143\":1,\"163\":2,\"194\":1,\"229\":1,\"272\":1,\"286\":2}}],[\"abbreviated\",{\"1\":{\"147\":2}}],[\"absolute\",{\"1\":{\"225\":1}}],[\"absolutely\",{\"1\":{\"32\":1}}],[\"absorb\",{\"1\":{\"163\":1}}],[\"abstractlist\",{\"1\":{\"36\":2}}],[\"ability\",{\"1\":{\"16\":1}}],[\"apache\",{\"1\":{\"180\":1}}],[\"api\",{\"1\":{\"31\":2,\"120\":1,\"196\":4,\"200\":2,\"201\":1,\"203\":1,\"205\":2,\"206\":1,\"210\":3,\"217\":3}}],[\"appear\",{\"1\":{\"189\":1}}],[\"appending\",{\"0\":{\"108\":1}}],[\"append\",{\"1\":{\"6\":2,\"17\":4,\"37\":2,\"39\":2,\"78\":1,\"108\":6,\"109\":1,\"289\":1}}],[\"appropriate\",{\"1\":{\"128\":1}}],[\"approximate\",{\"1\":{\"39\":1,\"47\":1}}],[\"approaches\",{\"1\":{\"43\":1,\"163\":1}}],[\"approach\",{\"1\":{\"12\":1,\"32\":1,\"43\":2,\"181\":1}}],[\"applications\",{\"1\":{\"128\":2,\"160\":2,\"180\":2,\"196\":2,\"200\":1,\"210\":1}}],[\"application\",{\"1\":{\"32\":2,\"42\":1,\"128\":1,\"129\":7,\"136\":1,\"149\":2,\"178\":1,\"180\":2}}],[\"attribute\",{\"1\":{\"228\":1}}],[\"attributes\",{\"1\":{\"82\":1}}],[\"attempts\",{\"1\":{\"163\":1,\"168\":1}}],[\"attention\",{\"0\":{\"42\":1}}],[\"attack\",{\"0\":{\"173\":1},\"1\":{\"163\":4,\"168\":14,\"173\":3}}],[\"attacks\",{\"0\":{\"163\":1,\"168\":1},\"1\":{\"163\":6,\"168\":1}}],[\"attackers\",{\"1\":{\"163\":1,\"173\":3}}],[\"attacker\",{\"1\":{\"144\":2,\"163\":3}}],[\"attach\",{\"1\":{\"137\":1,\"194\":1}}],[\"at\",{\"0\":{\"289\":1},\"1\":{\"16\":1,\"35\":1,\"60\":1,\"67\":1,\"115\":2,\"128\":1,\"134\":1,\"137\":1,\"141\":1,\"149\":1,\"156\":1,\"168\":1,\"173\":1,\"175\":1,\"192\":2,\"193\":1,\"194\":1,\"266\":1,\"269\":6,\"273\":1,\"288\":1}}],[\"atomic\",{\"0\":{\"35\":1},\"1\":{\"7\":2,\"35\":5}}],[\"average\",{\"1\":{\"249\":1}}],[\"avg\",{\"1\":{\"247\":1,\"249\":1}}],[\"available\",{\"1\":{\"16\":1,\"153\":1,\"181\":1}}],[\"avoiding\",{\"1\":{\"181\":1,\"210\":1,\"273\":1}}],[\"avoidance\",{\"1\":{\"154\":3,\"156\":1}}],[\"avoids\",{\"1\":{\"18\":1,\"26\":1,\"196\":1,\"210\":1}}],[\"avoid\",{\"0\":{\"5\":1,\"36\":1,\"37\":1,\"38\":1,\"44\":1},\"1\":{\"8\":1,\"9\":2,\"10\":2,\"21\":1,\"29\":1,\"30\":1,\"31\":2,\"33\":1,\"34\":1,\"36\":1,\"37\":1,\"38\":1,\"42\":1,\"47\":1,\"117\":1,\"263\":2,\"291\":1,\"292\":1}}],[\"art\",{\"1\":{\"231\":1,\"233\":2,\"235\":2,\"236\":2,\"237\":2}}],[\"around\",{\"1\":{\"230\":1}}],[\"args\",{\"1\":{\"194\":5}}],[\"arguments\",{\"1\":{\"193\":1,\"194\":1}}],[\"arp\",{\"0\":{\"169\":1,\"171\":1,\"173\":1},\"1\":{\"129\":1,\"170\":1,\"171\":8,\"172\":8,\"173\":28}}],[\"arrived\",{\"1\":{\"160\":2}}],[\"arrives\",{\"1\":{\"135\":1}}],[\"arr\",{\"1\":{\"106\":1}}],[\"arrays\",{\"0\":{\"77\":1,\"288\":1},\"1\":{\"77\":1,\"78\":1,\"274\":1,\"279\":3,\"288\":1}}],[\"array\",{\"0\":{\"77\":1},\"1\":{\"65\":4,\"77\":1,\"94\":1,\"194\":2,\"274\":1,\"286\":2,\"288\":1,\"292\":1}}],[\"arrangement\",{\"1\":{\"300\":1}}],[\"arrange\",{\"1\":{\"11\":1}}],[\"arithmetic\",{\"0\":{\"84\":1}}],[\"arise\",{\"1\":{\"36\":1}}],[\"architecture\",{\"1\":{\"72\":1,\"136\":1}}],[\"areas\",{\"1\":{\"200\":1}}],[\"area\",{\"1\":{\"5\":2,\"172\":3,\"175\":2}}],[\"are\",{\"0\":{\"286\":1,\"298\":1},\"1\":{\"1\":1,\"2\":1,\"16\":1,\"25\":1,\"29\":5,\"36\":1,\"43\":1,\"49\":3,\"72\":3,\"73\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"80\":1,\"82\":1,\"85\":2,\"86\":2,\"103\":1,\"105\":1,\"109\":1,\"128\":1,\"136\":4,\"137\":2,\"140\":1,\"142\":2,\"151\":1,\"152\":2,\"157\":1,\"161\":1,\"163\":1,\"170\":1,\"171\":1,\"172\":6,\"175\":1,\"177\":1,\"180\":1,\"210\":1,\"228\":2,\"229\":1,\"230\":1,\"233\":2,\"235\":2,\"236\":2,\"237\":4,\"251\":2,\"258\":2,\"259\":4,\"263\":1,\"266\":1,\"267\":8,\"269\":3,\"276\":2,\"277\":1,\"279\":2,\"281\":2,\"285\":1,\"286\":4,\"288\":1}}],[\"alan\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"along\",{\"1\":{\"180\":1}}],[\"algorithmic\",{\"1\":{\"225\":1}}],[\"algorithms\",{\"1\":{\"154\":1}}],[\"algorithm\",{\"1\":{\"135\":1,\"137\":3,\"154\":3,\"156\":1,\"157\":3,\"225\":1,\"226\":2,\"300\":1}}],[\"alter\",{\"1\":{\"255\":1}}],[\"alternatively\",{\"1\":{\"99\":1,\"100\":1,\"144\":1}}],[\"although\",{\"1\":{\"60\":1,\"135\":1}}],[\"always\",{\"1\":{\"33\":1,\"139\":1}}],[\"already\",{\"1\":{\"14\":1,\"35\":2,\"114\":2,\"263\":1}}],[\"alleviating\",{\"1\":{\"177\":1}}],[\"allocate\",{\"1\":{\"273\":3,\"287\":1}}],[\"allocated\",{\"1\":{\"163\":2,\"286\":1}}],[\"allocating\",{\"1\":{\"163\":1}}],[\"allocation\",{\"1\":{\"47\":1,\"170\":1,\"273\":1}}],[\"allowed\",{\"1\":{\"161\":1,\"251\":2}}],[\"allowable\",{\"1\":{\"147\":1}}],[\"allow\",{\"1\":{\"32\":1,\"40\":1,\"81\":1,\"149\":1,\"173\":1}}],[\"allows\",{\"1\":{\"30\":1,\"53\":1,\"67\":1,\"163\":1,\"165\":1,\"177\":1,\"180\":1,\"269\":2}}],[\"allowing\",{\"1\":{\"16\":1,\"40\":1,\"140\":1,\"147\":1,\"152\":1,\"153\":1,\"181\":1,\"196\":1,\"200\":2,\"205\":2,\"217\":1,\"224\":1}}],[\"all\",{\"0\":{\"23\":1,\"240\":1},\"1\":{\"9\":1,\"16\":1,\"32\":1,\"40\":2,\"43\":1,\"72\":1,\"82\":1,\"121\":2,\"124\":1,\"142\":1,\"152\":1,\"161\":1,\"162\":3,\"168\":1,\"172\":1,\"175\":1,\"177\":1,\"178\":1,\"200\":2,\"205\":2,\"210\":1,\"214\":2,\"228\":2,\"229\":3,\"230\":1,\"249\":1,\"259\":1,\"264\":2,\"266\":2,\"267\":6,\"269\":1}}],[\"alias\",{\"1\":{\"8\":2,\"55\":1,\"167\":3,\"282\":2}}],[\"aliases\",{\"0\":{\"8\":1},\"1\":{\"8\":1,\"53\":2}}],[\"alphabetically\",{\"1\":{\"7\":1}}],[\"also\",{\"1\":{\"1\":1,\"5\":1,\"8\":1,\"29\":1,\"53\":2,\"72\":1,\"115\":1,\"121\":1,\"122\":1,\"128\":1,\"131\":1,\"136\":2,\"147\":1,\"149\":2,\"158\":1,\"163\":1,\"170\":1,\"176\":1,\"228\":1,\"229\":1,\"235\":1,\"236\":1,\"237\":1,\"267\":1,\"269\":3,\"286\":2}}],[\"adams\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"adhering\",{\"1\":{\"210\":1}}],[\"advantages\",{\"0\":{\"177\":1},\"1\":{\"181\":1,\"210\":1,\"250\":1,\"258\":2,\"259\":2}}],[\"advantage\",{\"1\":{\"163\":1,\"292\":2}}],[\"advance\",{\"1\":{\"39\":2,\"47\":1}}],[\"advanced\",{\"1\":{\"1\":1}}],[\"adsp\",{\"1\":{\"128\":1}}],[\"adjacent\",{\"1\":{\"128\":2}}],[\"adjusts\",{\"1\":{\"153\":1,\"194\":1}}],[\"adjustment\",{\"1\":{\"147\":1}}],[\"adjust\",{\"1\":{\"78\":1,\"141\":1}}],[\"admin\",{\"1\":{\"21\":1,\"22\":1}}],[\"added\",{\"1\":{\"288\":1}}],[\"addressable\",{\"1\":{\"278\":2}}],[\"addresses\",{\"1\":{\"132\":1,\"140\":2,\"143\":3,\"144\":1,\"163\":1,\"165\":3,\"168\":1,\"170\":2,\"172\":2,\"173\":1,\"175\":2,\"177\":3,\"181\":1,\"225\":1,\"274\":1,\"300\":1}}],[\"addressed\",{\"0\":{\"274\":1},\"1\":{\"129\":1,\"274\":2}}],[\"address\",{\"1\":{\"81\":2,\"89\":1,\"109\":1,\"131\":2,\"139\":1,\"140\":4,\"143\":2,\"144\":1,\"165\":3,\"166\":5,\"167\":2,\"170\":13,\"171\":23,\"172\":22,\"173\":3,\"175\":3,\"176\":6,\"177\":1,\"272\":4,\"278\":2,\"286\":3,\"292\":1}}],[\"adds\",{\"0\":{\"289\":1},\"1\":{\"36\":1,\"149\":1,\"152\":1}}],[\"addition\",{\"1\":{\"84\":1,\"136\":1}}],[\"additionally\",{\"1\":{\"36\":1,\"40\":1,\"131\":1}}],[\"additional\",{\"1\":{\"30\":1,\"140\":1,\"163\":1,\"200\":1,\"247\":1}}],[\"adding\",{\"1\":{\"30\":1,\"156\":1}}],[\"add2\",{\"1\":{\"17\":2}}],[\"add1\",{\"1\":{\"17\":2}}],[\"add\",{\"1\":{\"5\":2,\"36\":3,\"43\":2,\"99\":1,\"109\":1,\"124\":1,\"125\":1,\"173\":1,\"184\":2,\"188\":1,\"255\":1,\"291\":1,\"301\":1}}],[\"answer\",{\"1\":{\"272\":1,\"273\":1,\"274\":1,\"276\":1,\"277\":1,\"278\":1,\"279\":1,\"281\":1,\"286\":1,\"287\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"294\":1,\"295\":1,\"296\":1,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1}}],[\"annotations\",{\"1\":{\"192\":1}}],[\"announcements\",{\"1\":{\"143\":1}}],[\"any\",{\"1\":{\"92\":1,\"132\":2,\"139\":1,\"163\":1,\"166\":1,\"180\":2,\"181\":1,\"226\":2,\"228\":3,\"245\":2,\"269\":1,\"283\":1,\"287\":1,\"294\":1}}],[\"animal\",{\"1\":{\"55\":1,\"80\":2,\"214\":1}}],[\"another\",{\"1\":{\"43\":1,\"74\":1,\"109\":1,\"144\":1,\"166\":1,\"168\":1,\"269\":1}}],[\"analysis\",{\"1\":{\"26\":1,\"302\":1}}],[\"an\",{\"0\":{\"16\":1,\"294\":1,\"295\":1,\"296\":1},\"1\":{\"5\":1,\"7\":1,\"8\":2,\"17\":2,\"25\":1,\"32\":1,\"36\":4,\"38\":1,\"40\":1,\"51\":1,\"55\":2,\"60\":2,\"75\":1,\"77\":1,\"92\":1,\"93\":1,\"112\":1,\"132\":3,\"134\":2,\"136\":1,\"137\":1,\"141\":4,\"144\":1,\"147\":1,\"149\":2,\"152\":2,\"163\":6,\"167\":1,\"168\":8,\"170\":1,\"171\":7,\"172\":2,\"180\":2,\"181\":1,\"191\":1,\"194\":5,\"200\":3,\"205\":2,\"250\":1,\"251\":3,\"259\":1,\"263\":5,\"264\":1,\"272\":2,\"273\":1,\"276\":1,\"278\":2,\"279\":1,\"282\":2,\"286\":1,\"288\":1,\"289\":1,\"292\":1,\"294\":1,\"296\":3}}],[\"and\",{\"0\":{\"15\":1,\"47\":1,\"107\":1,\"113\":1,\"121\":1,\"129\":1,\"246\":1,\"272\":1,\"274\":1,\"278\":1,\"281\":1,\"286\":1,\"287\":1,\"288\":1},\"1\":{\"1\":4,\"4\":1,\"5\":1,\"7\":1,\"9\":1,\"11\":1,\"12\":2,\"16\":7,\"19\":1,\"25\":1,\"26\":1,\"30\":1,\"32\":9,\"35\":1,\"36\":3,\"38\":1,\"39\":1,\"41\":1,\"42\":1,\"44\":1,\"46\":1,\"47\":1,\"51\":2,\"52\":1,\"53\":2,\"56\":2,\"58\":1,\"63\":1,\"64\":1,\"65\":3,\"69\":1,\"70\":1,\"72\":3,\"74\":1,\"75\":1,\"76\":1,\"79\":1,\"81\":1,\"87\":1,\"98\":2,\"99\":2,\"106\":1,\"107\":2,\"115\":1,\"119\":1,\"120\":1,\"121\":2,\"124\":1,\"125\":1,\"128\":5,\"129\":1,\"131\":1,\"132\":5,\"133\":3,\"134\":5,\"135\":1,\"136\":18,\"137\":9,\"139\":4,\"140\":10,\"141\":3,\"142\":2,\"143\":3,\"144\":2,\"147\":7,\"149\":7,\"150\":1,\"151\":2,\"152\":6,\"153\":1,\"155\":1,\"156\":2,\"159\":1,\"160\":2,\"162\":3,\"163\":9,\"165\":1,\"166\":1,\"168\":3,\"170\":5,\"172\":10,\"173\":2,\"175\":2,\"176\":3,\"177\":1,\"178\":1,\"180\":5,\"181\":7,\"187\":2,\"188\":1,\"189\":1,\"191\":1,\"192\":6,\"193\":5,\"196\":8,\"200\":13,\"201\":1,\"205\":10,\"206\":1,\"210\":7,\"217\":13,\"224\":1,\"225\":21,\"228\":4,\"229\":1,\"232\":2,\"237\":2,\"245\":2,\"246\":1,\"247\":2,\"250\":1,\"251\":1,\"258\":11,\"259\":12,\"263\":7,\"264\":8,\"266\":3,\"267\":9,\"269\":5,\"272\":2,\"273\":8,\"274\":1,\"276\":1,\"278\":1,\"279\":11,\"281\":1,\"286\":6,\"287\":2,\"288\":2,\"292\":3,\"298\":1,\"302\":1}}],[\"asc|desc\",{\"1\":{\"243\":1}}],[\"ascending\",{\"1\":{\"226\":1}}],[\"ascii\",{\"1\":{\"72\":1,\"283\":2}}],[\"asynchronous\",{\"1\":{\"194\":1}}],[\"asynchronously\",{\"1\":{\"44\":1}}],[\"asymmetric\",{\"1\":{\"134\":1}}],[\"associated\",{\"1\":{\"276\":1}}],[\"associations\",{\"1\":{\"217\":3}}],[\"assume\",{\"1\":{\"152\":1,\"228\":1}}],[\"assuming\",{\"1\":{\"87\":1}}],[\"assembles\",{\"1\":{\"128\":1}}],[\"assertions\",{\"0\":{\"33\":1},\"1\":{\"33\":1}}],[\"assigned\",{\"1\":{\"176\":1}}],[\"assigns\",{\"1\":{\"172\":1}}],[\"assign\",{\"0\":{\"295\":1},\"1\":{\"88\":1,\"96\":1,\"109\":1,\"176\":1,\"279\":2,\"302\":1}}],[\"assignment\",{\"0\":{\"88\":1},\"1\":{\"38\":2,\"295\":1}}],[\"assignments\",{\"1\":{\"6\":1}}],[\"assigning\",{\"1\":{\"16\":1}}],[\"as\",{\"0\":{\"15\":1,\"96\":1},\"1\":{\"5\":1,\"10\":2,\"14\":1,\"16\":1,\"29\":1,\"30\":3,\"31\":2,\"32\":2,\"37\":1,\"41\":1,\"49\":1,\"51\":1,\"79\":1,\"81\":1,\"88\":1,\"96\":2,\"98\":1,\"113\":2,\"128\":1,\"132\":3,\"136\":1,\"137\":2,\"140\":1,\"147\":5,\"149\":2,\"152\":2,\"170\":2,\"171\":2,\"172\":1,\"173\":1,\"176\":3,\"180\":1,\"183\":1,\"189\":1,\"193\":2,\"194\":2,\"196\":1,\"201\":1,\"206\":1,\"210\":3,\"217\":2,\"225\":5,\"228\":1,\"229\":1,\"237\":2,\"245\":2,\"249\":2,\"269\":2,\"273\":2,\"279\":5,\"286\":6,\"291\":1}}],[\"a\",{\"0\":{\"15\":1,\"17\":1,\"23\":1,\"26\":1,\"98\":1,\"99\":1,\"101\":1,\"102\":1,\"112\":1,\"114\":1,\"198\":1,\"203\":1,\"208\":1,\"272\":2,\"278\":2,\"279\":1,\"294\":1,\"295\":1,\"296\":1,\"300\":1,\"302\":1},\"1\":{\"1\":1,\"5\":7,\"8\":1,\"13\":5,\"14\":3,\"16\":5,\"17\":3,\"19\":2,\"21\":1,\"24\":1,\"25\":1,\"26\":2,\"30\":1,\"31\":2,\"32\":2,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"38\":2,\"42\":1,\"43\":2,\"51\":3,\"55\":2,\"63\":1,\"64\":3,\"66\":1,\"67\":1,\"69\":1,\"70\":1,\"73\":1,\"74\":2,\"75\":2,\"77\":1,\"79\":4,\"80\":3,\"81\":4,\"84\":7,\"85\":7,\"86\":4,\"87\":6,\"88\":31,\"98\":2,\"99\":1,\"100\":3,\"101\":1,\"102\":1,\"107\":3,\"109\":2,\"111\":2,\"112\":2,\"114\":7,\"115\":1,\"117\":1,\"119\":2,\"120\":3,\"121\":1,\"122\":2,\"125\":1,\"126\":1,\"128\":1,\"131\":3,\"132\":14,\"134\":5,\"135\":3,\"136\":8,\"137\":4,\"139\":1,\"140\":2,\"141\":4,\"143\":1,\"144\":5,\"146\":1,\"147\":4,\"149\":9,\"152\":8,\"153\":1,\"155\":1,\"156\":2,\"158\":1,\"159\":2,\"160\":1,\"162\":3,\"163\":19,\"165\":6,\"166\":2,\"167\":1,\"168\":5,\"170\":1,\"172\":15,\"173\":6,\"175\":3,\"176\":6,\"177\":2,\"180\":6,\"181\":4,\"182\":1,\"183\":2,\"187\":2,\"188\":2,\"189\":1,\"191\":1,\"192\":5,\"193\":1,\"194\":6,\"196\":6,\"200\":6,\"205\":4,\"210\":3,\"217\":2,\"224\":4,\"225\":2,\"228\":9,\"229\":3,\"233\":3,\"237\":2,\"245\":1,\"250\":2,\"251\":5,\"258\":1,\"259\":3,\"263\":15,\"264\":7,\"266\":5,\"267\":5,\"269\":12,\"272\":1,\"273\":1,\"276\":4,\"277\":1,\"278\":7,\"279\":6,\"283\":1,\"284\":4,\"286\":5,\"287\":1,\"288\":2,\"289\":1,\"290\":1,\"292\":3,\"295\":1,\"296\":3,\"298\":1,\"299\":1,\"300\":2,\"302\":1}}],[\"aims\",{\"1\":{\"1\":1,\"200\":1,\"205\":1,\"224\":1}}],[\"b+tree\",{\"1\":{\"267\":1}}],[\"b+\",{\"0\":{\"267\":1},\"1\":{\"267\":8}}],[\"btree\",{\"1\":{\"266\":1}}],[\"b2\",{\"1\":{\"172\":1}}],[\"bb\",{\"1\":{\"172\":1}}],[\"bilibili\",{\"1\":{\"205\":1}}],[\"billion\",{\"1\":{\"143\":1}}],[\"bin\",{\"1\":{\"182\":1,\"194\":1}}],[\"binary\",{\"1\":{\"129\":1,\"210\":1,\"277\":1}}],[\"bitwise\",{\"0\":{\"87\":1},\"1\":{\"87\":3}}],[\"bit\",{\"1\":{\"74\":2,\"128\":1,\"140\":2,\"147\":1,\"161\":4,\"170\":2}}],[\"bitstreams\",{\"1\":{\"128\":1}}],[\"bits\",{\"1\":{\"72\":1,\"73\":1,\"74\":1,\"87\":2,\"140\":1,\"143\":2,\"170\":6,\"171\":13}}],[\"bcp\",{\"1\":{\"129\":1}}],[\"braces\",{\"1\":{\"279\":1}}],[\"bracket\",{\"1\":{\"188\":1,\"192\":1}}],[\"brackets\",{\"1\":{\"188\":4}}],[\"branches\",{\"1\":{\"184\":2}}],[\"branch\",{\"1\":{\"184\":8}}],[\"broadband\",{\"1\":{\"162\":1}}],[\"broadcasting\",{\"1\":{\"162\":1,\"173\":1}}],[\"broadcast\",{\"0\":{\"162\":1},\"1\":{\"162\":3,\"170\":1,\"171\":1,\"172\":6}}],[\"browsers\",{\"1\":{\"136\":1}}],[\"browser\",{\"1\":{\"132\":4,\"133\":1,\"137\":1,\"165\":1,\"166\":2}}],[\"broken\",{\"1\":{\"31\":1}}],[\"breakpoints\",{\"1\":{\"193\":2}}],[\"breakcasecontinuedefaultelsefallthroughforgotoifrangereturnselectswitch\",{\"1\":{\"49\":1}}],[\"break\",{\"1\":{\"32\":1,\"64\":1,\"65\":3}}],[\"by\",{\"0\":{\"243\":1,\"247\":1},\"1\":{\"18\":1,\"25\":1,\"31\":1,\"32\":1,\"35\":2,\"64\":1,\"77\":1,\"87\":2,\"98\":1,\"119\":2,\"120\":1,\"121\":1,\"131\":3,\"132\":5,\"133\":2,\"134\":1,\"135\":1,\"136\":2,\"137\":1,\"140\":2,\"147\":5,\"149\":1,\"152\":2,\"163\":5,\"168\":1,\"170\":4,\"172\":1,\"173\":1,\"176\":1,\"177\":1,\"181\":1,\"187\":1,\"191\":1,\"205\":1,\"224\":1,\"229\":1,\"243\":1,\"247\":2,\"248\":1,\"267\":3,\"269\":5,\"273\":1,\"277\":2,\"278\":1,\"279\":2,\"288\":2,\"298\":2}}],[\"bytes\",{\"0\":{\"284\":1},\"1\":{\"16\":3,\"41\":2,\"140\":4,\"141\":5,\"143\":2,\"147\":2,\"162\":2,\"171\":2,\"284\":3}}],[\"byte\",{\"0\":{\"284\":3},\"1\":{\"16\":1,\"37\":2,\"72\":1,\"82\":1,\"146\":1,\"147\":4,\"281\":1,\"282\":2,\"283\":2,\"284\":2,\"285\":1}}],[\"burns\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"bubblesort\",{\"1\":{\"226\":1}}],[\"bubble\",{\"1\":{\"226\":1}}],[\"business\",{\"1\":{\"200\":2,\"205\":2,\"224\":1}}],[\"busy\",{\"1\":{\"132\":1}}],[\"builder\",{\"1\":{\"217\":1}}],[\"building\",{\"1\":{\"196\":1,\"200\":1,\"205\":1,\"210\":1}}],[\"build\",{\"1\":{\"194\":1}}],[\"built\",{\"0\":{\"37\":1},\"1\":{\"37\":1,\"134\":1,\"196\":1}}],[\"bulb\",{\"1\":{\"189\":2}}],[\"buf\",{\"1\":{\"16\":1}}],[\"buffered\",{\"1\":{\"58\":1,\"112\":2}}],[\"buffer\",{\"1\":{\"16\":3,\"59\":2,\"112\":1,\"152\":1,\"163\":1}}],[\"but\",{\"1\":{\"1\":1,\"32\":2,\"131\":1,\"132\":5,\"140\":2,\"152\":1,\"228\":1,\"235\":1,\"236\":1,\"237\":1,\"251\":1,\"263\":2,\"269\":3,\"278\":1,\"281\":1}}],[\"bobby\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"box\",{\"1\":{\"196\":1}}],[\"boasts\",{\"1\":{\"196\":1}}],[\"boundary\",{\"1\":{\"162\":1}}],[\"boundaries\",{\"1\":{\"120\":1}}],[\"body\",{\"1\":{\"40\":4,\"131\":1}}],[\"boolean\",{\"1\":{\"76\":1,\"276\":1}}],[\"booleans\",{\"0\":{\"76\":1}}],[\"bool\",{\"0\":{\"76\":1},\"1\":{\"17\":2,\"35\":3,\"37\":2,\"59\":2,\"76\":2,\"82\":1,\"120\":1,\"276\":1}}],[\"book\",{\"1\":{\"16\":4}}],[\"both\",{\"1\":{\"4\":1,\"86\":2,\"134\":1,\"137\":1,\"139\":1,\"149\":2,\"193\":1,\"194\":1,\"258\":1,\"266\":1,\"281\":1}}],[\"bs\",{\"1\":{\"16\":3}}],[\"batch\",{\"1\":{\"217\":1,\"269\":2}}],[\"batches\",{\"1\":{\"119\":1}}],[\"balanced\",{\"1\":{\"266\":1}}],[\"balancer\",{\"1\":{\"163\":1}}],[\"balancing\",{\"1\":{\"177\":2}}],[\"back\",{\"1\":{\"152\":1,\"176\":1,\"184\":2,\"259\":2,\"264\":4,\"269\":2}}],[\"backend\",{\"1\":{\"132\":1}}],[\"background\",{\"1\":{\"70\":1,\"122\":1,\"123\":5,\"125\":1,\"126\":1}}],[\"backticks\",{\"1\":{\"19\":1}}],[\"bar\",{\"1\":{\"24\":2,\"29\":1}}],[\"badges\",{\"1\":{\"136\":1}}],[\"bad\",{\"1\":{\"15\":1,\"16\":2,\"18\":1,\"21\":1,\"26\":1,\"32\":1,\"40\":1,\"42\":1,\"132\":4}}],[\"bash\",{\"1\":{\"182\":1}}],[\"baseval\",{\"1\":{\"123\":5}}],[\"base\",{\"1\":{\"123\":1}}],[\"based\",{\"1\":{\"2\":1,\"56\":1,\"64\":1,\"72\":1,\"78\":1,\"142\":1,\"143\":1,\"146\":1,\"152\":2,\"153\":2,\"163\":3,\"168\":1,\"170\":1,\"172\":2,\"180\":1,\"181\":1,\"194\":1,\"251\":2,\"288\":1}}],[\"basic\",{\"0\":{\"3\":1,\"127\":1,\"227\":1,\"270\":1},\"1\":{\"35\":1,\"136\":1,\"196\":1,\"251\":1,\"276\":3}}],[\"basics\",{\"1\":{\"1\":1}}],[\"black\",{\"1\":{\"279\":2}}],[\"blame\",{\"1\":{\"192\":1}}],[\"blank\",{\"1\":{\"122\":2}}],[\"blocking\",{\"1\":{\"135\":1}}],[\"blocked\",{\"1\":{\"112\":2}}],[\"block\",{\"1\":{\"18\":1,\"67\":1,\"163\":1,\"267\":1}}],[\"blocks\",{\"0\":{\"13\":1},\"1\":{\"12\":1}}],[\"blue\",{\"1\":{\"5\":2}}],[\"b\",{\"0\":{\"266\":1},\"1\":{\"5\":6,\"13\":2,\"16\":8,\"39\":2,\"40\":4,\"51\":2,\"59\":2,\"84\":6,\"85\":7,\"86\":3,\"87\":4,\"88\":11,\"134\":2,\"172\":1,\"175\":1,\"184\":1,\"228\":2,\"229\":3,\"233\":3,\"237\":2,\"263\":7,\"264\":6,\"266\":3,\"267\":8,\"269\":2,\"283\":1,\"284\":3,\"286\":2}}],[\"below\",{\"1\":{\"276\":1}}],[\"belong\",{\"1\":{\"228\":2}}],[\"belongs\",{\"1\":{\"92\":1,\"166\":1,\"217\":1}}],[\"beginning\",{\"1\":{\"269\":1}}],[\"beginindex\",{\"1\":{\"106\":2}}],[\"beverly\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"beego\",{\"1\":{\"196\":1}}],[\"been\",{\"1\":{\"109\":1,\"114\":1,\"132\":4,\"147\":2,\"149\":1,\"152\":4,\"157\":1,\"269\":1}}],[\"because\",{\"1\":{\"133\":4,\"149\":1,\"263\":1}}],[\"becomes\",{\"1\":{\"141\":1,\"163\":1}}],[\"become\",{\"1\":{\"44\":1,\"200\":1,\"291\":1}}],[\"benchmarkgood\",{\"1\":{\"39\":1}}],[\"benchmarkbad\",{\"1\":{\"39\":1}}],[\"benefits\",{\"1\":{\"32\":1}}],[\"benefit\",{\"1\":{\"16\":1}}],[\"between\",{\"0\":{\"278\":1,\"281\":1,\"287\":1,\"288\":1},\"1\":{\"36\":1,\"111\":1,\"128\":3,\"136\":1,\"143\":1,\"160\":2,\"162\":2,\"165\":1,\"175\":1,\"181\":1,\"210\":1,\"228\":2,\"229\":1,\"245\":3,\"263\":1,\"267\":1,\"273\":2,\"281\":1,\"298\":1}}],[\"better\",{\"1\":{\"17\":1,\"21\":1,\"29\":1,\"192\":2}}],[\"being\",{\"1\":{\"22\":1,\"74\":1,\"133\":1,\"140\":1,\"173\":1,\"177\":1,\"205\":1}}],[\"before\",{\"1\":{\"11\":1,\"69\":3,\"140\":1,\"149\":1,\"160\":1,\"163\":1,\"172\":1,\"181\":1,\"194\":1,\"264\":1,\"269\":3}}],[\"best\",{\"1\":{\"8\":1,\"34\":1,\"38\":1,\"40\":1}}],[\"be\",{\"0\":{\"274\":1,\"302\":1},\"1\":{\"1\":1,\"4\":1,\"14\":2,\"16\":2,\"17\":1,\"29\":1,\"32\":1,\"35\":1,\"38\":1,\"40\":1,\"42\":2,\"49\":1,\"51\":2,\"53\":1,\"63\":1,\"67\":1,\"75\":1,\"77\":2,\"80\":1,\"90\":1,\"112\":2,\"117\":2,\"119\":3,\"120\":1,\"121\":2,\"124\":1,\"125\":1,\"128\":1,\"131\":1,\"132\":4,\"133\":2,\"135\":4,\"136\":3,\"137\":2,\"139\":4,\"140\":6,\"141\":6,\"147\":4,\"149\":2,\"152\":6,\"156\":3,\"157\":3,\"160\":1,\"163\":2,\"166\":1,\"170\":3,\"171\":1,\"172\":2,\"173\":2,\"175\":1,\"178\":1,\"180\":1,\"194\":2,\"200\":3,\"205\":1,\"210\":1,\"217\":2,\"228\":3,\"237\":3,\"247\":1,\"251\":3,\"258\":2,\"259\":3,\"263\":2,\"267\":1,\"269\":6,\"274\":2,\"277\":2,\"279\":3,\"286\":2,\"288\":1,\"292\":2,\"298\":1,\"302\":3}}],[\"garbage\",{\"1\":{\"302\":3}}],[\"garcia\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"gain\",{\"1\":{\"192\":1}}],[\"gather\",{\"1\":{\"163\":1}}],[\"gateway\",{\"1\":{\"132\":7,\"172\":1,\"173\":3}}],[\"glossary\",{\"1\":{\"269\":1}}],[\"global\",{\"1\":{\"170\":1}}],[\"glenn\",{\"1\":{\"232\":2,\"233\":1,\"235\":2,\"236\":1,\"237\":2}}],[\"glance\",{\"1\":{\"192\":1}}],[\"gin\",{\"0\":{\"195\":1,\"197\":1},\"1\":{\"196\":12,\"198\":5}}],[\"github\",{\"1\":{\"196\":1,\"198\":1,\"202\":1,\"207\":1,\"226\":1}}],[\"gitkraken\",{\"1\":{\"192\":1}}],[\"gitlens\",{\"1\":{\"192\":5}}],[\"git\",{\"0\":{\"183\":1,\"184\":1},\"1\":{\"183\":1,\"184\":22,\"192\":5,\"226\":1}}],[\"gives\",{\"1\":{\"137\":1}}],[\"g\",{\"1\":{\"38\":1,\"132\":2,\"143\":2,\"194\":3,\"225\":3}}],[\"guaranteed\",{\"1\":{\"38\":1,\"136\":1,\"162\":1,\"170\":2}}],[\"guarantee\",{\"1\":{\"35\":1,\"36\":1,\"139\":1,\"263\":1,\"301\":1}}],[\"guidelines\",{\"0\":{\"3\":1},\"1\":{\"2\":1,\"9\":1}}],[\"guides\",{\"1\":{\"1\":1}}],[\"guide\",{\"0\":{\"0\":1,\"193\":1}}],[\"geography\",{\"1\":{\"231\":1,\"233\":2,\"235\":2,\"236\":2,\"237\":2}}],[\"generation\",{\"1\":{\"140\":1,\"200\":8,\"201\":4,\"205\":8,\"206\":4,\"210\":2}}],[\"generating\",{\"1\":{\"137\":1,\"173\":1}}],[\"generated\",{\"1\":{\"140\":1,\"210\":2}}],[\"generates\",{\"1\":{\"137\":1,\"163\":1,\"210\":1,\"225\":1}}],[\"generate\",{\"1\":{\"134\":1,\"137\":1,\"196\":1}}],[\"generator\",{\"1\":{\"134\":1}}],[\"generally\",{\"1\":{\"137\":1,\"147\":2,\"170\":1,\"232\":1,\"292\":1}}],[\"general\",{\"1\":{\"128\":1,\"152\":1,\"173\":1}}],[\"generic\",{\"1\":{\"9\":1}}],[\"get\",{\"0\":{\"102\":1},\"1\":{\"32\":3,\"69\":1,\"79\":1,\"81\":1,\"98\":1,\"102\":1,\"107\":2,\"114\":1,\"131\":4,\"132\":5,\"156\":1,\"172\":3,\"198\":1,\"207\":1,\"217\":1,\"272\":2}}],[\"getusertimezone\",{\"1\":{\"32\":1}}],[\"getuser\",{\"1\":{\"32\":2}}],[\"griffin\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"growth\",{\"1\":{\"156\":1}}],[\"grouping\",{\"0\":{\"7\":1},\"1\":{\"5\":1,\"7\":2}}],[\"group\",{\"0\":{\"5\":1,\"247\":1},\"1\":{\"5\":1,\"7\":3,\"162\":2,\"247\":2}}],[\"gremlin\",{\"1\":{\"210\":1}}],[\"greet\",{\"1\":{\"203\":1}}],[\"green\",{\"1\":{\"5\":2}}],[\"greatly\",{\"1\":{\"152\":1,\"177\":1}}],[\"greater\",{\"1\":{\"85\":2,\"147\":1,\"245\":3,\"247\":1}}],[\"graphs\",{\"1\":{\"210\":1,\"273\":1}}],[\"graph\",{\"1\":{\"210\":3}}],[\"gracefully\",{\"1\":{\"32\":3,\"33\":1,\"40\":1}}],[\"grasp\",{\"1\":{\"1\":1}}],[\"gorm\",{\"0\":{\"216\":1,\"217\":1,\"218\":1},\"1\":{\"217\":6}}],[\"goroutines\",{\"0\":{\"43\":1,\"44\":1},\"1\":{\"42\":4,\"43\":1,\"44\":2,\"111\":1,\"119\":1,\"120\":1,\"225\":1}}],[\"goroutine\",{\"0\":{\"42\":1},\"1\":{\"35\":1,\"42\":5,\"43\":5,\"67\":1,\"70\":3,\"119\":1}}],[\"go111module=on\",{\"1\":{\"202\":1,\"207\":1}}],[\"goctl\",{\"0\":{\"202\":1},\"1\":{\"201\":2,\"202\":1,\"203\":1}}],[\"gonic\",{\"1\":{\"198\":1}}],[\"google\",{\"1\":{\"192\":1}}],[\"good\",{\"1\":{\"1\":1,\"15\":1,\"16\":2,\"18\":1,\"21\":1,\"26\":1,\"40\":1,\"42\":1,\"210\":1}}],[\"goland\",{\"0\":{\"186\":1,\"187\":1},\"1\":{\"187\":2,\"189\":1}}],[\"golang\",{\"0\":{\"2\":1,\"286\":1},\"1\":{\"1\":4,\"7\":2,\"49\":1,\"72\":2,\"92\":1,\"93\":1,\"119\":1,\"192\":1,\"194\":1}}],[\"goto\",{\"1\":{\"66\":2}}],[\"go\",{\"0\":{\"199\":1,\"201\":1,\"281\":1},\"1\":{\"2\":1,\"4\":1,\"7\":3,\"8\":1,\"15\":2,\"16\":1,\"26\":1,\"30\":1,\"42\":2,\"43\":2,\"67\":1,\"70\":3,\"94\":1,\"125\":1,\"126\":1,\"136\":1,\"180\":1,\"187\":1,\"189\":1,\"192\":8,\"193\":1,\"194\":4,\"196\":1,\"200\":13,\"201\":2,\"202\":2,\"203\":1,\"205\":1,\"207\":2,\"210\":3,\"224\":1,\"259\":2,\"264\":2,\"278\":1,\"281\":1}}],[\"txt\",{\"1\":{\"167\":1}}],[\"twice\",{\"1\":{\"152\":1}}],[\"two\",{\"1\":{\"7\":1,\"29\":1,\"43\":1,\"72\":2,\"85\":2,\"109\":1,\"128\":1,\"136\":1,\"137\":1,\"141\":1,\"152\":1,\"162\":1,\"166\":1,\"172\":1,\"225\":1,\"228\":1,\"229\":1,\"237\":1,\"245\":1,\"259\":1,\"266\":1,\"272\":1,\"273\":1,\"286\":2}}],[\"tp\",{\"1\":{\"140\":1}}],[\"ttl\",{\"1\":{\"140\":1,\"172\":2}}],[\"tls\",{\"1\":{\"133\":1,\"136\":1}}],[\"turner\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"tuples\",{\"1\":{\"225\":2}}],[\"tuple\",{\"1\":{\"225\":1}}],[\"tuba\",{\"1\":{\"140\":1}}],[\"tunnels\",{\"1\":{\"192\":1}}],[\"tunneling\",{\"1\":{\"168\":1}}],[\"tunnel\",{\"1\":{\"131\":1,\"168\":1}}],[\"tuesday\",{\"1\":{\"64\":1}}],[\"tftp\",{\"1\":{\"129\":1}}],[\"tcp\",{\"0\":{\"129\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"163\":1},\"1\":{\"128\":1,\"129\":4,\"135\":2,\"139\":2,\"140\":1,\"146\":1,\"147\":9,\"148\":1,\"149\":5,\"150\":1,\"151\":1,\"152\":3,\"153\":2,\"158\":1,\"160\":1,\"162\":3,\"163\":2,\"168\":1,\"172\":1,\"178\":1}}],[\"talk\",{\"1\":{\"286\":2}}],[\"tamp\",{\"1\":{\"272\":2}}],[\"tampering\",{\"1\":{\"137\":1}}],[\"take\",{\"1\":{\"278\":1,\"286\":1}}],[\"taken\",{\"1\":{\"269\":1}}],[\"takes\",{\"1\":{\"163\":1}}],[\"tailor\",{\"1\":{\"217\":1}}],[\"tasks\",{\"1\":{\"194\":1}}],[\"task\",{\"1\":{\"194\":3,\"251\":1}}],[\"target\",{\"1\":{\"95\":2,\"96\":2,\"131\":1,\"163\":2,\"165\":2,\"170\":1,\"172\":7,\"173\":2,\"176\":3,\"193\":1,\"250\":1}}],[\"tables\",{\"1\":{\"210\":1,\"228\":3,\"229\":1}}],[\"table\",{\"0\":{\"82\":1,\"229\":1,\"230\":1},\"1\":{\"79\":1,\"87\":1,\"98\":1,\"172\":6,\"173\":13,\"176\":2,\"178\":1,\"217\":1,\"228\":9,\"229\":2,\"230\":3,\"232\":6,\"235\":1,\"236\":1,\"237\":3,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":4,\"253\":1,\"254\":1,\"255\":2,\"256\":1,\"259\":2,\"261\":1,\"262\":1,\"263\":1,\"264\":4}}],[\"tags\",{\"0\":{\"41\":1},\"1\":{\"41\":1}}],[\"t5\",{\"1\":{\"52\":1}}],[\"t4\",{\"1\":{\"52\":1}}],[\"t3\",{\"1\":{\"52\":1}}],[\"title\",{\"1\":{\"212\":1,\"231\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"tips\",{\"1\":{\"163\":1,\"171\":1,\"183\":1}}],[\"timing\",{\"1\":{\"116\":1,\"137\":1}}],[\"timely\",{\"1\":{\"128\":1,\"132\":1,\"156\":1}}],[\"timer\",{\"1\":{\"116\":1,\"152\":2,\"163\":1}}],[\"timestamp\",{\"1\":{\"140\":2,\"147\":1}}],[\"times\",{\"1\":{\"42\":1,\"149\":2,\"163\":1,\"269\":1}}],[\"time\",{\"0\":{\"289\":1},\"1\":{\"5\":2,\"32\":1,\"35\":1,\"42\":2,\"67\":1,\"70\":3,\"115\":2,\"116\":3,\"119\":1,\"120\":2,\"125\":11,\"126\":7,\"137\":2,\"140\":2,\"149\":4,\"152\":8,\"155\":1,\"156\":2,\"163\":2,\"172\":1,\"173\":2,\"175\":1,\"200\":1,\"225\":2,\"249\":2,\"269\":4,\"279\":1,\"286\":1}}],[\"timeouts\",{\"1\":{\"139\":1}}],[\"timeout\",{\"1\":{\"5\":2,\"119\":2,\"121\":1,\"125\":1,\"132\":3,\"149\":2,\"150\":1,\"152\":10,\"163\":1,\"298\":3}}],[\"tiger\",{\"1\":{\"55\":1}}],[\"tick\",{\"1\":{\"42\":1}}],[\"ticker\",{\"1\":{\"42\":2}}],[\"teacher\",{\"1\":{\"228\":3}}],[\"team\",{\"1\":{\"192\":1}}],[\"templates\",{\"1\":{\"210\":1}}],[\"template\",{\"1\":{\"196\":2,\"210\":1}}],[\"temporary\",{\"1\":{\"132\":2,\"173\":1}}],[\"temporarily\",{\"1\":{\"132\":2}}],[\"tens\",{\"1\":{\"181\":1}}],[\"term\",{\"1\":{\"269\":1}}],[\"terms\",{\"1\":{\"154\":1}}],[\"terminal\",{\"1\":{\"129\":1,\"132\":2,\"136\":1}}],[\"terminating\",{\"1\":{\"128\":1}}],[\"termination\",{\"1\":{\"42\":1,\"119\":1,\"135\":1}}],[\"terminated\",{\"1\":{\"119\":1,\"121\":2,\"126\":1,\"298\":1}}],[\"terminate\",{\"1\":{\"43\":1,\"69\":1,\"114\":1,\"119\":1,\"126\":1,\"298\":2}}],[\"tell\",{\"1\":{\"172\":1}}],[\"telling\",{\"1\":{\"152\":1}}],[\"tells\",{\"1\":{\"147\":1}}],[\"telnet\",{\"1\":{\"129\":1}}],[\"techniques\",{\"1\":{\"163\":1}}],[\"technique\",{\"1\":{\"144\":1}}],[\"text\",{\"0\":{\"256\":1},\"1\":{\"132\":1,\"167\":1,\"251\":4,\"276\":1,\"278\":1,\"285\":1}}],[\"tested\",{\"1\":{\"217\":1}}],[\"testing\",{\"1\":{\"131\":1,\"180\":1,\"181\":3}}],[\"tests\",{\"1\":{\"40\":1}}],[\"test\",{\"1\":{\"10\":1,\"19\":2,\"52\":3,\"131\":1,\"194\":7}}],[\"tz\",{\"1\":{\"32\":2}}],[\"typical\",{\"1\":{\"180\":1}}],[\"typically\",{\"1\":{\"29\":1}}],[\"typed\",{\"1\":{\"210\":2}}],[\"type\",{\"0\":{\"33\":1,\"71\":1},\"1\":{\"5\":5,\"11\":2,\"14\":6,\"16\":11,\"30\":2,\"31\":2,\"32\":1,\"33\":1,\"35\":2,\"36\":2,\"41\":2,\"49\":1,\"51\":1,\"52\":1,\"55\":6,\"56\":2,\"58\":3,\"59\":1,\"61\":1,\"72\":2,\"73\":1,\"74\":1,\"75\":1,\"76\":2,\"79\":2,\"80\":1,\"82\":1,\"92\":3,\"95\":1,\"96\":2,\"98\":2,\"112\":1,\"120\":1,\"123\":7,\"128\":1,\"140\":1,\"162\":2,\"167\":1,\"168\":1,\"171\":11,\"175\":1,\"193\":1,\"194\":9,\"210\":2,\"225\":1,\"226\":1,\"251\":1,\"266\":1,\"276\":8,\"279\":3,\"282\":2,\"285\":2,\"286\":8,\"287\":2,\"294\":1,\"302\":2}}],[\"types\",{\"0\":{\"16\":1,\"29\":1,\"36\":1,\"50\":1,\"57\":1,\"162\":1,\"167\":1,\"251\":1,\"282\":1},\"1\":{\"5\":1,\"16\":4,\"29\":3,\"31\":1,\"32\":1,\"35\":2,\"36\":2,\"49\":2,\"55\":2,\"56\":1,\"72\":4,\"109\":1,\"210\":1,\"225\":1,\"281\":1,\"286\":2,\"291\":1,\"292\":1}}],[\"t2\",{\"1\":{\"25\":4,\"52\":1}}],[\"t1\",{\"1\":{\"25\":4,\"52\":2}}],[\"treated\",{\"1\":{\"249\":2}}],[\"trees\",{\"1\":{\"273\":1}}],[\"tree\",{\"0\":{\"266\":1,\"267\":1},\"1\":{\"121\":1,\"266\":4,\"267\":17}}],[\"trigger\",{\"1\":{\"263\":2,\"295\":1}}],[\"triggered\",{\"1\":{\"152\":1}}],[\"triggering\",{\"1\":{\"152\":1}}],[\"trip\",{\"1\":{\"152\":1}}],[\"try\",{\"1\":{\"149\":1,\"172\":1,\"263\":2}}],[\"truncating\",{\"1\":{\"225\":1}}],[\"trust\",{\"1\":{\"137\":1}}],[\"trusted\",{\"1\":{\"136\":1}}],[\"truth\",{\"1\":{\"87\":1}}],[\"true\",{\"1\":{\"21\":2,\"35\":1,\"37\":2,\"51\":1,\"76\":2,\"85\":9,\"86\":8,\"95\":2,\"194\":6,\"249\":1}}],[\"traffic\",{\"1\":{\"153\":1,\"163\":5}}],[\"tracing\",{\"1\":{\"140\":1}}],[\"traces\",{\"1\":{\"194\":1}}],[\"trace\",{\"1\":{\"8\":2,\"131\":2}}],[\"translate\",{\"1\":{\"174\":1,\"262\":1}}],[\"translation\",{\"1\":{\"7\":1,\"16\":1,\"61\":1,\"132\":1,\"175\":1,\"285\":1}}],[\"transaction\",{\"0\":{\"268\":1},\"1\":{\"159\":1,\"269\":12}}],[\"transactions\",{\"1\":{\"137\":1,\"217\":4,\"269\":4}}],[\"transport\",{\"1\":{\"128\":2,\"129\":3,\"146\":1,\"147\":1,\"159\":1}}],[\"transparent\",{\"1\":{\"128\":1}}],[\"transmitting\",{\"1\":{\"160\":1,\"162\":1}}],[\"transmitted\",{\"1\":{\"134\":1,\"136\":1,\"140\":2,\"141\":3,\"147\":1,\"152\":3}}],[\"transmits\",{\"1\":{\"129\":2}}],[\"transmit\",{\"1\":{\"128\":1,\"152\":1,\"160\":2}}],[\"transmission\",{\"0\":{\"150\":1},\"1\":{\"128\":2,\"132\":1,\"133\":3,\"136\":2,\"139\":1,\"140\":3,\"141\":1,\"146\":1,\"149\":1,\"150\":1,\"152\":4,\"153\":2,\"158\":1,\"160\":1,\"161\":1,\"162\":2}}],[\"transfers\",{\"1\":{\"292\":1}}],[\"transfer\",{\"1\":{\"119\":2,\"129\":1,\"133\":2,\"292\":8,\"298\":2}}],[\"traversal\",{\"0\":{\"300\":1},\"1\":{\"210\":2,\"267\":1,\"300\":1}}],[\"traversals\",{\"1\":{\"210\":1}}],[\"traversed\",{\"1\":{\"289\":2}}],[\"traverse\",{\"1\":{\"99\":4}}],[\"traversing\",{\"0\":{\"99\":1}}],[\"t\",{\"1\":{\"8\":1,\"9\":1,\"14\":1,\"19\":1,\"24\":2,\"32\":2,\"33\":2,\"36\":1,\"43\":1,\"51\":2,\"52\":4,\"56\":4,\"58\":8,\"96\":3,\"112\":3,\"116\":2,\"140\":1,\"163\":1,\"166\":1,\"217\":1,\"263\":1,\"276\":1,\"278\":2,\"294\":1}}],[\"thorough\",{\"1\":{\"205\":1}}],[\"thousands\",{\"1\":{\"180\":1}}],[\"those\",{\"1\":{\"11\":1,\"72\":1}}],[\"thus\",{\"1\":{\"173\":1}}],[\"thursday\",{\"1\":{\"64\":2}}],[\"throw\",{\"1\":{\"296\":1}}],[\"through\",{\"1\":{\"79\":1,\"116\":1,\"132\":1,\"133\":1,\"137\":1,\"140\":3,\"150\":1,\"151\":1,\"152\":2,\"168\":1,\"172\":3,\"210\":1,\"229\":1,\"250\":1,\"273\":3}}],[\"threat\",{\"1\":{\"163\":1}}],[\"thread\",{\"0\":{\"299\":1},\"1\":{\"35\":1,\"103\":1,\"299\":1}}],[\"threshold\",{\"1\":{\"154\":1,\"173\":1}}],[\"three\",{\"0\":{\"149\":1},\"1\":{\"105\":1,\"131\":1,\"149\":3,\"152\":1,\"157\":2,\"163\":1,\"175\":1,\"233\":1,\"263\":1,\"277\":1}}],[\"that\",{\"1\":{\"19\":1,\"32\":2,\"35\":1,\"36\":1,\"42\":1,\"43\":2,\"49\":1,\"73\":1,\"78\":1,\"92\":1,\"96\":1,\"109\":2,\"113\":1,\"114\":1,\"117\":1,\"128\":1,\"132\":19,\"136\":2,\"137\":2,\"139\":2,\"141\":1,\"147\":11,\"149\":2,\"151\":1,\"152\":11,\"157\":1,\"158\":1,\"160\":1,\"162\":3,\"163\":2,\"168\":9,\"170\":1,\"172\":2,\"173\":2,\"176\":1,\"177\":1,\"180\":1,\"187\":1,\"192\":4,\"193\":1,\"200\":1,\"217\":1,\"224\":1,\"228\":1,\"233\":2,\"235\":2,\"236\":2,\"237\":3,\"250\":1,\"259\":2,\"263\":2,\"264\":1,\"269\":10,\"276\":1,\"277\":1,\"285\":1,\"286\":1,\"287\":1,\"292\":4,\"294\":1,\"299\":1,\"300\":1,\"302\":1}}],[\"than\",{\"1\":{\"12\":1,\"17\":1,\"40\":2,\"85\":4,\"141\":1,\"147\":1,\"152\":1,\"160\":1,\"181\":1,\"245\":5,\"247\":1,\"267\":3}}],[\"thinking\",{\"1\":{\"300\":1}}],[\"third\",{\"1\":{\"7\":2,\"99\":6,\"100\":6,\"101\":2,\"105\":1,\"133\":2}}],[\"this\",{\"1\":{\"1\":2,\"4\":1,\"12\":1,\"18\":1,\"26\":1,\"30\":1,\"31\":5,\"32\":2,\"42\":2,\"43\":2,\"99\":1,\"100\":1,\"103\":1,\"128\":2,\"132\":3,\"134\":4,\"140\":2,\"147\":9,\"149\":2,\"156\":1,\"163\":3,\"171\":8,\"172\":1,\"175\":2,\"176\":1,\"181\":1,\"193\":1,\"230\":1,\"244\":2,\"251\":1,\"269\":6,\"273\":1,\"276\":1,\"278\":1}}],[\"then\",{\"1\":{\"85\":6,\"86\":4,\"114\":2,\"134\":2,\"136\":1,\"137\":1,\"147\":1,\"166\":1,\"172\":1,\"176\":1,\"180\":1,\"228\":1,\"229\":1,\"237\":1,\"263\":2,\"264\":3,\"302\":2}}],[\"they\",{\"1\":{\"16\":1,\"29\":2,\"32\":1,\"136\":2,\"137\":2,\"139\":1,\"140\":1,\"142\":1,\"144\":1,\"173\":1,\"180\":1,\"228\":1,\"267\":1,\"277\":1,\"279\":1}}],[\"their\",{\"1\":{\"10\":1,\"11\":1,\"53\":1,\"78\":1,\"82\":1,\"172\":1,\"180\":1,\"187\":1,\"191\":1,\"274\":2}}],[\"thereby\",{\"1\":{\"173\":4,\"181\":1,\"273\":2}}],[\"therefore\",{\"1\":{\"38\":1,\"149\":1,\"163\":1}}],[\"there\",{\"1\":{\"8\":1,\"25\":1,\"29\":1,\"36\":1,\"72\":1,\"105\":1,\"117\":1,\"133\":1,\"147\":2,\"149\":1,\"152\":2,\"166\":2,\"172\":1,\"228\":1,\"237\":1,\"258\":1,\"259\":1,\"264\":1,\"267\":1,\"276\":1,\"281\":1,\"285\":1}}],[\"themselves\",{\"1\":{\"196\":1}}],[\"them\",{\"1\":{\"7\":1,\"31\":1,\"128\":1,\"142\":1,\"180\":1,\"224\":1,\"225\":1,\"281\":1}}],[\"these\",{\"1\":{\"2\":1,\"9\":1,\"11\":1,\"29\":2,\"31\":1,\"35\":1,\"49\":3,\"175\":1,\"181\":1,\"224\":1,\"276\":1}}],[\"the\",{\"0\":{\"34\":1,\"40\":1,\"102\":1,\"150\":1,\"277\":1,\"278\":1,\"281\":1,\"287\":1,\"288\":1,\"289\":1,\"290\":1,\"298\":1,\"300\":1,\"302\":3},\"1\":{\"1\":1,\"7\":1,\"8\":4,\"11\":2,\"14\":3,\"16\":10,\"18\":6,\"21\":1,\"22\":2,\"24\":1,\"25\":1,\"29\":3,\"30\":1,\"31\":1,\"32\":13,\"33\":2,\"35\":4,\"36\":2,\"38\":3,\"39\":2,\"40\":7,\"42\":5,\"43\":4,\"44\":2,\"46\":2,\"47\":1,\"49\":2,\"51\":2,\"52\":2,\"53\":3,\"54\":1,\"56\":2,\"60\":1,\"61\":1,\"64\":4,\"65\":4,\"66\":1,\"67\":1,\"69\":4,\"70\":2,\"74\":1,\"75\":2,\"76\":2,\"77\":1,\"78\":1,\"79\":10,\"81\":3,\"86\":1,\"88\":3,\"92\":2,\"95\":4,\"96\":4,\"98\":11,\"99\":1,\"100\":2,\"102\":1,\"103\":1,\"106\":5,\"107\":4,\"108\":1,\"109\":5,\"112\":4,\"113\":3,\"114\":2,\"115\":4,\"116\":2,\"119\":6,\"121\":3,\"124\":1,\"128\":19,\"131\":10,\"132\":72,\"133\":5,\"134\":44,\"135\":6,\"136\":17,\"137\":46,\"139\":6,\"140\":50,\"141\":19,\"142\":5,\"143\":1,\"144\":8,\"147\":52,\"149\":42,\"150\":2,\"151\":3,\"152\":64,\"153\":9,\"154\":3,\"155\":2,\"156\":6,\"157\":5,\"158\":2,\"159\":1,\"160\":6,\"161\":2,\"162\":3,\"163\":28,\"165\":9,\"166\":36,\"168\":2,\"170\":10,\"171\":15,\"172\":60,\"173\":26,\"175\":3,\"176\":30,\"177\":9,\"178\":7,\"180\":1,\"181\":4,\"187\":1,\"188\":2,\"189\":3,\"192\":2,\"193\":5,\"194\":6,\"196\":3,\"201\":1,\"206\":1,\"210\":4,\"217\":1,\"224\":2,\"228\":24,\"229\":5,\"230\":1,\"232\":7,\"233\":4,\"235\":2,\"236\":2,\"237\":11,\"239\":2,\"247\":3,\"248\":2,\"249\":2,\"250\":7,\"251\":15,\"258\":22,\"259\":36,\"263\":26,\"264\":13,\"266\":7,\"267\":30,\"269\":23,\"272\":3,\"273\":8,\"274\":2,\"276\":4,\"277\":3,\"278\":3,\"279\":6,\"283\":1,\"285\":4,\"286\":17,\"287\":1,\"288\":3,\"289\":2,\"290\":1,\"291\":4,\"292\":15,\"294\":2,\"298\":3,\"299\":1,\"300\":5,\"301\":1,\"302\":9}}],[\"tony\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"total\",{\"1\":{\"140\":2,\"141\":3,\"152\":1}}],[\"todo\",{\"1\":{\"122\":2}}],[\"top\",{\"0\":{\"14\":1,\"15\":1},\"1\":{\"29\":1,\"166\":4}}],[\"topics\",{\"1\":{\"1\":1}}],[\"tool\",{\"1\":{\"201\":1,\"206\":1}}],[\"tools\",{\"1\":{\"1\":2,\"173\":1,\"180\":1,\"181\":2,\"200\":2,\"202\":1,\"205\":1,\"224\":1,\"225\":2}}],[\"too\",{\"1\":{\"8\":1,\"40\":1,\"147\":1,\"152\":2,\"263\":3}}],[\"together\",{\"1\":{\"5\":1,\"139\":1,\"258\":1,\"279\":1}}],[\"to\",{\"0\":{\"25\":1,\"42\":1,\"43\":1,\"180\":1,\"210\":1,\"217\":1,\"295\":1},\"1\":{\"1\":6,\"4\":1,\"5\":1,\"6\":1,\"8\":2,\"9\":1,\"10\":1,\"12\":1,\"14\":2,\"16\":7,\"17\":2,\"18\":1,\"21\":3,\"26\":1,\"29\":1,\"30\":1,\"31\":2,\"32\":3,\"33\":1,\"34\":3,\"35\":1,\"36\":2,\"38\":3,\"39\":1,\"40\":9,\"41\":4,\"42\":5,\"43\":6,\"47\":1,\"49\":4,\"51\":1,\"52\":1,\"53\":4,\"54\":1,\"55\":1,\"56\":1,\"58\":1,\"59\":1,\"60\":2,\"61\":1,\"64\":3,\"65\":3,\"66\":4,\"67\":1,\"69\":3,\"70\":1,\"72\":4,\"74\":1,\"81\":3,\"85\":2,\"88\":3,\"90\":2,\"92\":1,\"93\":2,\"94\":2,\"95\":3,\"96\":3,\"99\":4,\"100\":1,\"102\":1,\"103\":1,\"105\":1,\"107\":2,\"108\":1,\"109\":4,\"111\":1,\"112\":1,\"113\":2,\"114\":4,\"115\":3,\"116\":1,\"117\":1,\"119\":1,\"121\":1,\"123\":1,\"124\":1,\"125\":2,\"128\":5,\"129\":1,\"131\":7,\"132\":19,\"133\":3,\"134\":9,\"135\":2,\"136\":7,\"137\":10,\"139\":3,\"140\":20,\"141\":6,\"142\":2,\"144\":6,\"147\":8,\"149\":18,\"151\":1,\"152\":17,\"153\":2,\"156\":3,\"157\":3,\"158\":1,\"160\":6,\"162\":7,\"163\":20,\"165\":6,\"166\":7,\"168\":5,\"170\":3,\"171\":1,\"172\":17,\"173\":10,\"174\":1,\"175\":2,\"176\":12,\"177\":4,\"180\":3,\"181\":3,\"184\":2,\"188\":4,\"189\":2,\"191\":2,\"192\":2,\"193\":1,\"194\":6,\"196\":5,\"200\":7,\"201\":2,\"203\":1,\"205\":5,\"206\":2,\"210\":2,\"217\":8,\"224\":4,\"225\":3,\"228\":6,\"229\":3,\"233\":2,\"239\":1,\"244\":1,\"245\":4,\"248\":1,\"249\":1,\"251\":5,\"258\":3,\"259\":13,\"262\":1,\"263\":4,\"264\":7,\"267\":2,\"269\":6,\"272\":2,\"273\":2,\"274\":1,\"278\":4,\"279\":3,\"281\":1,\"283\":2,\"285\":1,\"286\":3,\"287\":3,\"290\":1,\"291\":2,\"292\":3,\"295\":1,\"298\":1,\"300\":2,\"301\":1,\"302\":4}}]],\"serializationVersion\":2},\"/\":{\"documentCount\":341,\"nextId\":341,\"documentIds\":{\"0\":\"2\",\"1\":\"2#介绍\",\"2\":\"4\",\"3\":\"4#基本规范\",\"4\":\"4#限制单行长度\",\"5\":\"4#相关的声明放在一起-不相关的声明不要放一起\",\"6\":\"4#单个变量声明规范\",\"7\":\"4#import-分组规范\",\"8\":\"4#导入别名\",\"9\":\"4#包名\",\"10\":\"4#函数名\",\"11\":\"4#函数的排序\",\"12\":\"4#减少嵌套\",\"13\":\"4#减少不必要的-else\",\"14\":\"4#顶层变量声明\",\"15\":\"4#对于未导出的顶层常量和变量使用-作为前缀\",\"16\":\"4#结构体中的嵌入式类型需放在顶部且用空行隔开\",\"17\":\"4#nil-是一个有效的-slice\",\"18\":\"4#减少变量作用域\",\"19\":\"4#使用原生字符串而不是转义\",\"20\":\"4#初始化结构体\",\"21\":\"4#使用字段名初始化结构\",\"22\":\"4#忽略-0-值的字段\",\"23\":\"4#若初始化全为-0-值的结构变量-使用-var\",\"24\":\"4#初始化结构体指针\",\"25\":\"4#使用-make-初始化-map\",\"26\":\"4#若在-printf-外定义-format-字符串-建议使用-const\",\"27\":\"4#开发原则\",\"28\":\"4#error-处理\",\"29\":\"4#错误类型\",\"30\":\"4#错误包装\",\"31\":\"4#错误命名\",\"32\":\"4#依次处理错误\",\"33\":\"4#类型断言\",\"34\":\"4#尽量不使用-panic\",\"35\":\"4#使用-atomic-原子操作\",\"36\":\"4#不要在公共的结构中使用嵌入类型\",\"37\":\"4#避免使用内置名称\",\"38\":\"4#避免使用-init-函数\",\"39\":\"4#提前配置-slice-的容量\",\"40\":\"4#使用-exit-或-fatal-退出主程序\",\"41\":\"4#在序列化的结构体中需声明-tag\",\"42\":\"4#注意协程-goroutine-的使用\",\"43\":\"4#等待-goroutines-退出\",\"44\":\"4#不要在-init-中使用-goroutine\",\"45\":\"4#性能优化\",\"46\":\"4#优先使用-strconv-而不是-fmt\",\"47\":\"4#指定-map-slice-的容量\",\"48\":\"6\",\"49\":\"6#保留关键字\",\"50\":\"6#声明类型关键字\",\"51\":\"6#const\",\"52\":\"6#func\",\"53\":\"6#import\",\"54\":\"6#package\",\"55\":\"6#type\",\"56\":\"6#var\",\"57\":\"6#复合类型\",\"58\":\"6#chan\",\"59\":\"6#interface\",\"60\":\"6#map\",\"61\":\"6#struct\",\"62\":\"6#流程控制\",\"63\":\"6#if-else\",\"64\":\"6#switch-fallthrough\",\"65\":\"6#for-break-continue-range\",\"66\":\"6#goto\",\"67\":\"6#select\",\"68\":\"6#功能修饰\",\"69\":\"6#defer\",\"70\":\"6#go\",\"71\":\"7\",\"72\":\"7#整数-int\",\"73\":\"7#浮点数-float\",\"74\":\"7#复数-complex\",\"75\":\"7#字符串-string\",\"76\":\"7#布尔类型-bool\",\"77\":\"7#数组-array\",\"78\":\"7#切片-slices\",\"79\":\"7#map-map\",\"80\":\"7#结构体-struct\",\"81\":\"7#指针-pointer\",\"82\":\"7#零值表\",\"83\":\"8\",\"84\":\"8#算术运算符\",\"85\":\"8#关系运算符\",\"86\":\"8#逻辑运算符\",\"87\":\"8#位运算符\",\"88\":\"8#赋值运算符\",\"89\":\"8#其他符号\",\"90\":\"8#符号优先级\",\"91\":\"9\",\"92\":\"9#接口\",\"93\":\"9#创建错误\",\"94\":\"9#errors-join\",\"95\":\"9#errors-is\",\"96\":\"9#errors-as\",\"97\":\"10\",\"98\":\"10#创建-map\",\"99\":\"10#遍历-map\",\"100\":\"10#删除键值\",\"101\":\"10#判断-key-是否存在\",\"102\":\"10#获取-map-长度\",\"103\":\"10#并发\",\"104\":\"11\",\"105\":\"11#创建切片\",\"106\":\"11#切片截取\",\"107\":\"11#长度及容量\",\"108\":\"11#追加数据\",\"109\":\"11#克隆切片\",\"110\":\"12\",\"111\":\"12#介绍\",\"112\":\"12#创建-channel\",\"113\":\"12#发送接收数据\",\"114\":\"12#关闭-channel\",\"115\":\"12#select\",\"116\":\"12#例子\",\"117\":\"12#注意事项\",\"118\":\"13\",\"119\":\"13#介绍\",\"120\":\"13#context-接口\",\"121\":\"13#根节点和派生节点\",\"122\":\"13#创建根节点\",\"123\":\"13#创建派生节点\",\"124\":\"13#withvalue\",\"125\":\"13#withdeadline-withtimeout\",\"126\":\"13#withcancel\",\"127\":\"14\",\"128\":\"14#osi七层模型\",\"129\":\"14#tcp和ip模型\",\"130\":\"14#http\",\"131\":\"14#请求方法\",\"132\":\"14#http-状态码\",\"133\":\"14#https-vs-http\",\"134\":\"14#工作原理\",\"135\":\"14#http-1-0-vs-1-1-vs-2-0\",\"136\":\"14#数字证书\",\"137\":\"14#数字签名工作原理\",\"138\":\"15\",\"139\":\"15#ip\",\"140\":\"15#ipv4-结构\",\"141\":\"15#分片\",\"142\":\"15#重组\",\"143\":\"15#ipv6\",\"144\":\"15#什么是-ip-欺骗\",\"145\":\"16\",\"146\":\"16#tcp\",\"147\":\"16#tcp-头部结构\",\"148\":\"16#tcp-状态机\",\"149\":\"16#tcp-三次握手-四次挥手\",\"150\":\"16#tcp-如何保证传输的可靠性\",\"151\":\"16#序列号和确认应答信号\",\"152\":\"16#超时重传\",\"153\":\"16#流量控制\",\"154\":\"16#拥塞控制\",\"155\":\"16#慢开始\",\"156\":\"16#拥塞避免\",\"157\":\"16#快重传和快恢复\",\"158\":\"16#校验和\",\"159\":\"16#udp\",\"160\":\"16#特点\",\"161\":\"16#结构\",\"162\":\"16#广播类型\",\"163\":\"16#常见的-tcp-udp-攻击\",\"164\":\"17\",\"165\":\"17#介绍\",\"166\":\"17#dns-解析过程\",\"167\":\"17#dns-记录类型\",\"168\":\"17#常见的-dns-攻击\",\"169\":\"18\",\"170\":\"18#介绍\",\"171\":\"18#arp-报文\",\"172\":\"18#工作原理\",\"173\":\"18#常见的-arp-攻击方式\",\"174\":\"19\",\"175\":\"19#介绍\",\"176\":\"19#工作原理\",\"177\":\"19#nat-的优点\",\"178\":\"19#nat-的缺点\",\"179\":\"20\",\"180\":\"20#docker-介绍\",\"181\":\"20#为什么使用-docker\",\"182\":\"20#常用-docker-命令\",\"183\":\"21\",\"184\":\"21#git-必须掌握的常用命令\",\"185\":\"21#提交代码步骤\",\"186\":\"22\",\"187\":\"22#goland\",\"188\":\"22#推荐插件\",\"189\":\"22#快速更新依赖\",\"190\":\"23\",\"191\":\"23#vscode\",\"192\":\"23#推荐插件\",\"193\":\"23#launch-json-配置文件教程\",\"194\":\"23#配置字段\",\"195\":\"24\",\"196\":\"24#介绍\",\"197\":\"24#gin-的使用示例\",\"198\":\"24#创建一个简单的-web-服务\",\"199\":\"25\",\"200\":\"25#介绍\",\"201\":\"25#go-zero-的使用\",\"202\":\"25#安装-goctl\",\"203\":\"25#创建一个简单的微服务\",\"204\":\"26\",\"205\":\"26#介绍\",\"206\":\"26#kratos-的使用\",\"207\":\"26#安装-kratos\",\"208\":\"26#创建一个简单的微服务\",\"209\":\"27\",\"210\":\"27#ent-介绍\",\"211\":\"27#ent-的使用示例\",\"212\":\"27#创建数据\",\"213\":\"27#更新数据\",\"214\":\"27#查询数据\",\"215\":\"27#删除数据\",\"216\":\"28\",\"217\":\"28#gorm-介绍\",\"218\":\"28#gorm-的使用示例\",\"219\":\"28#创建数据\",\"220\":\"28#更新数据\",\"221\":\"28#查询数据\",\"222\":\"28#删除数据\",\"223\":\"29\",\"224\":\"29#介绍\",\"225\":\"29#主要功能\",\"226\":\"29#例子\",\"227\":\"54\",\"228\":\"54#关系键\",\"229\":\"54#表连接\",\"230\":\"54#表连接示意图\",\"231\":\"54#course\",\"232\":\"54#student\",\"233\":\"54#内连接-inner-join\",\"234\":\"54#外连接-outer-join\",\"235\":\"54#左连接-left-join\",\"236\":\"54#右连接-right-join\",\"237\":\"54#全外连接-full-outer-join\",\"238\":\"55\",\"239\":\"55#select-选择\",\"240\":\"55#返回所有字段\",\"241\":\"55#返回指定字段\",\"242\":\"55#结果去重\",\"243\":\"55#order-排序\",\"244\":\"55#limit-限制返回数量\",\"245\":\"55#where-条件\",\"246\":\"55#and-or-not\",\"247\":\"55#group-by-分组\",\"248\":\"55#exists-存在\",\"249\":\"55#常见的聚合函数\",\"250\":\"56\",\"251\":\"56#索引类型\",\"252\":\"56#按逻辑功能划分\",\"253\":\"56#普通索引\",\"254\":\"56#唯一索引\",\"255\":\"56#主键索引\",\"256\":\"56#全文索引\",\"257\":\"56#按物理划分\",\"258\":\"56#聚簇索引\",\"259\":\"56#非聚簇索引\",\"260\":\"56#按字段个数划分\",\"261\":\"56#单列索引\",\"262\":\"56#组合索引\",\"263\":\"56#创建索引原则\",\"264\":\"56#索引下推\",\"265\":\"56#索引的数据结构\",\"266\":\"56#b-树\",\"267\":\"56#b-树-1\",\"268\":\"57\",\"269\":\"57#隔离级别\",\"270\":\"58\",\"271\":\"58#指针\",\"272\":\"58#什么是指针和指针变量\",\"273\":\"58#为什么使用指针\",\"274\":\"58#哪些对象可以获取地址-哪些不行\",\"275\":\"58#字面量\",\"276\":\"58#字面量是什么意思\",\"277\":\"58#什么是有类型常量和无类型常量\",\"278\":\"58#不同字面量可能同值吗\",\"279\":\"58#字面量和变量的区别是什么\",\"280\":\"58#什么是组合字面量\",\"281\":\"58#其他\",\"282\":\"58#go-中的-rune-和-byte-有什么区别\",\"283\":\"58#类型不同\",\"284\":\"58#存储的字符不同\",\"285\":\"58#占用的字节大小不同-byte-占用1个字节-rune-占用4个字节。\",\"286\":\"58#表示的字符范围不同\",\"287\":\"58#golang中的深拷贝和浅拷贝是什么\",\"288\":\"58#make-和-new-有什么区别\",\"289\":\"58#数组和切片有什么区别\",\"290\":\"58#如果-for-range-同时添加数据-for-range-会无限执行吗\",\"291\":\"58#多个-defer-的执行顺序是什么\",\"292\":\"58#什么是数据溢出\",\"293\":\"58#函数参数使用值还是指针\",\"294\":\"58#map\",\"295\":\"58#未初始化的-map-可以读取-key-吗\",\"296\":\"58#如果对未初始化的-map-赋值会怎么样\",\"297\":\"58#如果对未初始化的-map-进行删除-key-的操作会发生什么\",\"298\":\"59\",\"299\":\"59#使用过-context-吗-context-有哪些使用场景\",\"300\":\"59#channel-是线程安全的吗\",\"301\":\"59#map-使用-range-遍历时是有序还是无序的\",\"302\":\"59#map-并发安全吗\",\"303\":\"59#map-的-key-删除后-key-的内存会被释放吗\",\"304\":\"66\",\"305\":\"67\",\"306\":\"68\",\"307\":\"69\",\"308\":\"70\",\"309\":\"71\",\"310\":\"72\",\"311\":\"73\",\"312\":\"74\",\"313\":\"75\",\"314\":\"76\",\"315\":\"77\",\"316\":\"78\",\"317\":\"79\",\"318\":\"80\",\"319\":\"81\",\"320\":\"82\",\"321\":\"83\",\"322\":\"84\",\"323\":\"85\",\"324\":\"86\",\"325\":\"87\",\"326\":\"88\",\"327\":\"89\",\"328\":\"90\",\"329\":\"91\",\"330\":\"92\",\"331\":\"93\",\"332\":\"94\",\"333\":\"95\",\"334\":\"96\",\"335\":\"97\",\"336\":\"98\",\"337\":\"99\",\"338\":\"100\",\"339\":\"101\",\"340\":\"102\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,23],\"2\":[2,4],\"3\":[1],\"4\":[1,7],\"5\":[2,59],\"6\":[1,23],\"7\":[2,23],\"8\":[1,15],\"9\":[1,20],\"10\":[1,5],\"11\":[1,27],\"12\":[1,26],\"13\":[2,12],\"14\":[1,26],\"15\":[2,11],\"16\":[1,78],\"17\":[3,40],\"18\":[1,29],\"19\":[1,16],\"20\":[1],\"21\":[1,14],\"22\":[3,17],\"23\":[4,7],\"24\":[1,13],\"25\":[3,26],\"26\":[7,23],\"27\":[1],\"28\":[2],\"29\":[1,45],\"30\":[1,38],\"31\":[1,56],\"32\":[1,80],\"33\":[1,16],\"34\":[1,10],\"35\":[3,42],\"36\":[1,23],\"37\":[1,40],\"38\":[2,18],\"39\":[3,32],\"40\":[5,52],\"41\":[2,32],\"42\":[3,52],\"43\":[3,43],\"44\":[2,11],\"45\":[1],\"46\":[4,13],\"47\":[4,4],\"48\":[1],\"49\":[1,25],\"50\":[1],\"51\":[1,31],\"52\":[1,19],\"53\":[1,27],\"54\":[1,2],\"55\":[1,19],\"56\":[1,19],\"57\":[1],\"58\":[1,18],\"59\":[1,12],\"60\":[1,18],\"61\":[1,8],\"62\":[1],\"63\":[1,14],\"64\":[1,49],\"65\":[1,37],\"66\":[1,28],\"67\":[1,36],\"68\":[1],\"69\":[1,33],\"70\":[1,21],\"71\":[1],\"72\":[3,46],\"73\":[3,7],\"74\":[3,24],\"75\":[3,23],\"76\":[3,11],\"77\":[3,13],\"78\":[3,31],\"79\":[3,28],\"80\":[3,15],\"81\":[3,14],\"82\":[1,33],\"83\":[1],\"84\":[1,25],\"85\":[1,26],\"86\":[1,15],\"87\":[1,35],\"88\":[1,21],\"89\":[1,4],\"90\":[1,21],\"91\":[1],\"92\":[1,11],\"93\":[1,25],\"94\":[2,33],\"95\":[2,34],\"96\":[2,39],\"97\":[3],\"98\":[2,30],\"99\":[2,35],\"100\":[1,26],\"101\":[3,30],\"102\":[3,7],\"103\":[1,6],\"104\":[1],\"105\":[1,25],\"106\":[1,20],\"107\":[1,24],\"108\":[1,26],\"109\":[1,36],\"110\":[1],\"111\":[1,7],\"112\":[2,16],\"113\":[1,10],\"114\":[2,28],\"115\":[1,25],\"116\":[1,20],\"117\":[1,4],\"118\":[1],\"119\":[1,21],\"120\":[2,38],\"121\":[1,10],\"122\":[1,9],\"123\":[1,27],\"124\":[2,5],\"125\":[3,38],\"126\":[2,35],\"127\":[1],\"128\":[1,35],\"129\":[1,50],\"130\":[1],\"131\":[1,38],\"132\":[2,159],\"133\":[3,30],\"134\":[1,31],\"135\":[5,34],\"136\":[1,35],\"137\":[1,60],\"138\":[1],\"139\":[1,23],\"140\":[1,152],\"141\":[1,58],\"142\":[1,9],\"143\":[1,47],\"144\":[4,13],\"145\":[2],\"146\":[1,9],\"147\":[2,78],\"148\":[2,2],\"149\":[3,88],\"150\":[3,7],\"151\":[1,7],\"152\":[1,103],\"153\":[1,11],\"154\":[1,19],\"155\":[1,9],\"156\":[1,17],\"157\":[1,14],\"158\":[1,4],\"159\":[1,14],\"160\":[1,19],\"161\":[1,18],\"162\":[1,48],\"163\":[4,96],\"164\":[1],\"165\":[1,19],\"166\":[2,44],\"167\":[2,25],\"168\":[3,42],\"169\":[1],\"170\":[1,56],\"171\":[2,63],\"172\":[1,108],\"173\":[3,70],\"174\":[1],\"175\":[1,35],\"176\":[1,41],\"177\":[2,18],\"178\":[2,16],\"179\":[1],\"180\":[2,34],\"181\":[3,51],\"182\":[3,40],\"183\":[1,5],\"184\":[2,62],\"185\":[1],\"186\":[1],\"187\":[1,15],\"188\":[1,20],\"189\":[1,13],\"190\":[1],\"191\":[1,7],\"192\":[1,102],\"193\":[3,35],\"194\":[1,120],\"195\":[1],\"196\":[1,53],\"197\":[2],\"198\":[3,22],\"199\":[2],\"200\":[1,48],\"201\":[3,14],\"202\":[2,11],\"203\":[1,5],\"204\":[1],\"205\":[1,35],\"206\":[2,13],\"207\":[2,11],\"208\":[1,4],\"209\":[1],\"210\":[2,53],\"211\":[2],\"212\":[1,17],\"213\":[1,12],\"214\":[1,19],\"215\":[1,9],\"216\":[1],\"217\":[2,93],\"218\":[2],\"219\":[1,8],\"220\":[1,7],\"221\":[1,6],\"222\":[1,4],\"223\":[1],\"224\":[1,18],\"225\":[1,103],\"226\":[1,44],\"227\":[1],\"228\":[1,52],\"229\":[1,24],\"230\":[1,4],\"231\":[1,12],\"232\":[1,47],\"233\":[4,52],\"234\":[4],\"235\":[4,59],\"236\":[4,49],\"237\":[5,83],\"238\":[1],\"239\":[2,2],\"240\":[1,4],\"241\":[1,6],\"242\":[1,6],\"243\":[2,8],\"244\":[2,18],\"245\":[2,55],\"246\":[3,18],\"247\":[3,18],\"248\":[2,10],\"249\":[1,25],\"250\":[1,16],\"251\":[1,40],\"252\":[1],\"253\":[1,7],\"254\":[1,8],\"255\":[1,8],\"256\":[1,8],\"257\":[1],\"258\":[1,29],\"259\":[1,38],\"260\":[1],\"261\":[1,7],\"262\":[1,8],\"263\":[1,66],\"264\":[1,33],\"265\":[1],\"266\":[2,18],\"267\":[2,52],\"268\":[1],\"269\":[1,74],\"270\":[1],\"271\":[1],\"272\":[2,21],\"273\":[2,29],\"274\":[3,17],\"275\":[1],\"276\":[2,32],\"277\":[2,39],\"278\":[2,21],\"279\":[2,34],\"280\":[2,49],\"281\":[1],\"282\":[5,10],\"283\":[2,8],\"284\":[2,19],\"285\":[6,21],\"286\":[2,10],\"287\":[2,59],\"288\":[3,28],\"289\":[2,12],\"290\":[4,23],\"291\":[4,15],\"292\":[2,33],\"293\":[2,19],\"294\":[1],\"295\":[6,22],\"296\":[4,20],\"297\":[6,19],\"298\":[1],\"299\":[4,15],\"300\":[3,6],\"301\":[5,11],\"302\":[3,8],\"303\":[6,24],\"304\":[1,3],\"305\":[1],\"306\":[1],\"307\":[1],\"308\":[1],\"309\":[1],\"310\":[1],\"311\":[1],\"312\":[1],\"313\":[1],\"314\":[1],\"315\":[1],\"316\":[1],\"317\":[1],\"318\":[1],\"319\":[1],\"320\":[1],\"321\":[1],\"322\":[1],\"323\":[1],\"324\":[1],\"325\":[1],\"326\":[1],\"327\":[1],\"328\":[1],\"329\":[1],\"330\":[1],\"331\":[1],\"332\":[1],\"333\":[1],\"334\":[1],\"335\":[1],\"336\":[1],\"337\":[1],\"338\":[1],\"339\":[1],\"340\":[1]},\"averageFieldLength\":[1.6422287390029326,28.21664525287684],\"storedFields\":{\"0\":{\"h\":\"指南\"},\"1\":{\"h\":\"介绍\",\"t\":[\"本栏目主要提供 Golang 开发相关的指南，包括但不限于 Golang 基础、Golang 进阶、Golang 工具、Golang 框架等内容。主要用于帮助开发者快速了解 Golang 开发相关的知识点，同时提供面试题供开发者学习和求职。\",\"欢迎提交 PR\",\"如果大家有好的 Golang 相关的知识点、面试题、工具等，欢迎提交 PR，我们会及时审核并发布到本站。\",\"要求： PR 提交的内容必须是原创，不能是直接转载的内容，否则不予合并。\"]},\"2\":{\"h\":\"Golang 开发规范\",\"t\":[\"来源\",\"本规范参考了 uber-go\"]},\"3\":{\"h\":\"基本规范\"},\"4\":{\"h\":\"限制单行长度\",\"t\":[\"Go 代码行长度限制为 80 个字符。这有助于在较小的窗口中查看多个文件，以及在较大的窗口中查看多个文件。\"]},\"5\":{\"h\":\"相关的声明放在一起,不相关的声明不要放一起\",\"t\":[\"如导入，常量，变量，类型，函数等。\",\"不推荐\",\"推荐\",\"import \\\"a\\\" import \\\"b\\\" \",\"import ( \\\"a\\\" \\\"b\\\" ) \",\"const a = 1 const b = 2 var a = 1 var b = 2 type Area float64 type Volume float64 \",\"const ( a = 1 b = 2 ) var ( a = 1 b = 2 ) type ( Area float64 Volume float64 ) \",\"EnvVar 不属于 iota 相关\",\"type Operation int const ( Add Operation = iota + 1 Subtract Multiply EnvVar = \\\"MY_ENV\\\" ) \",\"type Operation int const ( Add Operation = iota + 1 Subtract Multiply ) const EnvVar = \\\"MY_ENV\\\" \",\"func f() string { red := color.New(0xff0000) green := color.New(0x00ff00) blue := color.New(0x0000ff) ... } \",\"函数内也可分组放在一起\",\"func f() string { var ( red = color.New(0xff0000) green = color.New(0x00ff00) blue = color.New(0x0000ff) ) ... } \",\"func (c *client) request() { caller := c.name format := \\\"json\\\" timeout := 5*time.Second var err error // 单独使用 var 声明不规范 // ... } \",\"func (c *client) request() { var ( caller = c.name format = \\\"json\\\" timeout = 5*time.Second err error ) // ... } \"]},\"6\":{\"h\":\"单个变量声明规范\",\"t\":[\"如果单个变量赋值，建议使用 :=， 但是切片建议使用 var 声明。\",\"不推荐\",\"推荐\",\"var s = \\\"foo\\\" \",\"s := \\\"foo\\\" \",\"func f(list []int) { filtered := []int{} for _, v := range list { if v > 10 { filtered = append(filtered, v) } } } \",\"func f(list []int) { var filtered []int for _, v := range list { if v > 10 { filtered = append(filtered, v) } } } \"]},\"7\":{\"h\":\"import 分组规范\",\"t\":[\"import 导入的包应该进行分组，每组之间用空行分隔，每组按照字母顺序排序。\",\"常用分组规则\",\"分两组：\",\"标准库\",\"第三方库\",\"分三组：\",\"标准库\",\"第三方库\",\"本地库和私有库\",\"不推荐\",\"推荐\",\"import ( \\\"fmt\\\" \\\"os\\\" \\\"go.uber.org/atomic\\\" \\\"golang.org/x/sync/errgroup\\\" ) \",\"import ( \\\"fmt\\\" \\\"os\\\" \\\"go.uber.org/atomic\\\" \\\"golang.org/x/sync/errgroup\\\" ) \"]},\"8\":{\"h\":\"导入别名\",\"t\":[\"如果导入的包名与导入路径中的最后一个单词不一致，应该使用别名。或者导入包名太长时可以使用导入别名。在通常情况下不推荐使用别名，除非包名冲突。\",\"import ( \\\"net/http\\\" client \\\"example.com/client-go\\\" trace \\\"example.com/trace/v2\\\" ) \"]},\"9\":{\"h\":\"包名\",\"t\":[\"定义包名请遵循以下规范:\",\"全部小写, 不要使用大写或下划线或其他特殊符号\",\"大多数使用命名导入的情况下，不需要重命名\",\"包名尽量简单而有含义，方便记忆和引用\",\"不要使用复数，例如net/url，而不是net/urls。\",\"不要用“common”，“util”，“shared”或“lib”这些是不好的，信息量不足的名称\"]},\"10\":{\"h\":\"函数名\",\"t\":[\"函数名使用驼峰命名法，不要使用下划线分隔单词 (部分测试函数可以使用下划线分隔单词)\",\"函数名应该尽可能的描述函数的功能，不要使用无意义的名称\"]},\"11\":{\"h\":\"函数的排序\",\"t\":[\"函数的排序应遵循以下规范：\",\"函数的定义应该尽量按照调用顺序排序\",\"同一个文件中函数应放在 struct, const, var 定义之后\",\"有接收者的函数中的 new 或 New 开头的函数应放在前面\",\"不推荐\",\"推荐\",\"func (s *something) Cost() { return calcCost(s.weights) } type something struct{ ... } func calcCost(n []int) int {...} func (s *something) Stop() {...} func newSomething() *something { return &something{} } \",\"type something struct{ ... } func newSomething() *something { return &something{} } func (s *something) Cost() { return calcCost(s.weights) } func (s *something) Stop() {...} func calcCost(n []int) int {...} \"]},\"12\":{\"h\":\"减少嵌套\",\"t\":[\"代码应该有限处理错误或者特殊情况并且尽早返回，而不是嵌套代码块。可以使代码更直观简洁。\",\"不推荐\",\"推荐\",\"for _, v := range data { if v.F1 == 1 { v = process(v) if err := v.Call(); err == nil { v.Send() } else { return err } } else { log.Printf(\\\"Invalid v: %v\\\", v) } } \",\"for _, v := range data { if v.F1 != 1 { log.Printf(\\\"Invalid v: %v\\\", v) continue } v = process(v) if err := v.Call(); err != nil { return err } v.Send() } \"]},\"13\":{\"h\":\"减少不必要的 else\",\"t\":[\"不推荐\",\"推荐\",\"var a int if b { a = 100 } else { a = 10 } \",\"a := 10 if b { a = 100 } \"]},\"14\":{\"h\":\"顶层变量声明\",\"t\":[\"不推荐\",\"推荐\",\"var _s string = F() func F() string { return \\\"A\\\" } \",\"var _s = F() // 由于 F 已经明确了返回一个字符串类型， // 因此我们没有必要显式指定_s 的类型 func F() string { return \\\"A\\\" } \",\"如果我们希望 _e 为 error 类型， 以下定义是错误的, _e 会被定义为 myError 类型\",\"type myError struct{} func (myError) Error() string { return \\\"error\\\" } func F() myError { return myError{} } var _e = F() \",\"type myError struct{} func (myError) Error() string { return \\\"error\\\" } func F() myError { return myError{} } var _e error = F() \"]},\"15\":{\"h\":\"对于未导出的顶层常量和变量使用 作为前缀\",\"t\":[\"Bad\",\"Good\",\"// foo.go const ( defaultPort = 8080 defaultUser = \\\"user\\\" ) \",\"// foo.go const ( _defaultPort = 8080 _defaultUser = \\\"user\\\" ) \"]},\"16\":{\"h\":\"结构体中的嵌入式类型需放在顶部且用空行隔开\",\"t\":[\"不推荐\",\"建议\",\"type Client struct { version int http.Client } \",\"type Client struct { http.Client version int } \",\"嵌入式类型优缺点\",\"优点：\",\"代码简洁\",\"可以直接访问嵌入类型的方法和字段\",\"可以实现接口\",\"缺点：\",\"可能会导致外部包访问到未导出的字段和方法\",\"会导入嵌入式方法的特殊零值\",\"会暴露嵌入式类型的所有字段和方法，所有字段和方法都显示出来，不一定是我们想要的\",\"会导致方法调用的不确定性，如果嵌入的类型有相同的方法，会导致调用的不确定性\",\"给嵌入式类型的字段赋值不方便，会和其他嵌入式类型混合在一起，不容易区分\",\"不推荐\",\"推荐\",\"type A struct { // Bad: A.Lock() and A.Unlock() 现在可用 // 不提供任何功能性好处，并允许用户控制有关 A 的内部细节。 sync.Mutex } \",\"type countingWriteCloser struct { // Good: Write() 在外层提供用于特定目的， // 并且委托工作到内部类型的 Write() 中。 io.WriteCloser count int } func (w *countingWriteCloser) Write(bs []byte) (int, error) { w.count += len(bs) return w.WriteCloser.Write(bs) } \",\"type Book struct { // Bad: 指针更改零值的有用性 io.ReadWriter // other fields } // later var b Book b.Read(...) // panic: nil pointer b.String() // panic: nil pointer b.Write(...) // panic: nil pointer \",\"type Book struct { // Good: 有用的零值 bytes.Buffer // other fields } // later var b Book b.Read(...) // ok b.String() // ok b.Write(...) // ok \",\"type Client struct { sync.Mutex sync.WaitGroup bytes.Buffer url.URL } \",\"type Client struct { mtx sync.Mutex wg sync.WaitGroup buf bytes.Buffer url url.URL } \"]},\"17\":{\"h\":\"nil 是一个有效的 slice\",\"t\":[\"当 slice 为 nil 时表示一个长度为 0 的切片\",\"当返回切片为空时不应该返回一个空切片而是返回 nil\",\"不推荐\",\"建议\",\"if x == \\\"\\\" { return []int{} } \",\"if x == \\\"\\\" { return nil } \",\"使用 len(s) == 0 判断是否为空而不是 s != nil\",\"不推荐\",\"建议\",\"func isEmpty(s []string) bool { return s == nil } \",\"func isEmpty(s []string) bool { return len(s) == 0 } \",\"零值切片（用var声明的切片）可立即使用，无需调用make()创建\",\"不推荐\",\"推荐\",\"nums := []int{} // or, nums := make([]int) if add1 { nums = append(nums, 1) } if add2 { nums = append(nums, 2) } \",\"var nums []int if add1 { nums = append(nums, 1) } if add2 { nums = append(nums, 2) } \"]},\"18\":{\"h\":\"减少变量作用域\",\"t\":[\"尽量减少变量作用域，除非变量在其他地方也被调用\",\"Bad\",\"Good\",\"err := os.WriteFile(name, data, 0644) if err != nil { return err } \",\"if err := os.WriteFile(name, data, 0644); err != nil { return err } \",\"if data, err := os.ReadFile(name); err == nil { err = cfg.Decode(data) if err != nil { return err } fmt.Println(cfg) return nil } else { return err } \",\"由于 err 变量在 if 语句中声明，所以它的作用域仅限于 if 语句块。这样可以避免在 else 语句中使用相同的变量名。\",\"data, err := os.ReadFile(name) if err != nil { return err } if err := cfg.Decode(data); err != nil { return err } fmt.Println(cfg) return nil \"]},\"19\":{\"h\":\"使用原生字符串而不是转义\",\"t\":[\"当字符串内有转义字符时，优先使用 ` 来包裹字符串，表示这是原生字符串，不需要转义\",\"不推荐\",\"推荐\",\"wantError := \\\"unknown name:\\\\\\\"test\\\\\\\"\\\" \",\"wantError := `unknown error:\\\"test\\\"` \"]},\"20\":{\"h\":\"初始化结构体\"},\"21\":{\"h\":\"使用字段名初始化结构\",\"t\":[\"初始化结构体赋值的时候尽量添加字段名，这样可以避免因为结构体字段的变化导致初始化错误\",\"Bad\",\"Good\",\"k := User{\\\"John\\\", \\\"Doe\\\", true} \",\"k := User{ FirstName: \\\"John\\\", LastName: \\\"Doe\\\", Admin: true, } \"]},\"22\":{\"h\":\"忽略 0 值的字段\",\"t\":[\"若初始化的字段为默认的 0 值，可以省略字段名\",\"不推荐\",\"推荐\",\"user := User{ FirstName: \\\"John\\\", LastName: \\\"Doe\\\", MiddleName: \\\"\\\", Admin: false, } \",\"user := User{ FirstName: \\\"John\\\", LastName: \\\"Doe\\\", } \"]},\"23\":{\"h\":\"若初始化全为 0 值的结构变量，使用\",\"t\":[\"不推荐\",\"推荐\",\"user := User{} \",\"var user User \"]},\"24\":{\"h\":\"初始化结构体指针\",\"t\":[\"初始化结构体指针时，使用 & 符号， 而不是 new()\",\"不推荐\",\"推荐\",\"sptr := new(T) sptr.Name = \\\"bar\\\" \",\"sptr := &T{Name: \\\"bar\\\"} \"]},\"25\":{\"h\":\"使用 初始化 map\",\"t\":[\"如果初始化 map, 如果 map 有初始值，建议使用 := 而不是 make()，如果没有初始值，使用 make()，且建议估计 map 大小，设置初始化容量\",\"不推荐\",\"推荐\",\"m := make(map[T1]T2, 3) m[k1] = v1 m[k2] = v2 m[k3] = v3 \",\"m := map[T1]T2{ k1: v1, k2: v2, k3: v3, } \",\"m := make(map[T1]T2) \",\"m := make(map[T1]T2， 3) \"]},\"26\":{\"h\":\"若在 Printf 外定义 format 字符串，建议使用 const\",\"t\":[\"如果在 Printf 外定义格式化字符串，建议使用 const 常量，这样可以避免重复定义格式化字符串, 且可以帮助 go vet 进行静态分析。\",\"Bad\",\"Good\",\"msg := \\\"unexpected values %v, %v\\\\n\\\" fmt.Printf(msg, 1, 2) \",\"const msg = \\\"unexpected values %v, %v\\\\n\\\" fmt.Printf(msg, 1, 2) \"]},\"27\":{\"h\":\"开发原则\"},\"28\":{\"h\":\"error 处理\"},\"29\":{\"h\":\"错误类型\",\"t\":[\"错误类型通常有两种：\",\"静态类型： 由 errors.New() 创建的错误类型，通常用于预定义的错误, 错误信息不变\",\"动态类型: 由 fmt.Errorf() 创建的或者自定义的错误类型，通常用于动态错误信息\",\"错误匹配\",\"当判断错误类型时，不要使用 == 进行比较，应该使用 errors.Is() 或者 errors.As() 进行比较，且应该创建顶级错误变量用于判断\",\"// package foo var ErrCouldNotOpen = errors.New(\\\"could not open\\\") func Open() error { return ErrCouldNotOpen } // package bar if err := foo.Open(); err != nil { if errors.Is(err, foo.ErrCouldNotOpen) { // handle the error } else { panic(\\\"unknown error\\\") } } \"]},\"30\":{\"h\":\"错误包装\",\"t\":[\"我们可以使用 fmt.Errorf() 或者 errors.Wrap() 来包装错误，这样可以保留原始错误信息，同时添加额外的上下文信息\",\"注意\",\"fmt.Errorf() 在 Go 1.13 之后，可以使用 %w 格式化符号来包装错误，这样可以使用 errors.Is() 和 errors.As() 来判断错误类型， 如果使用 %v 格式化符号，会丢失错误类型信息，导致无法使用 errors.Is() 和 errors.As() 来判断错误类型。\",\"s, err := store.New() if err != nil { return fmt.Errorf( \\\"new store: %w\\\", err) } \"]},\"31\":{\"h\":\"错误命名\",\"t\":[\"普通错误变量的命名应该以 Err 开头，后面跟错误的描述，使用驼峰命名法\",\"var ( // 导出以下两个错误，以便此包的用户可以将它们与 errors.Is 进行匹配。 ErrBrokenLink = errors.New(\\\"link is broken\\\") ErrCouldNotOpen = errors.New(\\\"could not open\\\") // 这个错误没有被导出，因为我们不想让它成为我们公共 API 的一部分。 我们可能仍然在带有错误的包内使用它。 errNotFound = errors.New(\\\"not found\\\") ) \",\"自定义的错误命名则建议使用 Error 作为后缀\",\"// 同样，这个错误被导出，以便这个包的用户可以将它与 errors.As 匹配。 type NotFoundError struct { File string } func (e *NotFoundError) Error() string { return fmt.Sprintf(\\\"file %q not found\\\", e.File) } // 并且这个错误没有被导出，因为我们不想让它成为公共 API 的一部分。 我们仍然可以在带有 errors.As 的包中使用它。 type resolveError struct { Path string } func (e *resolveError) Error() string { return fmt.Sprintf(\\\"resolve %q\\\", e.Path) } \"]},\"32\":{\"h\":\"依次处理错误\",\"t\":[\"在处理错误时, 我们应该使用 errors.Is() 和 errors.As() 来判断错误类型，根据不同的错误类型进行不同的处理，如果错误无法处理，则应该明确返回错误可以来源，方便上级处理。\",\"描述\",\"代码\",\"不推荐: 记录错误并将其返回\",\"堆栈中的调用程序可能会对该错误采取类似的操作。这样做会在应用程序日志中造成大量噪音，但收效甚微。\",\"u, err := getUser(id) if err != nil { // BAD: See description log.Printf(\\\"Could not get user %q: %v\\\", id, err) return err } \",\"推荐: 将错误换行并返回\",\"堆栈中更靠上的调用程序将处理该错误。使用%w可确保它们可以将错误与errors.Is或errors.As相匹配 （如果相关）。\",\"u, err := getUser(id) if err != nil { return fmt.Errorf(\\\"get user %q: %w\\\", id, err) } \",\"推荐: 记录错误并正常降级\",\"如果操作不是绝对必要的，我们可以通过从中恢复来提供降级但不间断的体验。\",\"if err := emitMetrics(); err != nil { // Failure to write metrics should not // break the application. log.Printf(\\\"Could not emit metrics: %v\\\", err) } \",\"推荐: 匹配错误并适当降级\",\"如果被调用者在其约定中定义了一个特定的错误，并且失败是可恢复的，则匹配该错误案例并正常降级。对于所有其他案例，请包装错误并返回。\",\"堆栈中更靠上的调用程序将处理其他错误。\",\"tz, err := getUserTimeZone(id) if err != nil { if errors.Is(err, ErrUserNotFound) { // User doesn't exist. Use UTC. tz = time.UTC } else { return fmt.Errorf(\\\"get user %q: %w\\\", id, err) } } \"]},\"33\":{\"h\":\"类型断言\",\"t\":[\"在我们需要类型断言的时候，务必使用 ok 返回值判断，否则会导致 panic\",\"不推荐\",\"推荐\",\"t := i.(string) // 会导致 panic \",\"t, ok := i.(string) if !ok { // 优雅地处理错误 } \"]},\"34\":{\"h\":\"尽量不使用\",\"t\":[\"在生产环境中尽量不要使用 panic, panic 是 级联失败 的主要原因，如果必须使用 panic ，务必使用 recover() 进行处理。\"]},\"35\":{\"h\":\"使用 atomic 原子操作\",\"t\":[\"在并发编程中，我们应该使用 atomic 包提供的原子操作来保证并发安全，可以保证基本类型如 int32, int64 在一个时刻只有一个 goroutine 可以访问。\",\"对于其他类型，则推荐使用 channel 或 sync lock 进行控制\",\"不推荐\",\"推荐\",\"type foo struct { running int32 // atomic } func (f* foo) start() { if atomic.SwapInt32(&f.running, 1) == 1 { // already running… return } // start the Foo } func (f *foo) isRunning() bool { return f.running == 1 // race! } \",\"type foo struct { running atomic.Bool } func (f *foo) start() { if f.running.Swap(true) { // already running… return } // start the Foo } func (f *foo) isRunning() bool { return f.running.Load() } \"]},\"36\":{\"h\":\"不要在公共的结构中使用嵌入类型\",\"t\":[\"不要在公共的结构中使用嵌入类型， 主要原因是如果嵌入多个类型，则会导致大量公开接口和变量混杂，不好管理和配置，且相同的变量和函数可能冲突。且无法保证后续的版本不会冲突。\",\"不推荐\",\"推荐\",\"// ConcreteList 是一个实体列表。 type ConcreteList struct { *AbstractList } \",\"// ConcreteList 是一个实体列表。 type ConcreteList struct { list *AbstractList } // 添加将实体添加到列表中。 func (l *ConcreteList) Add(e Entity) { l.list.Add(e) } // 移除从列表中移除实体。 func (l *ConcreteList) Remove(e Entity) { l.list.Remove(e) } \"]},\"37\":{\"h\":\"避免使用内置名称\",\"t\":[\"声明变量的时候应避免使用内置的名称，如 len, cap, append, copy, new, make, close, delete, complex, real, imag, panic, recover, print, println, error, string, int, uint, uintptr, byte, rune, float32, float64, bool, true, false, iota, nil, true, false, iota, nil, append, cap, close, complex, copy, delete, imag, len, make, new, panic, print, println, real, recover, string, uint, uintptr, byte, rune, float32, float64, int, int8, int16, int32, int64, uint, uint8, uint16, uint32, uint64, uintptr, bool 等\"]},\"38\":{\"h\":\"避免使用 函数\",\"t\":[\"init 函数是在包被导入的时候自动执行的，但是由于 init 函数的执行顺序是不确定的，所以在 init 函数中初始化的变量可能会导致不确定的结果，所以尽量避免使用 init 函数。\",\"什么时候要用 `init()`\",\"当导入包需要赋值的过程十分复杂，且表达式不能用单个变量赋值时\",\"使用可插入的钩子函数如 database/sql 时\",\"对某些预计算方法进行初始化优化\"]},\"39\":{\"h\":\"提前配置 slice 的容量\",\"t\":[\"若能提前知道大概得数据量，应提前给 slice 配置容量，减少 slice 扩容的次数，提高性能。\",\"不推荐\",\"推荐\",\"for n := 0; n < b.N; n++ { data := make([]int, 0) for k := 0; k < size; k++{ data = append(data, k) } } \",\"for n := 0; n < b.N; n++ { data := make([]int, 0, size) for k := 0; k < size; k++{ data = append(data, k) } } \",\"BenchmarkBad-4 100000000 2.48s \",\"BenchmarkGood-4 100000000 0.21s \"]},\"40\":{\"h\":\"使用 Exit 或 Fatal 退出主程序\",\"t\":[\"在主程序中，如果遇到错误，应该使用 os.Exit 或 log.Fatal 退出程序，而不是使用 panic，因为 panic 会导致程序崩溃，而 os.Exit 或 log.Fatal 会正常退出程序。且应该将错误传递到最终的调用者，而不是在每个函数中处理致命错误。\",\"相关信息\",\"最好仅在main() 中调用其中一个 os.Exit 或者 log.Fatal*。所有其他函数应将错误返回到 main 主程序中。\",\"原因：\",\"太多函数可以调用 Fatal 的话会导致难以控制程序流\",\"Fatal 错误可能导致 test 无法全部执行\",\"Fatal 错误可能导致 defer 无法执行\",\"Bad\",\"Good\",\"func main() { body := readFile(path) fmt.Println(body) } func readFile(path string) string { f, err := os.Open(path) if err != nil { log.Fatal(err) } b, err := os.ReadAll(f) if err != nil { log.Fatal(err) } return string(b) } \",\"func main() { body, err := readFile(path) if err != nil { log.Fatal(err) } fmt.Println(body) } func readFile(path string) (string, error) { f, err := os.Open(path) if err != nil { return \\\"\\\", err } b, err := os.ReadAll(f) if err != nil { return \\\"\\\", err } return string(b), nil } \"]},\"41\":{\"h\":\"在序列化的结构体中需声明 Tag\",\"t\":[\"在序列化的结构体中，应该声明 json 或 xml 等序列化的 tag，以便序列化和反序列化时能够正确的解析数据。\",\"推荐\",\"不推荐\",\"type Stock struct { Price int Name string } bytes, err := json.Marshal(Stock{ Price: 137, Name: \\\"UBER\\\", }) \",\"type Stock struct { Price int `json:\\\"price\\\"` Name string `json:\\\"name\\\"` // Safe to rename Name to Symbol. } bytes, err := json.Marshal(Stock{ Price: 137, Name: \\\"UBER\\\", }) \"]},\"42\":{\"h\":\"注意协程 goroutine 的使用\",\"t\":[\"注意\",\"在使用协程时，应该注意以下几点：\",\"goroutine 的数量应该受限制，避免无限制的创建 goroutine\",\"goroutine 必须有一个可预测的停止时间\",\"goroutine 必须有停止的方法\",\"Bad\",\"Good\",\"go func() { for { flush() time.Sleep(delay) } }() \",\"var ( stop = make(chan struct{}) // 告诉 goroutine 停止 done = make(chan struct{}) // 告诉我们 goroutine 退出了 ) go func() { defer close(done) ticker := time.NewTicker(delay) defer ticker.Stop() for { select { case <-tick.C: flush() case <-stop: return } } }() // 其它... close(stop) // 指示 goroutine 停止 <-done // and wait for it to exit \",\"没有办法阻止这个 goroutine。这将一直运行到应用程序退出。\",\"这个 goroutine 可以用 close(stop), 我们可以等待它退出 <-done.\"]},\"43\":{\"h\":\"等待 goroutines 退出\",\"t\":[\"在 goroutine 执行时，需要使用函数保证主程序不退出，否则会终止 goroutine 的执行。\",\"有两种常用的方法可以做到这一点：\",\"使用 sync.WaitGroup. 如果您要等待多个 goroutine，请执行此操作\",\"var wg sync.WaitGroup for i := 0; i < N; i++ { wg.Add(1) go func() { defer wg.Done() // ... }() } // To wait for all to finish: wg.Wait() \",\"添加另一个 chan struct{}，goroutine 完成后会关闭它。 如果只有一个 goroutine，请执行此操作。\",\"done := make(chan struct{}) go func() { defer close(done) // ... }() // To wait for the goroutine to finish: <-done \"]},\"44\":{\"h\":\"不要在 中使用\",\"t\":[\"在 init() 函数中使用 goroutine 会导致程序的初始化变得复杂，因为 init() 函数是在程序启动时执行的，而 goroutine 是异步执行的，可能会导致程序的初始化顺序变得不确定。\"]},\"45\":{\"h\":\"性能优化\"},\"46\":{\"h\":\"优先使用 strconv 而不是 fmt\",\"t\":[\"在进行字符串转换时，尽量使用 strconv 包，而不是 fmt 包，因为 fmt 包是比较重的，而 strconv 包是比较轻的。strconv 包转换速度更快，所需资源更少。\"]},\"47\":{\"h\":\"指定 map, slice 的容量\",\"t\":[\"如果提前知道大概容量吗，请提前赋值，以避免不必要的内存分配和自动扩容。\"]},\"48\":{\"h\":\"保留关键字\"},\"49\":{\"h\":\"保留关键字\",\"t\":[\"golang 有 25 个保留的关键字，这些关键字不能用作程序标识符。\",\"类型\",\"关键字\",\"介绍\",\"声明\",\"constfuncimportpackagetypevar\",\"这些关键字用于声明代码中的各种元素\",\"复合类型\",\"chaninterfacemapstruct\",\"这些关键字用于声明一些特殊的复合类型\",\"流程控制\",\"breakcasecontinuedefaultelsefallthroughforgotoifrangereturnselectswitch\",\"这些关键字用于控制程序运行流程\",\"功能修饰\",\"defergo\",\"用于修饰特殊的 function\",\"注意\",\"注意： 下面的例子中的 T 表示任意类型\"]},\"50\":{\"h\":\"声明类型关键字\"},\"51\":{\"h\":\"\",\"t\":[\"const 用于声明常量，常量一经声明就不能被更改，声明常量必须指定初始值。\",\"例子\",\"const identifier T = value // T 为数据类型，可以省略，编译器会自己推断。 const identifier1, identifier2 = value1, value2 // 声明多个，如 const a, b, c = \\\"hello\\\", 100, true const ( FeMale = 0 Male = 1 ) // 枚举 const ( a = iota b c ) // iota \"]},\"52\":{\"h\":\"\",\"t\":[\"func 用于声明函数，支持多个返回值，不支持默认参数。\",\"例子\",\"// p 为参数， T 为类型 func Test(p T) {} func Test(p T) (T1, T2) {} func Test (p T, p1, T1, list ...T3) (T4, T5) {} // 不定参数 \"]},\"53\":{\"h\":\"\",\"t\":[\"import 用于导入包，使用其公开的标识符。\",\"import 支持单行和多行导入。\",\"例子\",\"import \\\"flag\\\" // 单个导入 import ( \\\"flag\\\" \\\"fmt\\\" ) // 多个导入 \",\"我们还可以使用 ., _ 和别名修饰导入的包。\",\"导入命令\",\"使用方法\",\"解析\",\"import \\\"lib/math\\\"\",\"math.Sin\",\"普通导入需要使用包名\",\"import m \\\"lib/math\\\"\",\"m.Sin\",\"可以在导入时设置别名\",\"import . \\\"lib/math\\\" \",\"Sin\",\"使用 . 导入本地可以直接使用函数，不需要包名\",\"我们还可以使用 _ 来修饰导入的包，这样只会执行导入包的初始化函数 init()\"]},\"54\":{\"h\":\"\",\"t\":[\"package 用于定义包名\"]},\"55\":{\"h\":\"\",\"t\":[\"type 用于定义变量类型\",\"例子\",\"// 定义接口 type Animal interface { eat() } // 定义结构 type Tiger struct { Name string } // 定义等价类型 type Num int32 // 定义一个新的类型 type Num = int32 // 仅定义别名 \"]},\"56\":{\"h\":\"\",\"t\":[\"var 用于声明公开或者私有变量\",\"例子\",\"var Name T // 公开变量 var name T // 私有变量 var name1, name2 T // 声明多个相同类型的变量 var name1, name2 T = val1, val2 // 声明多个相同类型的变量, 并初始化 var name1, name2 = val1, val2 // 根据 val1, val2 自动推断类型并初始化 // 使用括号 var ( name1 = val1 name2 = val2 ) \"]},\"57\":{\"h\":\"复合类型\"},\"58\":{\"h\":\"\",\"t\":[\"chan (Channel) 用于声明信道。\",\"例子\",\"// 用于发送和接收 T 类型的数据的信道 chan T // 用于发送 T 类型的数据的信道 <-chan T // 用于接收 T 类型的数据的信道 chan<- T \",\"ch := make(chan T) // 无缓冲信道 ch := make(chan T, 20) // 带缓冲信道 \"]},\"59\":{\"h\":\"\",\"t\":[\"interface 用于声明接口\",\"例子\",\"type File interface { Read(b Buffer) bool Write(b Buffer) bool Close() } \"]},\"60\":{\"h\":\"\",\"t\":[\"map 用于声明集合，由无序的键值对组成，底层为 hash map. 虽然 map 会自动扩容，但是建议在初始化的时候就配置容量。\",\"例子\",\"m := make(map[string]string) // 空的 map m := make(map[string]string, 10) // 初始容量为 10 的 map \"]},\"61\":{\"h\":\"\",\"t\":[\"struct 用于声明结构体\",\"例子\",\"type Person struct { Name string } \"]},\"62\":{\"h\":\"流程控制\"},\"63\":{\"h\":\"\",\"t\":[\"ifelse 用于条件判断，可嵌套使用\",\"例子\",\"if a > 0 { fmt.Println(\\\"hello\\\") } else { fmt.Println(\\\"world\\\") } \"]},\"64\":{\"h\":\"\",\"t\":[\"switch 用于根据不同条件执行不同的动作，默认每个 case 都带有 break, 执行完一个 case 会自动跳出，若希望继续执行下面的语句，需搭配 fallthrough\",\"例子\",\"a := \\\"2\\\" switch a { case \\\"1\\\": fmt.Println(\\\"hello\\\") case \\\"2\\\": fmt.Println(\\\"world\\\") default: // 默认操作 fmt.Println(\\\"default\\\") } // 结果： world \",\"使用 fallthrough 可以在执行完对应 case 后直接执行下一个 case 的动作\",\"package main import \\\"fmt\\\" func main() { var dayOfWeek int = 4 switch dayOfWeek { case 1: fmt.Println(\\\"Monday\\\") fallthrough case 2: fmt.Println(\\\"Tuesday\\\") fallthrough case 3: fmt.Println(\\\"Wednesday\\\") fallthrough case 4: fmt.Println(\\\"Thursday\\\") fallthrough case 5: fmt.Println(\\\"Friday\\\") fallthrough case 6: fmt.Println(\\\"Saturday\\\") case 7: fmt.Println(\\\"Sunday\\\") default: fmt.Println(\\\"Invalid Day\\\") } } // 结果： // Thursday // Friday // Saturday \"]},\"65\":{\"h\":\"\",\"t\":[\"for 用于循环执行动作，使用 break 中断当前 for 循环， continue 用于跳过当前循环的剩余语句，继续执行下一轮循环\",\"例子\",\"// 单个条件 for i <= 10 { fmt.Println(i) i = i + 1 } // 初始化并判断 for i:=0; i < 3; i++ { fmt.Println(i) } // for range 遍历 array :=[]int{1, 2, 3, 4, 5} for i, v :=range array{ fmt.Println(i,v) } // break for i, v :=range array{ if i >= 2 { break } fmt.Println(i,v) } // continue for i, v :=range array{ if i == 2 { continue } fmt.Println(i,v) } \"]},\"66\":{\"h\":\"\",\"t\":[\"goto 可以跳到指定位置继续执行动作\",\"例子\",\"package main import \\\"fmt\\\" func main() { for i := 0; i < 10; i ++ { if i == 5 { goto end // 跳到 end 位置执行 } fmt.Println(i) } end: fmt.Println(\\\"end\\\") } // 结果： // 0 // 1 // 2 // 3 // 4 // end \"]},\"67\":{\"h\":\"\",\"t\":[\"select 让 goroutine 等待多个通信操作，select 会阻塞直到一个 case 接收到信息，如果同时多个通道收到数据，则会随机执行一个 case\",\"例子\",\"package main import \\\"fmt\\\" func fibonacci(c, quit chan int) { x, y := 0, 1 for { select { case c <- x: x, y = y, x+y case <-quit: fmt.Println(\\\"quit\\\") return } } } func main() { c := make(chan int) quit := make(chan int) go func() { for i := 0; i < 10; i++ { fmt.Println(<-c) } quit <- 0 }() fibonacci(c, quit) } \"]},\"68\":{\"h\":\"功能修饰\"},\"69\":{\"h\":\"\",\"t\":[\"return 用于终止函数的执行并返回0个或多个返回值， defer 用于函数 return 之前或执行完之后执行动作\",\"例子\",\"package main import \\\"fmt\\\" func main() { defer fmt.Println(\\\"world\\\") fmt.Println(\\\"hello\\\") } // 结果 // hello // world \",\"注意：\",\"defer 的执行顺序是后进先出\",\"defer 在 return 之前执行意味着可以使用 defer 获取 return 之前变量的最终结果\",\"package main import \\\"fmt\\\" func main() { num := 1 defer func() { fmt.Println(num) }() for i := 0; i < 4; i ++ { num += i } } // 结果： // 7 \"]},\"70\":{\"h\":\"\",\"t\":[\"go 用于创建协程（goroutine）, 在程序后台执行动作\",\"例子\",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { go func(){ fmt.Println(\\\"no.1\\\") }() go func(){ fmt.Println(\\\"no.2\\\") }() fmt.Println(\\\"start goroutine\\\") time.Sleep(5*time.Second) } // 结果： // start goroutine // no.1 // no.2 \"]},\"71\":{\"h\":\"数据类型\"},\"72\":{\"h\":\"整数 (int)\",\"t\":[\"整数有两种类型：\",\"类型\",\"范围\",\"介绍\",\"有符号数 (signed integers)\",\"-∞ ~ +∞\",\"有符号数包含正数和负数\",\"无符号数 (unsigned integers)\",\"0 ~ +∞\",\"无符号数包含 0 和所有正数\",\"golang 中 int 开头为有符号数， uint 开头为无符号数\",\"Golang 中的整数类型：\",\"位\",\"类型\",\"8\",\"int8uint8\",\"16\",\"int16uint16\",\"32\",\"int32uint32\",\"64\",\"int64uint64\",\"32 或 64 (基于系统架构)\",\"intuint\",\"同时还有两个等价类型\",\"rune : 等价于 int32 , 用于存储 Unicode 字符\",\"byte ：等价于 uint8 , 用于存储 ASCII 字符\"]},\"73\":{\"h\":\"浮点数 (float)\",\"t\":[\"浮点数就是包含小数点的数字\",\"位\",\"类型\",\"32\",\"float32\",\"64\",\"float64\"]},\"74\":{\"h\":\"复数 (complex)\",\"t\":[\"复数包含虚数和实数，实数为浮点数\",\"位\",\"类型\",\"32 位浮点数 + 虚数\",\"complex64\",\"64 位浮点数 + 虚数\",\"complex128\",\"例子\",\"// 初始化一个复数 var complexData complex64 = complex(5, 3) // 等于： 5 + 3i // 另一种初始化方式 complexData2 := 5 + 3i \"]},\"75\":{\"h\":\"字符串 (string)\",\"t\":[\"字符串由一连串的字符组成，类型名称为 string\",\"字符串一旦创建，无法修改\",\"例子\",\"package main import \\\"fmt\\\" func main() { var str string := \\\"Hi! Jack\\\" // 不能修改，以下注释的代码会报错 // str[2] = 'c' fmt.Printf(\\\"%s\\\",str) } \"]},\"76\":{\"h\":\"布尔类型 (bool)\",\"t\":[\"布尔类型的值为 true 或 false, 类型名称为 bool\",\"例子\",\"var isNumber bool isNumber = true isNumber = false \"]},\"77\":{\"h\":\"数组 (array)\",\"t\":[\"数组由一系列数据组成，可通过下标获取数据\",\"数组的容量一经创建就无法修改\",\"例子\",\"data := [5]int{1, 2, 3, 4, 5} \"]},\"78\":{\"h\":\"切片 (slices)\",\"t\":[\"切片是动态的数组，可根据数据自动调整容量大小\",\"例子\",\"package main import \\\"fmt\\\" func main() { var data []int for i := 0; i < 10; i ++ { data = append(data, i) } fmt.Println(data) } // 结果 // [0 1 2 3 4 5 6 7 8 9] \"]},\"79\":{\"h\":\"Map (map)\",\"t\":[\"map 是一种键值映射表，通过 key 获取对应的 value\",\"map 的声明方式\",\"map[KeyType]ValueType \",\"KeyType 为 key 的数据类型 , ValueType 为 value 的数据类型\",\"例子\",\"// 声明 map var m map[string]int // 使用 make 初始化 map m = make(map[string]int) // 设置值 m[\\\"path\\\"] = 66 // 输出值 fmt.Println(m[\\\"path\\\"]) \"]},\"80\":{\"h\":\"结构体 (struct)\",\"t\":[\"结构体由一系列自定义的字段组成，可通过 . 获取字段内容\",\"例子\",\"type Animal struct { Name string } a := Animal{ Name: \\\"Lucky\\\" } fmt.Println(a.Name) \"]},\"81\":{\"h\":\"指针 (pointer)\",\"t\":[\"指针存储的是变量的内存地址，在变量前使用 * 定义为指针，使用 & 获取变量地址，通过指针可以在函数中修改函数外的数据\",\"例子\",\"var num *int n := 10 num = &n \"]},\"82\":{\"h\":\"零值表\",\"t\":[\"类型\",\"零值\",\"uint/uint8/uint16/uint32/uint64\",\"0\",\"int/int8/int16/int32/int64\",\"0\",\"float32/float64\",\"0\",\"complex64/complex128\",\"0+0i\",\"bool\",\"false\",\"uintptr\",\"0\",\"byte\",\"0\",\"rune\",\"0\",\"string\",\"\\\"\\\"\",\"struct\",\"内部属性全部是其对应0值\",\"interface\",\"nil\",\"slice\",\"nil\",\"map\",\"nil\",\"chan\",\"nil\",\"func\",\"nil\",\"pointer\",\"nil\"]},\"83\":{\"h\":\"运算符\"},\"84\":{\"h\":\"算术运算符\",\"t\":[\"A\",\"B\",\"50\",\"20\",\"操作符\",\"操作\",\"结果\",\"描述\",\"+\",\"A + B\",\"70\",\"相加\",\"-\",\"A - B\",\"30\",\"相减\",\"*\",\"A * B\",\"1000\",\"相乘\",\"/\",\"A / B\",\"2\",\"相除\",\"%\",\"A % B\",\"10\",\"取余\",\"++\",\"A++\",\"51\",\"自增\",\"--\",\"A--\",\"49\",\"自减\"]},\"85\":{\"h\":\"关系运算符\",\"t\":[\"A\",\"B\",\"50\",\"20\",\"操作符\",\"操作\",\"结果\",\"描述\",\"==\",\"A == B\",\"false\",\"检查两数是否相等，若相等则为 true，否则为 false\",\"!=\",\"A != B\",\"true\",\"检查两数是否不相等，若不相等则为 true , 否则为 false\",\">\",\"A > B\",\"true\",\"检查左边是否大于右边，若成立则为 true, 否则为 false\",\"<\",\"A < B\",\"false\",\"检查左边是否小于右边，若成立则为 true, 否则为 false\",\">=\",\"A >= B\",\"true\",\"检查左边是否大于等于右边，若成立则为 true, 否则为 false\",\"<=\",\"A <= B\",\"false\",\"检查左边是否小于等于右边，若成立则为 true, 否则为 false\"]},\"86\":{\"h\":\"逻辑运算符\",\"t\":[\"A\",\"B\",\"true\",\"false\",\"操作符\",\"操作\",\"结果\",\"描述\",\"&&\",\"A && B\",\"false\",\"若两边都为 true，则结果为 true，否则为 false\",\"!=\",\"A != B\",\"true\",\"若两边有一边为 true，则结果为 true，若两边都为 false ， 则结果为 false\",\"！\",\"!A\",\"false\",\"若条件为 true 则结果为 false, 反之若条件为 false, 则结果为 true\"]},\"87\":{\"h\":\"位运算符\",\"t\":[\"真值表\",\"p\",\"q\",\"p & q\",\"p | q\",\"p ^ q\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"0\",\"1\",\"0\",\"0\",\"1\",\"1\",\"假设\",\"变量\",\"值\",\"A\",\"0110 1000\",\"B\",\"0111 0011\",\"操作符\",\"操作\",\"结果\",\"描述\",\"&\",\"A & B\",\"0110 0000\",\"按位进行与运算\",\"|\",\"A | B\",\"0111 1011\",\"按位进行或运算\",\"^\",\"A ^ B\",\"0001 1011\",\"按位进行异或运算\",\"<<\",\"A << 2\",\"1010 0000\",\"左移 2 位，低位补 0\",\">>\",\"A >> 2\",\"0001 1010\",\"右移 2 位，高位补 0\"]},\"88\":{\"h\":\"赋值运算符\",\"t\":[\"我们可以使用 = 将右边的结果赋值到左边，如 C = A + B\",\"运算符\",\"操作\",\"等同于\",\"+=\",\"A += B\",\"A = A + B\",\"-=\",\"A -= B\",\"A = A - B\",\"*=\",\"A *= B\",\"A = A * B\",\"/=\",\"A /= B\",\"A = A / B\",\"%=\",\"A %= B\",\"A = A % B\",\"<<=\",\"A <<= 2\",\"A = A << 2\",\">>=\",\"A >>= 2\",\"A = A >> 2\",\"&=\",\"A &= 2\",\"A = A & 2\",\"|=\",\"A |= 2\",\"A = A | 2\",\"^=\",\"A ^= 2\",\"A = A ^ 2\"]},\"89\":{\"h\":\"其他符号\",\"t\":[\"运算符\",\"描述\",\"&\",\"取地址\",\"*\",\"指针\"]},\"90\":{\"h\":\"符号优先级\",\"t\":[\"从高到低为：\",\"优先级\",\"运算符\",\"5\",\"* / % << >> & &^\",\"4\",\"+ - | ^\",\"3\",\"== != < <= > >=\",\"2\",\"&&\",\"1\",\"||\",\"可以使用括号提高优先级\"]},\"91\":{\"h\":\"错误处理\"},\"92\":{\"h\":\"接口\",\"t\":[\"golang 提供了 error 类型的接口\",\"type error interface { Error() string } \",\"只要结构体实现了 Error() 方法就属于 error 类型\"]},\"93\":{\"h\":\"创建错误\",\"t\":[\"golang 提供了多种创建 error 的方法\",\"我们可以使用 errors.New()fmt.Errorf() 来创建错误\",\"例子\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" ) func main() { // 使用 New 创建错误 err1 := errors.New(\\\"first error\\\") // 使用 fmt 创建错误 err2 := fmt.Errorf(\\\"second %s\\\", \\\"error\\\") fmt.Println(err1, err2) } \"]},\"94\":{\"h\":\"errors.Join\",\"t\":[\"在 go 1.20 提供了 errors.Join 方法将多个 error 组合成一个数组\",\"例子\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" ) func main() { // 使用 New 创建错误 err1 := errors.New(\\\"first error\\\") // 使用 fmt 创建错误 err2 := fmt.Errorf(\\\"second %s\\\", \\\"error\\\") // 使用 join 将多个 error 合并 err3 := errors.Join(err1, err2) fmt.Println(err1, err2) // 结果: first error second error fmt.Println(err3) // 结果： // first error // second error } \"]},\"95\":{\"h\":\"errors.Is\",\"t\":[\"使用 errors.Is() 方法可以判断当前 error 是否包含目标类型的 error\",\"例子\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" ) func main() { // 使用 New 创建错误 err1 := errors.New(\\\"first error\\\") // 使用 fmt 创建错误 err2 := fmt.Errorf(\\\"second %s\\\", \\\"error\\\") // 使用 join 将多个 error 合并 err3 := errors.Join(err1, err2) fmt.Println(err1, err2) // 结果: first error second error fmt.Println(err3) // 结果： // first error // second error // 使用 errors.Is() 判断错误是否是目标错误， err3 包含 err1 所以为 true fmt.Println(errors.Is(err1, err2)) // 结果: false fmt.Println(errors.Is(err3, err1)) // 结果： true } \"]},\"96\":{\"h\":\"errors.As\",\"t\":[\"使用 errors.As() 方法可以将 error 中第一个符合目标类型的错误赋值到目标对象\",\"例子\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" ) type NormalErr struct { e string } func (t NormalErr) Error() string { return t.e } func main() { // 使用 New 创建错误 err1 := errors.New(\\\"first error\\\") // 创建 T err2 := NormalErr{\\\"second error\\\"} // 使用 join 将多个 error 合并 err3 := errors.Join(err1, err2) var err4 NormalErr errors.As(err3, &err4) fmt.Println(err4) // 结果： second error } \"]},\"97\":{\"h\":\"Map (集合)\"},\"98\":{\"h\":\"创建 Map\",\"t\":[\"map 是一种键值映射表，通过 key 获取对应的 value\",\"map 的声明方式\",\"map[KeyType]ValueType \",\"KeyType 为 key 的数据类型 , ValueType 为 value 的数据类型\",\"例子\",\"// 声明 map var m map[string]int // 使用 make 初始化 map m = make(map[string]int) // 使用 make 初始化 map, 并设置容量 // m = make(map[string]int, 10) // 设置值 m[\\\"path\\\"] = 66 // 输出值 fmt.Println(m[\\\"path\\\"]) \"]},\"99\":{\"h\":\"遍历 Map\",\"t\":[\"使用 range 遍历 map\",\"例子\",\"package main import \\\"fmt\\\" func main() { // 初始化 Map var dataMap map[string]string dataMap = make(map[string]string) // 也可以这样初始化 //dataMap := map[string]string{} // 添加键值 dataMap[\\\"first\\\"] = \\\"first value\\\" dataMap[\\\"second\\\"] = \\\"second value\\\" dataMap[\\\"third\\\"] = \\\"third value\\\" fmt.Println(\\\"print key and value: \\\") // 使用 range 遍历 key value for key, val := range dataMap { fmt.Printf(\\\"key: %s - value: %s \\\\n\\\", key, val) } fmt.Println(\\\"print key: \\\") // 使用 range 遍历 key for key := range dataMap { fmt.Printf(\\\"key: %s \\\\n\\\", key) } fmt.Println(\\\"print value: \\\") // 使用 range 遍历 value for _, val := range dataMap { fmt.Printf(\\\"Value: %s \\\\n\\\", val) } } // 结果 // print key and value: // key: third - value: third value // key: first - value: first value // key: second - value: second value // print key: // key: first // key: second // key: third // print value: // Value: first value // Value: second value // Value: third value \"]},\"100\":{\"h\":\"删除键值\",\"t\":[\"在字典中删除键值需要使用 delete() 方法\",\"例子\",\"package main import \\\"fmt\\\" func main() { // 初始化 Map var dataMap map[string]string dataMap = make(map[string]string) // 也可以这样初始化 //dataMap := map[string]string{} dataMap[\\\"first\\\"] = \\\"first value\\\" dataMap[\\\"second\\\"] = \\\"second value\\\" dataMap[\\\"third\\\"] = \\\"third value\\\" fmt.Println(dataMap) // 删除键值 delete(dataMap, \\\"first\\\") fmt.Println(dataMap) } // 结果： // map[first:first value second:second value third:third value] // map[second:second value third:third value] \"]},\"101\":{\"h\":\"判断 key 是否存在\",\"t\":[\"例子\",\"package main import \\\"fmt\\\" func main() { // 初始化 Map var dataMap map[string]string dataMap = make(map[string]string) dataMap[\\\"first\\\"] = \\\"first value\\\" dataMap[\\\"second\\\"] = \\\"second value\\\" dataMap[\\\"third\\\"] = \\\"third value\\\" // 判断 key 是否存在 if val, ok := dataMap[\\\"first\\\"]; ok { fmt.Println(val) } else { fmt.Println(\\\"key not exists\\\") } if val, ok := dataMap[\\\"fourth\\\"]; ok { fmt.Println(val) } else { fmt.Println(\\\"key not exists\\\") } } \"]},\"102\":{\"h\":\"获取 Map 长度\",\"t\":[\"使用 len() 获取 Map 的长度\",\"len(dataMap) \"]},\"103\":{\"h\":\"并发\",\"t\":[\"在并发操作下 Map 不是线程安全的，可以使用官方的 sync.Map{} 解决\"]},\"104\":{\"h\":\"切片\"},\"105\":{\"h\":\"创建切片\",\"t\":[\"有三种方式可以创建切片\",\"package main import \\\"fmt\\\" func main() { // 第一种方式： 直接声明 var dataSlice []string // 第二种方式： 直接初始化 dataSlice1 := []string{} // 第三种方式： 使用 make dataSlice2 := make([]string, 10) fmt.Println(dataSlice, dataSlice1, dataSlice2) } \",\"可以在创建时直接将数据初始化\",\"dataSlice1 := []string{\\\"Jack\\\", \\\"Mike\\\"} \"]},\"106\":{\"h\":\"切片截取\",\"t\":[\"arr[beginIndex:endIndex] 可以截取切片，包含 beginIndex， 不包含 endIndex 下标的数据。\",\"data := []int{0,1,2,3,4,5} fmt.Println(data[2:4]) // 结果 // [2 3] \"]},\"107\":{\"h\":\"长度及容量\",\"t\":[\"使用 len() 获取切片长度， 使用 cap() 获取切片容量\",\"例子\",\"package main import \\\"fmt\\\" func main() { // 创建长度为 5 ， 容量为 9 的切片 data := make([]int, 5, 9) fmt.Println(data, len(data), cap(data)) } // 结果： // [0 0 0 0 0] 5 9 \"]},\"108\":{\"h\":\"追加数据\",\"t\":[\"使用 append() 函数追加数据\",\"例子\",\"package main import \\\"fmt\\\" func main() { data := []int{0,1,2} // 追加一条数据 data1 := append(data, 3) // 追加多条数据 data2 := append(data, 4, 5, 6) fmt.Println(data) fmt.Println(data1) fmt.Println(data2) } // 结果： // [0 1 2] // [0 1 2 3] // [0 1 2 4 5 6] \"]},\"109\":{\"h\":\"克隆切片\",\"t\":[\"我们知道切片属于引用类型，如果将一个切片赋值给另一个变量，实际上共用一个内存地址的数据，如果想创建两个相同数据的切片，可以使用 copy() 方法\",\"例子\",\"package main import \\\"fmt\\\" func main() { data := []int{0,1,2} // 创建一个长度相同的切片 data1 := make([]int, len(data)) // 复制 data 的数据到 data1 copy(data1, data) // 给 data1 添加数据 data1 = append(data1, 3, 4, 5) fmt.Println(data) fmt.Println(data1) // 会发现 data 没被改变 } // 结果： // [0 1 2] // [0 1 2 3 4 5] \"]},\"110\":{\"h\":\"信道\"},\"111\":{\"h\":\"介绍\",\"t\":[\"channel 是一个信道，用于端到端数据的通信，常用于 goroutine 之间数据共享。\"]},\"112\":{\"h\":\"创建 channel\",\"t\":[\"我们使用 make 来创建 channel\",\"ch1 := make(chan T) // 无缓冲 ch2 := make(chan T, 2) // 带缓冲 \",\"T 为数据类型。\",\"注意\",\"无缓冲区的信道会被阻塞直到数据被接收\",\"有缓冲区的信道在发送的数据达到缓冲区大小后才会被阻塞\"]},\"113\":{\"h\":\"发送接收数据\",\"t\":[\"使用 <- 指向 channel 表示发送数据到该 channel, 如 ch <- 10\",\"使用 <- 在 channel 左侧表示接收数据，如 <-ch\"]},\"114\":{\"h\":\"关闭 channel\",\"t\":[\"使用 close() 关闭 channel\",\"close(ch) \",\"注意\",\"如果往一个已经 close() 的 channel 发送消息，会产生 panic\",\"读取已关闭的 channel 可以获得零值, 若使用 range 读取 channel, 则 close 后会终止循环\",\"我们可以使用 val, ok := <- ch 来判断是否是零值，若 ok 为 false 则信道已经 close\"]},\"115\":{\"h\":\"Select\",\"t\":[\"通常我们会使用 select 来接收 channel 的数据, 还可以使用 default 设定默认执行的动作, select 可以同时接收多个 channel ，若多个 channel 同时发送过来数据，则会随机选择一个 channel 完成操作\",\"select { case <-ch1: // 接收 ch1 的数据 fmt.Println(\\\"ch1\\\") case <-ch2: // 接收 ch2 的数据 fmt.Println(\\\"ch2\\\") case val := <-ch3: fmt.Println(ch3) //接收 ch3 的数据并打印 default: fmt.Println(\\\"default\\\") } \"]},\"116\":{\"h\":\"例子\",\"t\":[\"定时器就是通过 channel 实现了定时结果的返回\",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { t := time.NewTicker(3*time.Second) fmt.Println(\\\"start\\\") <-t.C fmt.Println(\\\"finish\\\") } \"]},\"117\":{\"h\":\"注意事项\",\"t\":[\"使用 channel 时要注意必须有接收数据端，注意避免死锁问题\"]},\"118\":{\"h\":\"Context\"},\"119\":{\"h\":\"介绍\",\"t\":[\"Context 是 golang 中十分重要的接口，用于定义 goroutine 中的上下文信息，context 常用于以下几种情况：\",\"数据传递： 在多个 goroutine 中传递数据\",\"超时管理： 通过配置超时时间，可以方便地配置协程的终止时间\",\"终止协程： 通过使用 cancel() 方法，协程可以很方便地终止，可以批量管理多个协程的终止\"]},\"120\":{\"h\":\"Context 接口\",\"t\":[\"// A Context carries a deadline, a cancelation signal, and other values across // API boundaries. // // Context's methods may be called by multiple goroutines simultaneously. type Context interface { Done() <-chan struct{} Deadline() (deadline time.Time, ok bool) Err() error Value(key interface{}) interface{} } \"]},\"121\":{\"h\":\"根节点和派生节点\",\"t\":[\"我们可以为 context 创建根节点和派生节点，为树形结构，当根节点被 cancel() 或超时终止时，它的所有派生节点也会被终止，根节点的数据也会被所有派生节点共享。\",\"context 结构\"]},\"122\":{\"h\":\"创建根节点\",\"t\":[\"ctx := context.Background() // 创建空白 context ctx2 := context.TODO() // TODO 同样是空白 context \"]},\"123\":{\"h\":\"创建派生节点\",\"t\":[\"使用 context.WithXXX() 创建派生 context\",\"package main import ( \\\"context\\\" \\\"fmt\\\" ) func main() { ctx := context.WithValue(context.Background(), \\\"base\\\", \\\"baseVal\\\") ctx1 := context.WithValue(ctx, \\\"ctx1\\\", \\\"ctx1Val\\\") ctx2 := context.WithValue(ctx, \\\"ctx2\\\", \\\"ctx2Val\\\") ctx3 := context.WithValue(ctx, \\\"ctx3\\\", \\\"ctx3Val\\\") fmt.Println(ctx) fmt.Println(ctx1) fmt.Println(ctx2) fmt.Println(ctx3) } // 结果： // context.Background.WithValue(type string, val baseVal) // context.Background.WithValue(type string, val baseVal).WithValue(type string, val ctx1Val) // context.Background.WithValue(type string, val baseVal).WithValue(type string, val ctx2Val) // context.Background.WithValue(type string, val baseVal).WithValue(type string, val ctx3Val) \"]},\"124\":{\"h\":\"WithValue()\",\"t\":[\"context.WithValue() 可以用于创建派生节点并添加键值数据，同时保留父级 context 所有的数据\"]},\"125\":{\"h\":\"WithDeadline() WithTimeout()\",\"t\":[\"context.WithDeadline() 和 context.WithTimeout() 可以用来创建带有超时控制的 context\",\"注意\",\"WithTimeout(1*time.Second) 等同于 WithDeadline(time.Now().Add(1*time.Second))\",\"package main import ( \\\"context\\\" \\\"fmt\\\" \\\"time\\\" ) func main() { ctx, _ := context.WithTimeout(context.Background(), 3*time.Second) go func(ctx1 context.Context) { for { select { case <-ctx1.Done(): fmt.Println(\\\"time out\\\") return default: fmt.Println(\\\"running...\\\") time.Sleep(time.Second) } } }(ctx) time.Sleep(5 * time.Second) } // 结果： // running... // running... // running... // time out \"]},\"126\":{\"h\":\"WithCancel()\",\"t\":[\"使用 WithCancel() 可以创建手动终止的 context 执行 cancel() 即可手动终止\",\"package main import ( \\\"context\\\" \\\"fmt\\\" \\\"time\\\" ) func main() { ctx, cancel := context.WithCancel(context.Background()) go func(ctx1 context.Context) { for { select { case <-ctx1.Done(): fmt.Println(\\\"canceled\\\") return default: fmt.Println(\\\"running...\\\") time.Sleep(time.Second) } } }(ctx) time.Sleep(3*time.Second) cancel() time.Sleep(5 * time.Second) } // 结果： // running... // running... // running... // canceled \"]},\"127\":{\"h\":\"基础\"},\"128\":{\"h\":\"OSI七层模型\",\"t\":[\"层级\",\"功能\",\"物理层\",\"主要实现相邻节点间比特流的透明传输，物理层定义了物理设备的标准，如网线的类型等， 网卡也会在这层工作 。\",\"数据链路层\",\"将网络层传下来的比特数据包组装成帧，并在相邻节点的链路上传送帧。数据链路层会将0、1序列划分为具有意义的数据帧传送给另一端。\",\"网络层\",\"选择合适的路由和交换结点，能让数据及时传送，此层的数据称为数据包，要关注的是IP协议。\",\"传输层\",\"向主机进程提供通用的数据传输服务。传输层需要关注的协议有TCP协议和UDP协议。\",\"会话层\",\"负责在网络中的两节点之间建立、维持和终止通信，常见的协议有 ADSP、RPC 等。\",\"表示层\",\"主要负责数据格式的转换，解决不同系统之间通信语法问题\",\"应用层\",\"为应用程序提供交互服务，目的是更方便应用从网络中接收的数据，重点关注HTTP协议\",\"osi\"]},\"129\":{\"h\":\"TCP和IP模型\",\"t\":[\"OSI七层模型\",\"TCP/IP 五层模型\",\"TCP/IP 四层模型\",\"功能\",\"TCP/IP协议族\",\"应用层\",\"应用层\",\"应用层\",\"文件传输，电子邮件，文件服务，虚拟终端等\",\"SMTP，DNS，Telnet，TFTP，HTTP，SNHP，FTP\",\"表示层\",\"应用层\",\"应用层\",\"数据格式化，代码转换，数据加密\",\"无\",\"会话层\",\"应用层\",\"应用层\",\"解除或建立与别的接点的联系\",\"无\",\"传输层\",\"传输层\",\"传输层\",\"提供端对端的接口\",\"TCP，UDP\",\"网络层\",\"网络层\",\"网络层\",\"为数据包选择路由\",\"IP，ICHP，RIP，OSPF，BCP，ICMF\",\"数据链路层\",\"数据链路层\",\"网络接口层\",\"传输有地址的顿以及错误检测功能\",\"SLIP，CSLIP，PPP，ARP，RARP，MTU\",\"物理层\",\"物理层\",\"网络接口层\",\"以二进制数据形式在物理媒介上传输数据\",\"IS02110，IEEE802，IEEE802.2\"]},\"130\":{\"h\":\"HTTP\"},\"131\":{\"h\":\"请求方法\",\"t\":[\"相关信息\",\"HTTP 1.0 支持三种请求方式：\",\"GET\",\"POST\",\"HEAD\",\"HTTP 1.1 额外支持 6 种请求方式\",\"OPTIONS\",\"PUT\",\"PATCH\",\"DELETE\",\"TRACE\",\"CONNECT\",\"方法\",\"描述\",\"GET\",\"请求一个指定资源，用于获取数据\",\"HEAD\",\"和 GET 类似，但是只返回响应头，不返回响应体\",\"POST\",\"用于提交信息到目标地址，用于数据提交和文件上传\",\"PUT\",\"提交更新的信息，用于替换原数据\",\"DELETE\",\"删除指定的资源\",\"CONNECT\",\"与服务器建立隧道\",\"OPTIONS\",\"返回特定服务器地址所支持的 HTTP 请求方法, 也可用于测试服务器支持的功能\",\"TRACE\",\"回显服务器收到的请求，主要用于测试或诊断\",\"PATCH\",\"和 PUT 相似，主要用于部分更新\"]},\"132\":{\"h\":\"HTTP 状态码\",\"t\":[\"数字\",\"含义\",\"1XX\",\"指示信息，表示请求以接收，继续处理\",\"2XX\",\"成功，表示请求已经被成功接收、理解、接受\",\"3XX\",\"状态码表示客户端请求的资源发送了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是重定向\",\"4XX\",\"状态码表示客户端发送的报文有误，服务器无法处理，也就是错误码的含义。\",\"5XX\",\"状态码表示客户端请求报文正确，但是服务器处理时内部发生了错误，属于服务器端的错误码\",\"常见状态码\",\"HTTP 状态码\",\"名称\",\"描述\",\"100\",\"Continue\",\"继续 表示客户端可以继续提交请求\",\"101\",\"Switching Protocols\",\"切换协议 切换传输协议，只能从低版本切换到高版本，如 HTTP1.0 切换为 HTTP1.1\",\"200\",\"OK\",\"请求成功 表示服务器成功返回了数据\",\"201\",\"Created\",\"已创建 表示服务器成功接收到请求并创建了对应的资源\",\"202\",\"Accepted\",\"已接受 表示服务器已经接受了请求，请求将会被处理\",\"203\",\"Non-Authoritative Information\",\"非授权信息 表示请求成功,但返回的meta信息不在原始的服务器，而是一个副本\",\"204\",\"No Content\",\"无内容 表示服务器成功处理请求\",\"205\",\"Reset Content\",\"重置内容 服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域\",\"206\",\"Partial Content\",\"部分内容服务器成功处理了部分GET请求\",\"300\",\"Multiple Choices\",\"多种选择请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择\",\"301\",\"Moved Permanently\",\"永久移动请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替\",\"302\",\"Found\",\"临时移动与301类似。但资源只是临时被移动。客户端应继续使用原有URI\",\"303\",\"See Other\",\"查看其它地址与301类似。使用GET和POST请求查看\",\"304\",\"Not Modified\",\"未修改 所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源\",\"305\",\"Use Proxy\",\"使用代理 所请求的资源必须通过代理访问\",\"307\",\"Temporary Redirect\",\"临时重定向与302类似。使用GET请求重定向\",\"400\",\"Bad Request\",\"错误请求表示客户端请求的报文有错误\",\"401\",\"Unauthorized\",\"未授权缺失或错误的认证，这个状态代码必须和WWW-Authenticate报头域一起使用\",\"403\",\"Forbidden\",\"禁止访问表示服务器禁止访问资源,并不是客户端的请求出错\",\"404\",\"Not Found\",\"未找到表示请求的资源在服务器上不存在或未找到，所以无法提供给客户端\",\"501\",\"Not Implemented\",\"功能未实现表示客户端请求的功能还不支持\",\"502\",\"Bad Gateway\",\"网关错误通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误\",\"503\",\"Service Unavailable\",\"服务器不可用表示服务器当前很忙，暂时无法响应服务器\",\"504\",\"Gateway Timeout\",\"网关超时网关超时，由作为代理或网关的服务器使用，表示不能及时地从远程服务器获得应答\"]},\"133\":{\"h\":\"HTTPS vs HTTP\",\"t\":[\"特性\",\"HTTP\",\"HTTPS\",\"定义\",\"HTTP 是超文本传输协议，用于从万维网服务器传输超文本到本地浏览器的传送协议。\",\"HTTPS 是带有安全性的 HTTP，通过 SSL/TLS 提供加密处理、数据完整性校验及身份认证。\",\"端口\",\"默认的 HTTP 端口是 80。\",\"默认的 HTTPS 端口是 443。\",\"安全性\",\"HTTP 本身不是安全的，因为数据在传输过程中没有加密，可能会被第三方获取。\",\"HTTPS 是安全的，因为数据在传输过程中会被加密，防止被第三方获取。\",\"速度\",\"HTTP 相对较快，因为没有加密和解密的过程。\",\"HTTPS 相对较慢，因为数据在传输过程中需要进行加密和解密。\"]},\"134\":{\"h\":\"工作原理\",\"t\":[\"HTTPS 协议会对传输的数据进行加密，而加密过程是使用了非对称加密实现\",\"Client发起一个HTTPS的请求\",\"Server把事先配置好的公钥证书返回给客户端。\",\"Client验证公钥证书：比如是否在有效期内，证书的用途是不是匹配Client请求的站点，是不是在CRL吊销列表里面，它的上一级证书是否有效，这是一个递归的过程，直到验证到根证书（操作系统内置的Root证书或者Client内置的Root证书），如果验证通过则继续，不通过则显示警告信息。\",\"Client使用伪随机数生成器生成加密所使用的对称密钥，然后用证书的公钥加密这个对称密钥，发给Server。\",\"Server使用自己的私钥解密这个消息，得到对称密钥。至此，Client和Server双方都持有了相同的对称密钥。\",\"Server使用对称密钥加密明文内容A，发送给Client。\",\"Client使用对称密钥解密响应的密文，得到明文内容A。\",\"Client再次发起HTTPS的请求，使用对称密钥加密请求的明文内容B，然后Server使用对称密钥解密密文，得到明文内容B。\",\"https\"]},\"135\":{\"h\":\"HTTP 1.0 vs 1.1 vs 2.0\",\"t\":[\"区别\",\"特性\",\"HTTP 1.0\",\"HTTP 1.1\",\"HTTP 2.0\",\"连接方式\",\"无连接，每次请求都要建立连接\",\"长连接，减少了 TCP 连接的重复建立和断开所造成的额外开销\",\"多路复用，一个 TCP 连接上可以并发多个 HTTP 请求\",\"队头阻塞\",\"存在，下一个请求必须在前一个请求响应到达之前才能发送\",\"存在，虽然可以发起多个请求，但服务器必须按照接收请求的顺序发送响应\",\"解决，可以在一个连接中并发多个请求或回应，而不用按照顺序一一对应\",\"头部压缩\",\"不支持\",\"不支持\",\"支持，使用 HPACK 算法对 header 进行压缩\",\"服务器推送\",\"不支持\",\"不支持\",\"支持\"]},\"136\":{\"h\":\"数字证书\",\"t\":[\"数字证书是一种权威性的电子文档，它提供了一种在互联网上验证身份的方式。数字证书对个人或组织的线上凭据与身份进行验证，并能让网络用户和接收者知道其所输入的数据将前往受信任的来源。它们类似于网站和用户的安全徽章，并有助于确保互联网的安全性。\",\"数字证书由证书颁发机构（CA）所颁发，用于对线上数据进行加密。数字证书也称为公钥证书或身份证书。例如，TLS/SSL证书有两种用途：对网站、浏览器和Web服务器之间传输的数据进行加密和保护，以及有助于识别并验证网站所有者。\",\"数字证书的基本架构是公开密钥PKI，即利用一对密钥实施加密和解密。其中密钥包括私钥和公钥，私钥主要用于签名和解密，由用户自定义，只有用户自己知道；公钥用于签名验证和加密，可被多个用户共享。\",\"数字证书的应用非常广泛，例如在安全电子邮件中使用数字证书可以建构安全电子邮件证书，主要用户加密电子邮件的传输，保护电子邮件在传输和接收过程中的安全²。另外，数字证书也可以用于终端的保护，例如在电子商务的活动过程中安装了数字证书，那么即使其账户或者密码等个人信息被盗取，其账户中的信息与资金安全仍然能得到有效的保障。\"]},\"137\":{\"h\":\"数字签名工作原理\",\"t\":[\"signature\",\"签名过程\",\"利用签名哈希算法（例如 sha256md5）计算包括证书颁发者信息、证书持有者信息、证书有效期、证书持有者公钥等在内的信息（如 x.509 的例子），生成证书摘要 α 。\",\"颁发者生成一对私钥和公钥，然后使用私钥对指纹进行加密，得到的加密数据即为颁发者的数字签名γ。\",\"将数字签名γ附加到数字证书上，形成一个签名过的数字证书。\",\"颁发者将签名过的数字证书和公钥一起交给证书持有者。\",\"验签过程\",\"使用者通过某种方式（例如，浏览器访问）获取签名过的数字证书，解析后可以得到数字签名γ和数字证书。\",\"使用者使用数字证书中的指纹算法重新计算数字证书相关内容，生成一个新的指纹β。\",\"同时，使用者使用获取到的颁发者的公钥解密数字签名，得到解密后的指纹α。\",\"对比两个指纹α和β，如果相同，则证明证书是合法的，使用者可以信任并使用该证书中的信息（例如，持有者的公钥）。\",\"例子：X.509 证书包含的信息\",\"证书的版本信息\",\"证书的序列号\",\"证书所使用的签名算法\",\"证书的发行机构名称\",\"证书的有效期，现在通用的证书一般采用UTC时间格式，它的计时范围为1950-2049\",\"证书所有人的名称\",\"证书所有人的公开密钥\",\"证书发行者对证书的签名\",\"作用\",\"数据加密：加密数据确保数据安全\",\"身份确定：确保双方身份正确\",\"不可篡改：无法修改已签名的文件\",\"不可否认：CA 的监督下确保交易达成后不能否认未进行交易\"]},\"138\":{\"h\":\"IP\"},\"139\":{\"h\":\"IP\",\"t\":[\"IP (Internet Protocol) 协议和 TCP 组成的 TCP/IP 协议栈是互联网的核心协议之一。\",\"IP 协议有以下特点：\",\"无状态： 不储存状态信息，意味着 IP 协议传递的数据包可能是无序的、重复的。\",\"无连接： 不需要建立连接，发送方和接收方都不需要存储对方的信息，每次发送都需要指定目标的 IP 地址。\",\"不可靠： IP 协议不能保证数据包一定能送达，可能会丢包，或者因超时而被丢弃。\"]},\"140\":{\"h\":\"结构\",\"t\":[\"ipv4 header\",\"字段介绍\",\"字段\",\"描述\",\"版本\",\"占用 4 bit，用来标识 IP 首部的版本号。IPv4 版本号是 4\",\"首部长度\",\"表示 IP 首部的大小，最小值为5 (54 = 20 byte)，最大值为 15 (154 = 60byte)\",\"区分服务(DS)\",\"用来表示服务的类型。可划分为 DSCP 和 ECN (显式拥塞通告)\",\"总长度\",\"表示的是 IP 首部与数据部分合起来的总字节数\",\"标识\",\"用于分片重组，分片时每产生一个数报文该字段就加1\",\"标志\",\"表示包被分片的相关信息\",\"片偏移\",\"用来标识被分片的每一个分段相对于原始数据的位置，单位为 8 字节\",\"生存时间(TTL)\",\"每经过一个路由器该字段就会减一，当为零的时候会被丢弃\",\"协议\",\"该报文数据区使用的协议\",\"首部校验和\",\"用于检测报文是否损坏\",\"源地址\",\"表示发送端的 IP 地址\",\"目标地址\",\"表示接收端的 IP 地址\",\"选项\",\"附加的信息\",\"数据\",\"传输的数据内容\",\"版本对应数字列表\",\"版本\",\"描述\",\"状态\",\"0\",\"互联网协议，v4 之前\",\"保留\",\"1–3\",\"未分配\",\"4\",\"互联网协议版本 4 (IPv4)\",\"活跃\",\"5\",\"互联网流协议或 ST\",\"废弃\",\"5\",\"互联网流协议或 ST-II\",\"废弃\",\"6\",\"简单互联网协议 (SIP)\",\"废弃\",\"6\",\"互联网协议版本 6 (IPv6)\",\"活跃\",\"7\",\"TP/IX 下一代互联网 (IPv7)\",\"废弃\",\"8\",\"P 互联网协议 (PIP)\",\"废弃\",\"9\",\"TCP 和 UDP 大地址 (TUBA)\",\"废弃\",\"10–14\",\"未分配\",\"15\",\"版本字段标记值\",\"保留\",\"标志 (Flags) 介绍\",\"这个3位字段用于控制和识别分片，它们是：\",\"位\",\"描述\",\"0\",\"保留，必须为0\",\"1\",\"禁止分片（Don’t Fragment，DF）\",\"2\",\"更多分片（More Fragment，MF）\",\"注意\",\"如果DF标志位被设置为1，但路由要求必须分片报文，则此报文会被丢弃。\",\"被分片的报文除了最后一个分片以外其他分片的 MF 标志位都为 1，且最后一个分片的分片偏移字段不为 0\",\"常见的 IP 选项有哪些？\",\"安全性选项（Security Options）：用于提供网络安全功能，例如数据加密、身份验证和访问控制。\",\"记录路由选项（Record Route Option）：启用IP数据报在传输路径上记录途经的路由器的IP地址，以便诊断网络问题或跟踪数据包的路径。\",\"宽松源站选路（Loose Source Routing）：指定数据包的传输路径，要求数据包经过指定的中间节点，但允许在路径上的其他节点进行一定的选择。\",\"严格源站选路（Strict Source Routing）：指定数据包的传输路径，要求数据包必须按照指定的节点顺序传递，其他节点不能参与。\",\"时间戳选项（Timestamp Option）：在数据包中插入时间戳信息，用于测量数据包从源到目的地传输所需的时间。\"]},\"141\":{\"h\":\"分片\",\"t\":[\"MTU\",\"最大传输单元 (MTU, Maximum Transmission Unit) 指的是在数据链路层能通过的最大数据包大小（单位： 字节）。\",\"当 IP 数据包在链路层传输的时候，若数据包大于链路层的 MTU， 则需要对数据包进行分片。分片的长度需小于等于 MTU 减去 IP 首部长度。\",\"分片过程\",\"分片后的每一个数据分片都会放到独立的 IP 报文中，报文中的对应字段需要进行修改：\",\"修改总长字段为此时分片的长度\",\"除了最后一片分片外，其他分片的更多分片（MF）标志位被设置为 1\",\"调整分片偏移量\",\"重新计算校验和\",\"例子\",\"一个IP报文首部长度 20 字节且有 4000 字节的数据载荷（总长：4020 字节），在 MTU 为 2500 字节的链路上传输，他将被分割成两个分片：\",\"总长\",\"首部\",\"数据\",\"更多分片（MF）？\",\"DF\",\"分片偏移量\",\"2500\",\"20\",\"2480\",\"是\",\"0\",\"0\",\"1540\",\"20\",\"1520\",\"否\",\"0\",\"310 （2480/8）\",\"同理，切割后的分片在 MTU 变小时会被再次切割。\"]},\"142\":{\"h\":\"重组\",\"t\":[\"如何判断数据已被分片?\",\"DF 标志位为 0\",\"分片偏移字段不为 0\",\"接收者会将分片收集起来，并通过偏移量进行排序，一旦收集齐就会组装起来提交给上传协议栈。\"]},\"143\":{\"h\":\"IPV6\",\"t\":[\"IPV6\",\"IPV4 和 IPV6 区别\",\"特性\",\"IPv4\",\"IPv6\",\"地址长度\",\"32位，提供约43亿个地址\",\"128位，提供极大数量的地址\",\"地址表示\",\"点分十进制表示法，例如：192.168.0.1\",\"冒号十六进制表示法，例如：2001:0db8:85a3:0000:0000:8a2e:0370:7334\",\"头部长度\",\"固定，20字节\",\"固定，40字节\",\"服务质量（QoS）\",\"原生支持有限\",\"原生支持，包括流标签和流优先级\",\"安全性\",\"需要使用 IPSec\",\"原生支持 IPSec\",\"配置\",\"手动或 DHCP\",\"手动，自动（基于链接的本地地址和路由公告）或 DHCPv6\"]},\"144\":{\"h\":\"什么是 IP 欺骗？\",\"t\":[\"IP 欺骗技术指的是伪造某台主机的 IP 地址，攻击者可以向服务器发送大量 RST 标志位的不同IP 的数据段，使得服务器和主机的连接断开，若其他主机需要访问服务器，则需要重新建立连接。或者伪装成其他主机和服务器建立连接，窃取数据。\"]},\"145\":{\"h\":\"TCP/UDP\"},\"146\":{\"h\":\"TCP\",\"t\":[\"传输控制协议（TCP，Transmission Control Protocol）是一种面向连接的、可靠的、基于字节流的传输层通信协议。\"]},\"147\":{\"h\":\"TCP 头部结构\",\"t\":[\"tcp 头部\",\"TCP头部字段\",\"描述\",\"源端口\",\"发送方的端口号，范围(0~65535)\",\"目标端口\",\"接收方的端口号，范围(0~65535)\",\"序列号\",\"如果TCP数据过大（大于IP数据包的允许程度），则需要进行分段。这个序列号记录每个数据包的序列号，使接收端可以重新组合TCP数据。序列号字段的值是本报文段发送的数据的第一个字节的序列号。简称为seq\",\"确认号\",\"为了确认接收端确实收到了发送端发送的数据包数据，当发送端收到这个确认码时，就可以确定之前传递的数据包已经被正确接收。这个确认号是期望收到对方下一个报文段的数据的第一个字节的序列号。简称ack\",\"头部长度\",\"表示TCP头部的长度，范围(0~15)，单位32位，例如值为5时，表示头部长度是20字节（160位），如果选项字段为空，则TCP头部长度为20字节，即值为5\",\"URG\",\"URG=1表示存在紧急数据，紧急数据的最后一个字节由紧急数据指针指出，一般使用较少\",\"ACK\",\"ACK=1表示确认号字段中的值是有效的，为0表示无效\",\"PSH\",\"URG=1表示紧急指针字段有效，代表该数据包为紧急数据包。它告诉系统此报文段中有紧急数据，应尽快传送（相当于高优先级的数据）\",\"RST\",\"RSP=1表示重建连接，如果接收到RST位时，通常发生了某些错误\",\"SYN\",\"SYN=1表示这是一个连接请求或连接接受报文，一般用于握手阶段\",\"FIN\",\"FIN=1表示此报文段的发送端的数据已发送完毕，并要求释放运输连接\",\"接收窗口\",\"用于流量控制，指示接收方愿意接收的字节数量，范围0~65535字节\",\"校验和\",\"校验和覆盖了整个TCP报文段，即TCP头部和TCP数据，这是一个强制性的字段，一定是由发送端计算和存储，并由接收端进行验证\",\"紧急数据指针\",\"当URG=1时有效，是一个正的偏移量，和序列号中的值相加表示紧急数据最后一个字节的序列号\",\"选项\",\"用于发送方和接收方协商最大报文长度（MSS）时（只存在于SYN报文）或在高速网络环境下用作窗口调节因子时使用，还可以存放时间戳数据\"]},\"148\":{\"h\":\"TCP 状态机\",\"t\":[\"TCP Stateful\"]},\"149\":{\"h\":\"TCP 三次握手/四次挥手\",\"t\":[\"TCP Connection\",\"三次握手过程\",\"客户端发送SYN=1，并指明客户端的初始序列号ISN，即x.\",\"服务端发送自己的SYN段作为应答，同样指明自己的ISN 即 y。为了确认客户端的SYN，将x+1作为ACK数值。这样，每发送一个SYN，序列号就会加1. 如果有丢失的情况，则会重传。\",\"为了确认服务器端的SYN，客户端将y+1作为返回的ACK数值。\",\"TCP 四次挥手\",\"客户端发送FIN=1，并包含一个自己当前的序列号x+2。 同时还包含一个ACK=y+1表示确认对方最近一次发过来的数据。\",\"服务端将x+2值加1作为ACK序号值，表明收到了上一个包。这时上层的应用程序会被告知另一端发起了关闭操作，通常这将引起应用程序发起自己的关闭操作。\",\"服务端发起自己的FIN=1，seq=y+1 。\",\"客户端确认, 向服务器发送 ACK=y+2 。\",\"为什么要三次握手？作用是什么？\",\"详情\",\"TCP 建立连接的过程就是同步序列号的过程，SYN (Synchronize Sequence Numbers)就是同步序列号。因此，三次握手的目的就是使客户端(Client)和服务端(Service)获取到对方的序列号。\",\"为什么要四次挥手？作用是什么？\",\"详情\",\"之所以需要四次挥手，是因为 tcp 是全双工协议，即客户端和服务端都可以主动发送消息，因此需要两端分别在传输完成后发送断开连接的指令，需要分别发送 FIN=1 指令断开，通过 ACK 判断是否发送成功。\",\"如果连接时 SYN 超时会发生什么？\",\"详情\",\"假如客户端发送 SYN 指令，在服务器返回 SYN 指令之前掉线了，服务器会尝试重发 SYN-ACK 指令，linux 下默认重试 5 次，间隔时间从 1s 开始翻倍增长，即 1s, 2s, 4s, 8s, 16s, 因此超时时间为 1s + 2s + 4s+ 8s+ 16s + 32s = 63s。在超时之后 TCP 才会断开连接。\"]},\"150\":{\"h\":\"TCP 如何保证传输的可靠性？\",\"t\":[\"TCP 通过以下几个特性保证数据传输的可靠性\",\"序列号和确认应答\",\"超时重传\",\"流量控制\",\"拥塞控制\",\"校验和\"]},\"151\":{\"h\":\"\",\"t\":[\"TCP 通过序列号可以对数据包进行排序和去重，同时通过 ACK 应答机制确保数据包成功送达，保证了数据的完整性。\"]},\"152\":{\"h\":\"\",\"t\":[\"TCP 通过超时重传机制可以在数据包丢失或者延迟时，重新发送数据包直到收到 ACK 应答。\",\"什么是RTT？什么是RTO？\",\"详情\",\"RTT代表往返时间（Round Trip Time），是指数据从发送方传输到接收方并返回所需的时间。RTT用于衡量网络延迟，即数据在传输过程中经过的总时间。\",\"RTO代表重传超时时间（Retransmission Timeout），是指在网络通信中，发送方发送数据后等待确认（ACK）的时间。如果发送方在RTO时间内未收到确认，它会假设数据丢失，并重新发送该数据。\",\"RTO的计算通常基于RTT的测量。发送方根据前一次的RTT来估计下一次发送数据的RTO。一般情况下，RTO的值会比RTT大一些，以确保在网络延迟较高或不稳定的情况下也能够成功重传数据。\",\"RTO的计算方法可以根据具体的网络协议或实现而有所不同，但其目的是为了确保数据的可靠传输，以应对网络中的丢包、延迟和拥塞等问题。\",\"RTO 长短对重传有什么影响？\",\"详情\",\"若 RTO 过长则重传时间会大大延长，降低传输效率。若 RTO 过短则可能会导致频繁重传，加剧网络的拥堵，进一步触发更多的重传。\",\"常见的重传机制\",\"详情\",\"超时重传\",\"timeout retransmission\",\"超时重传有两种情况，发送的数据包丢失导致的超时，和返回的 ACK 数据包丢失导致的超时。超时重传机制下，在每次发送数据包的时候都会启动一个定时器，如果定时器到期则会触发重传。若重传失败，则下一次超时时间为当前值的两倍。超时重传的缺点是周期较长，可能会降低效率。\",\"快速重传\",\"tcp\",\"在快速重传机制下，在数据包丢失后，接收端每接收一个失序的数据包就立即返回重复的确认报文段，告知发送端缺少的报文段。当发送方收到三个重复的确认报文段后，会立即重传缺失的报文段。\",\"在快速重传的机制下，我们可以看到 3,4,5 的报文段返回的都是 ACK=2, 因此还需要重传 3,4,5 报文段。有没有方法可以不需要重传 3,4,5 报文段？\",\"SACK (Selective Acknowledgment, 选择性确认)\",\"SACK\",\"SACK 方法 (RFC 2018) 在 tcp 的 option 字段添加了缓冲区，用于记录已传输的数据包，这样发送方可以看到未成功传输的数据包，使得发送方可以仅传输缺失的数据包而不需要额外重传其他数据包。\",\"D-SACK (Duplicate SACK, 重复选择性确认)\",\"D-SACK (RFC 2883) 主要解决了 ACK 丢失的问题， D-SACK 使用 SACK 第一个段作为标志位，用于标记已经 ACK 的数据包。 当接收端接收到重复的报文段时会将该报文段写入 D-SACK 的标志位，告诉发送方已接收到报文段， ACK 可能已丢失。\"]},\"153\":{\"h\":\"\",\"t\":[\"TCP 使用滑动窗口来控制流量，使得发送端可以根据接收端的接收能力控制发送数据的速度。\",\"注意\",\"接收端在应答 ACK 的时候会将当前可用的窗口大小写入 tcp 头部，发送端根据窗口大小调整发送速率。\"]},\"154\":{\"h\":\"\",\"t\":[\"算法\",\"慢开始\",\"拥塞避免\",\"快重传\",\"快恢复\",\"拥塞控制\",\"相关名词\",\"cwnd - 拥塞窗口\",\"ssthresh - 慢开始门限\",\"重要\",\"cwnd < ssthresh，使用慢开始算法。\",\"cwnd > ssthresh，使用拥塞避免算法。\",\"cwnd = ssthresh，使用慢开始与拥塞避免算法任意一个。\"]},\"155\":{\"h\":\"\",\"t\":[\"在慢开始阶段， cwnd 初始值为 1, 每经过一个传播轮次，cwnd 都会翻倍，直到达到 ssthresh 。\"]},\"156\":{\"h\":\"\",\"t\":[\"当 cwnd 达到 ssthresh ，则会执行拥塞避免算法，此时 cwnd 的增长从翻倍增长变为每经过一个传播轮次就加 1 。若发送方检测到网络拥塞（即发送的消息没得到及时的回应），就会将 ssthresh 设置为发生网络拥塞时的 cwnd 值的一半，同时 cwnd 的值将会重置为 1 ，重新执行慢开始。\"]},\"157\":{\"h\":\"\",\"t\":[\"快重传在前面已介绍过，即如果连续收到三个重复的确认就会立即发送尚未接收到的报文段。快恢复算法需要配合快重传算法使用。图中的 5 号为快恢复阶段。\",\"快恢复算法\",\"当发送端连续收到三个重复的确认时，将 ssthresh 减半。\",\"将 cwnd 设置为 ssthresh 的大小\"]},\"158\":{\"h\":\"\",\"t\":[\"TCP 还会对数据计算校验和，确保数据在传输过程中未丢失或出现错误。\"]},\"159\":{\"h\":\"UDP\",\"t\":[\"UDP，全称用户数据报协议（User Datagram Protocol），是OSI（开放系统互联）参考模型中的一种无连接的传输层协议。它提供面向事务的简单不可靠信息传送服务，其正式规范是 IETF RFC 768。\"]},\"160\":{\"h\":\"特点\",\"t\":[\"无连接：UDP在传输数据前不需要在客户和服务器之间建立一个连接。\",\"速度快：由于UDP不需要进行握手或检查数据是否正确到达，所以它能够比TCP更快地传输数据。\",\"不可靠性：当报文发送之后，是无法得知其是否安全完整到达的。如果UDP数据报在传输过程中丢失，它不会重新发送。\",\"应用广泛：UDP用来支持那些需要在计算机之间传输数据的网络应用。包括网络视频会议系统在内的众多的客户/服务器模式的网络应用都需要使用UDP协议。例如，许多互联网电话服务使用的IP语音 (VoIP) 通常是使用UDP发送的。\"]},\"161\":{\"h\":\"结构\",\"t\":[\"udp\",\"字段\",\"大小\",\"描述\",\"源端口\",\"16位\",\"源端口号。若全为 0 则意味着不允许回信\",\"目的端口\",\"16位\",\"目标端口号\",\"长度\",\"16位\",\"UDP用户数据报的长度,其最小值是8(仅有首部)\",\"检验和\",\"16位\",\"检测数据在传输过程中是否丢失或修改\"]},\"162\":{\"h\":\"广播类型\",\"t\":[\"类型\",\"描述\",\"单播\",\"用于两个主机之间端对端的通信。即一对一（客户端与服务器端点到点连接）\",\"广播\",\"用于一个主机对整个局域网上所有主机通信。即一对所有。广播禁止在Internet宽带网上传输（广播风暴）\",\"组播（多播）\",\"对一组特定的主机进行通信，而不是整个局域网上的所有主机。即一对一组\",\"注意\",\"TCP 只支持一对一\",\"UDP 多播较为常用，广播仅用于局域网\",\"TCP 和 UDP 区别\",\"特性\",\"TCP\",\"UDP\",\"可靠传输\",\"是\",\"否\",\"连接\",\"面向连接\",\"无连接\",\"数据有序性\",\"有\",\"不保证\",\"数据边界\",\"不保存\",\"保留\",\"传输速度\",\"相对慢\",\"快\",\"流量控制和拥塞控制\",\"有\",\"没有\",\"协议类型\",\"重量级\",\"轻量级\",\"首部长度\",\"20字节\",\"8字节\"]},\"163\":{\"h\":\"常见的 TCP/UDP 攻击\",\"t\":[\"SYN Flood 攻击\",\"SYN Flood 攻击的原理非常简单，实际上是利用了服务器的超时机制。我们知道接收方在收到 SYN 请求的时候会返回 SYN + ACK 响应，若接收方的响应没得到回复，会进行重试 (如果连接时 SYN 超时会发生什么？) , 维护一个半连接状态。攻击者只需要使用多个主机向服务器发送大量半连接请求，服务器最终会导致资源耗尽，无法提供服务。\",\"提示\",\"如何检测 SYN Flood 攻击？\",\"入站网络流量增加： SYN Flood 会导致服务器的入站网络突然增加\",\"网络性能下降： SYN Flood 会导致网络性能下降\",\"大量 SYN 半连接： SYN Flood 会产生大量半连接\",\"服务器无响应： SYN Flood 会导致服务器无法响应请求\",\"如何缓解？\",\"防御措施\",\"描述\",\"增加最大半连接数\",\"增加最大半连接数允许服务器处理大量传入的 SYN 请求，从而提供针对泛洪尝试的缓冲区。\",\"过滤\",\"在网络设备中设置规则，根据特定模式或已知的恶意 IP 地址识别和阻止恶意 SYN 请求。\",\"减少SYN-RECEIVED定时器时间\",\"通过减少服务器在发送 SYN-ACK 后等待 ACK 响应的时间，可以更快地释放分配给半开连接的资源。\",\"SYN缓存\",\"服务器使用缓存来存储有关每个请求的较少信息，最大限度地减少资源消耗。\",\"SYN Cookies\",\"服务器发回 SYN-ACK 响应，而不立即为连接分配资源，仅当收到合法的 ACK 响应时才分配资源。\",\"负载均衡器\",\"将传入的网络流量分布到多个服务器上，确保没有任何一台服务器会首当其冲地受到攻击。\",\"防火墙和代理\",\"部署防火墙和代理可以在恶意流量到达目标服务器之前过滤掉恶意流量，提供额外的防御层。\",\"蜜罐和蜜网\",\"蜜罐吸收和转移攻击，为攻击者提供有价值的干扰，并保护关键基础设施。蜜网通过收集攻击者策略的数据来提供威胁情报。\",\"速率限制\",\"限制传入连接请求的速率是防止 SYN 洪水攻击的重要策略。\",\"混合方法\",\"结合多种技术可以创建针对 TCP SYN Flood 攻击的分层防御，确保在一种方法失败时其他人仍然可以提供保护。\",\"基于云的DDoS防护解决方案\",\"利用基于云的 DDoS 防护解决方案可以将流量卸载并过滤到能够处理大规模攻击的专用平台。\",\"什么是 UDP Flood 攻击？\",\"重要\",\"服务器在接收到 UDP 包时会发生以下操作:\",\"检查对应端口是否有程序正在监听\",\"若没有程序，则服务器使用 ICMP 包响应不可达的信息\",\"因此攻击者通过频繁向服务器的多个端口发送大量 UDP 请求使得服务器在处理大量回应时资源耗尽而达到目的。\",\"如何缓解？\",\"可以通过限制 ICMP 响应时间来缓解，但是这也导致正常的 PING 请求受到影响。\"]},\"164\":{\"h\":\"DNS\"},\"165\":{\"h\":\"介绍\",\"t\":[\"DNS（Domain Name System，域名系统），是一个分布式数据库，用于存储域名和IP地址相互映射的关系，使用户能够通过域名访问目标地址而不需要记住IP地址。通过域名获取 IP 地址的过程称为域名解析。\",\"浏览器访问网站步骤\",\"发送域名请求到 DNS 服务器\",\"获取域名对应 IP 地址\",\"根据 IP 地址发送请求到目标网站\",\"dns\"]},\"166\":{\"h\":\"DNS 解析过程\",\"t\":[\"查看本地 DNS 缓存：首先查看浏览器缓存，若浏览器中未缓存有该域名的 DNS 信息，则会到系统缓存中查询，计算机会检查 Hosts 文件中是否有配置以及系统中是否有该域名的缓存信息，若还是不存在则会在路由器中查询缓存。\",\"ISP 缓存：若本地 DNS 中不存在缓存，则会进入 ISP 的 DNS 缓存中查询，运营商通常会缓存一部分 DNS 信息。\",\"根域名服务器查询： 若在上述两种缓存中都没有查询到对应的数据，则需要向根服务器发送查询请求，若域名属于其他顶级域名服务器，则根服务器会将顶级服务器的 IP 发送给客户端，否则直接返回对应的 IP 信息。\",\"顶级域名服务器查询： 若顶级域名服务器若查询不到记录，将会返回管辖范围内的权威域名服务器的 IP 地址。\",\"权威域名（主域名）服务器查询： 若权威域名服务器还是没查询到信息，将会递归查询下一级服务器，直到查询到结果。\",\"保存结果： 当域名服务器查询到 IP 地址信息后会将数据返回给客户端，客户端会缓存 IP 地址信息，然后向 IP 地址发送请求。\"]},\"167\":{\"h\":\"DNS 记录类型\",\"t\":[\"记录类型\",\"描述\",\"A\",\"主机 IP 地址\",\"AAAA\",\"主机 IPv6 地址\",\"ALIAS\",\"自动解析的别名（Alias）\",\"CNAME\",\"别名的权威名称（Canonical name）\",\"MX\",\"邮件交换服务器（Mail eXchange）\",\"NS\",\"域名服务器（Name server）\",\"TXT\",\"描述文本\"]},\"168\":{\"h\":\"常见的 DNS 攻击\",\"t\":[\"攻击类型\",\"描述\",\"DNS 欺骗/缓存中毒\",\"将伪造的 DNS 数据引入 DNS 解析器缓存中的攻击，导致解析器返回错误 IP 地址。\",\"DNS 隧道\",\"使用其他协议通过 DNS 查询和响应建立隧道的攻击。\",\"DNS 劫持\",\"将查询重定向到其他域名服务器的攻击。\",\"NXDOMAIN 攻击\",\"利用请求淹没 DNS 服务器，试图导致合法流量的拒绝服务的攻击。\",\"幻域攻击\",\"设置响应慢或不响应的“幻影”域服务器，导致性能降低和拒绝服务的攻击。\",\"随机子域攻击\",\"向合法站点的不存在的子域发送 DNS 查询，导致拒绝服务的攻击。\",\"域锁定攻击\",\"通过与其他合法解析器建立 TCP 连接，并发送缓慢的随机数据包流，占用解析器资源的攻击。\",\"基于僵尸网络的 CPE 攻击\",\"使用受损的 CPE 设备进行的攻击，用于对一个站点或域进行随机子域攻击。\"]},\"169\":{\"h\":\"ARP\"},\"170\":{\"h\":\"介绍\",\"t\":[\"地址解析协议(Address Resolution Protocol, ARP) 是 IPV4 中重要的协议，主要用于通过 IP 地址确定目标设备的 MAC 地址，以保证数据的正确送达。\",\"MAC 地址\",\"媒体访问控制地址 (Media Access Control Address, MAC) 又称为硬件地址，用来唯一标识网络设备，如网卡、路由器等。MAC 地址长度为 48 位，3 - 24 位由 IEEE 管理，后 24 位由硬件厂商管理。和 IP 的动态分配不同， MAC 地址一般会写入固件或硬件中，是不可修改的。\",\"MAC: FF-FF-FF-FF-FF-FF 是预留的广播地址\",\"MAC 地址的构成\",\"位数\",\"含义\",\"第1位\",\"单播地址(0)/多播地址(1)\",\"第2位\",\"全局地址(0)/本地地址(1)\",\"第3-24位\",\"由 IEEE 管理并保证不重复\",\"第25-48位\",\"由厂商管理并保证不重复\"]},\"171\":{\"h\":\"ARP 报文\",\"t\":[\"长度(位)\",\"48\",\"48\",\"16\",\"16\",\"16\",\"8\",\"8\",\"16\",\"48\",\"32\",\"48\",\"32\",\"数据类型\",\"目标以太网地址\",\"源以太网地址\",\"帧类型\",\"硬件类型\",\"协议类型\",\"硬件地址长度\",\"协议地址长度\",\"操作码\",\"源硬件地址\",\"源协议地址\",\"目标硬件地址\",\"目标协议地址\",\"组成\",\"14字节 以太网首部\",\"28字节 ARP请求/应答\",\"提示\",\"字段\",\"长度\",\"描述\",\"以太网目标 MAC 地址\",\"48 位\",\"以太网目标 MAC 地址。在 ARP 请求报文中，该字段为广播地址 0xffff-ffff-ffff\",\"以太网源 MAC 地址\",\"48 位\",\"以太网源 MAC 地址\",\"帧类型\",\"16 位\",\"数据类型。该字段的值在 ARP 请求或应答报文中为 0x0806\",\"硬件类型\",\"16 位\",\"硬件地址类型。该字段的值在以太网中为 1\",\"协议类型\",\"16 位\",\"要映射到发送方的协议地址类型。该字段的值为 IP 地址时为 0x0800\",\"硬件地址长度\",\"8 位\",\"硬件地址长度。该字段的值在 ARP 请求或应答报文中为 6\",\"协议地址长度\",\"8 位\",\"协议地址长度。该字段的值在 ARP 请求或应答报文中为 4\",\"操作码\",\"16 位\",\"操作类型。值如下：1: ARP 请求报文 2: ARP 应答报文\",\"源 MAC 地址\",\"48 位\",\"源 MAC 地址。该字段的值与以太网帧头中的以太网源 MAC 地址相同\",\"源 IP 地址\",\"32 位\",\"源 IP 地址\",\"目标 MAC 地址\",\"48 位\",\"目标 MAC 地址。在 ARP 请求报文中，该字段为 0x0000-0000-0000\",\"目标 IP 地址\",\"32 位\",\"目标 IP 地址\"]},\"172\":{\"h\":\"工作原理\",\"t\":[\"在支持 TCP/IP 协议的网络设备中会各自维护一张 ARP 缓存表，缓存表中存储了 IP 地址的映射关系，格式为 IP -MAC地址-存活时间（TTL）, TTL 默认值为 20 分钟。\",\"例子\",\"假设局域网中存在以下设备：\",\"主机名称\",\"IP地址\",\"MAC地址\",\"A\",\"192.168.50.00\",\"00-AA-00-10-A2-00\",\"B\",\"192.168.50.01\",\"00-BB-00-10-B2-00\",\"C\",\"192.168.50.02\",\"00-CC-00-10-C2-00\",\"D\",\"192.168.50.03\",\"00-DD-00-10-D2-00\",\"E\",\"192.168.50.04\",\"00-EE-00-10-E2-00\",\"如果 A (192.168.50.00) 向 D (192.168.50.03) 发送数据，将会执行以下步骤：\",\"若 A 主机的 ARP 缓存表中存在 D 主机的 IP 地址，则直接从缓存表中获取 D 主机的 MAC 地址，将 MAC 地址写入数据帧中发送即可。\",\"若 A 主机的 ARP 缓存表中不存在 D 主机的 IP 地址，则会在网络中发送广播，地址为广播地址。所有网络中的主机都会收到该广播。\",\"D 主机在收到广播后会回应 A 主机，使用单播告诉 A 主机自己的 MAC 地址。其他主机在收到广播后不会回应。A 主机在收到回应后即可向 D 主机发送消息，并更新自己的缓存表。\",\"若主机不在同一个局域网怎么办？\",\"若 A 主机和 D 主机不在一个局域网下，通过两个路由器连接，则 A 所在的路由器会根据目标 IP 获取到目标子网路由器的 IP 和 MAC 地址。步骤如下：\",\"A 主机首先会判断 D 主机是否处于同一个网段，若不在同一个网段，则 A 主机会尝试获取默认网关（通常为本地路由器）的 MAC 地址。\",\"A 主机向路由器发送数据，数据将被路由器转发。\",\"路由器转发数据前通过 ARP 协议获取目标路由器的 MAC 地址。\",\"路由器发送数据到目标路由器，模板路由器再通过 ARP 缓存将数据发送给目标子网的主机。\",\"什么是反向地址解析协议和代理地址解析协议？\",\"反向地址解析协议 (Reverse ARP, RARP)\",\"反向地址解析协议主要用于通过设备的 MAC 地址获取到设备的 IP 地址，网络设备通过 RARP 协议将自身的 MAC 地址广播给服务器，服务器收到请求，分配 IP 地址给网络设备。\",\"代理地址解析协议 (Proxy ARP)\",\"代理地址解析协议主要用于共用路由器 IP 的不同网段的子设备能够解析 MAC 地址，发送方只需要发送数据给路由器，路由器再通过代理地址解析协议转发数据到目标设备。\"]},\"173\":{\"h\":\"常见的 ARP 攻击方式\",\"t\":[\"名称\",\"攻击方式\",\"如何防范\",\"ARP泛洪攻击 (Denial of Service, DoS)\",\"1. 一般网络设备的 ARP 表有大小限制，攻击者通过伪造大量 IP 地址变化的 ARP 报文使得 ARP 表无法新增条目从而使正常通信无法进行 2. 攻击者通过使用工具扫描网段主机或者跨网段扫描时会向设备发送大量目标 IP 不能解析的报文，导致频繁触发 ARP Miss 错误，并生成大量临时表项，同时广播大量 ARP 请求报文请求解析 IP，导致 CPU 占用过高\",\"1. ARP报文限速 在网关部署ARP报文限速功能，可以统计一段时间内的 ARP 报文数量，若超过了阈值则丢弃，从而减少设备负荷。 2. ARP Miss消息限速 和 ARP 报文限速类似，限制 ARP Miss 消息 3. ARP表项严格学习 ARP表项严格学习功能是指设备仅学习自己发送的 ARP 请求的应答，不接受其他设备发送的 ARP 请求。 4. ARP表项限制 限制 ARP 表动态表项的数目，若超过则不再学习新的表项。\",\"ARP欺骗攻击\",\"攻击者通过发送伪造的 ARP 报文，恶意修改网络设备的 ARP 表项，从而造成通信异常\",\"1. ARP表项固化 在第一次收到 ARP 报文后不允许修改 ARP 表项，从而防止被恶意修改。 2. 免费 ARP (Free ARP) 网关通过主动向主机发送自己的 IP 地址为目标地址的 ARP 报文，定时更新主机的 ARP 表中的 MAC 地址，从而避免用户的消息传到不正确的网关。\"]},\"174\":{\"h\":\"NAT\"},\"175\":{\"h\":\"介绍\",\"t\":[\"网络地址转换协议 (Network Address Translation, NAT) 主要用于广域网的 IP 地址和局域网的 IP 地址之间互相转换。\",\"详情\",\"家用路由器拥有一个广域网的 IP 地址，而其他连接到路由器的设备都是共用这个广域网的 IP 地址，这时候就需要使用 NAT 协议进行转换。\",\"私有网段\",\"网络类型\",\"范围\",\"A类\",\"10.0.0.0～10.255.255.255\",\"B类\",\"172.16.0.0～172.31.255.255\",\"C类\",\"192.168.0.0～192.168.255.255\",\"这三类网段为私有网段，用于内部局域网使用。\"]},\"176\":{\"h\":\"工作原理\",\"t\":[\"如上图所示，如果主机 A 向服务器发送数据包时，路由器会将来源 ip 192.168.50.2 转换为 113.112.111.110, 然后发送给服务器 133.133.133.133 的 80 端口。当服务器返回数据时，又需要将目标地址转换为内网地址。\",\"转换过程\",\"在主机A发送请求数据包时会随机分配一个端口号如 8888 给请求，即请求来源为 192.168.50.2:8888\",\"请求到达路由器后路由器又会指派一个端口给该请求，如 9999, 且将请求的来源 IP 地址改为 113.112.111.110, 最终请求来源地址为 113.112.111.110:9999, 路由器会保存该映射到 NAT转换表 : 192.168.50.2:8888 -- 113.112.111.110:9999 。\",\"服务器返回数据的数据包目标地址为 113.112.111.110:9999， 当数据包到达路由器时，路由器会根据转换表中的记录将请求目标地址转换为 192.168.50.2:8888 ，将数据包发送到内网主机。\"]},\"177\":{\"h\":\"NAT 的优点\",\"t\":[\"内网安全： NAT协议将内网所有网络设备共享统一的 IP 地址，避免内网主机直接暴露在公网，能提高内网主机的安全性。\",\"负载均衡： NAT协议可以将外部请求重定向到内部不同的主机，实现复制均衡。\",\"节约 IP 地址： 我们知道 IPV4 的地址是有限的，NAT 协议使得大量内网设备可以联网，大大减轻了 IPV4 地址不足导致的问题。\"]},\"178\":{\"h\":\"NAT 的缺点\",\"t\":[\"内部屏蔽： 外部服务器无法直接访问内网设备\",\"性能损耗： 路由器维护 NAT 转换表有性能损耗\",\"链接丢失： 若路由器重启会导致所有 TCP 连接断开\",\"解决方法\",\"IPV6 协议的出现可以弥补 NAT 的缺点，是未来的主要应用。\"]},\"179\":{\"h\":\"Docker\"},\"180\":{\"h\":\"Docker 介绍\",\"t\":[\"Docker 是一个开源的应用容器引擎，基于 Go 语言并遵从 Apache2.0 协议开源。Docker 可以让开发者打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口，与虚拟机相似，但是占用资源更少。一台主机一般只能运行几十台虚拟机，但是可以同时运行几百上千个容器。\",\"什么是容器？(Container)\",\"容器就是将应用程序及其依赖，打包在一个文件系统中，包含了一切运行所需的东西，如代码、运行时、系统工具、系统库等，保证应用在任何环境下都能运行。容器是独立于平台的，可以在开发环境、测试环境、生产环境中运行。\"]},\"181\":{\"h\":\"为什么使用 Docker？\",\"t\":[\"在没有容器之前，开发人员在开发环境中编写代码，然后将代码部署到测试环境，最后再部署到生产环境。这种方式存在很多问题，如环境不一致、部署麻烦、开发环境和生产环境不一致等。Docker 的出现解决了这些问题，使得开发、测试、生产环境一致，提高了开发效率。\",\"Docker 的优势\",\"快速交付：Docker 可以快速部署，可以在几秒或者几十秒内启动或停止容器。\",\"一致运行环境：Docker 可以保证开发环境、测试环境、生产环境一致。\",\"高效利用系统资源：Docker 可以在一台主机上运行多个容器，提高资源利用率。\",\"轻量级：Docker 利用容器共享主机内核，不需要运行完整的操作系统，因此比虚拟机更轻量级。\",\"易于维护：Docker 可以快速部署、快速启动、快速停止，维护成本低。\",\"可移植性：Docker 可以在任何平台上运行。\",\"开源：Docker 是开源的，社区活跃，有大量的镜像可以使用。\",\"安全：Docker 使用沙箱机制，相互之间不会有任何接口，提高了安全性。\",\"生态丰富：Docker 生态丰富，有大量的工具可以使用。\",\"持续集成：Docker 可以与持续集成工具结合，实现持续集成。\",\"快速扩展：Docker 可以快速扩展，可以根据需求快速增加或减少容器。\"]},\"182\":{\"h\":\"常用 Docker 命令\",\"t\":[\"描述\",\"命令\",\"查看 Docker 版本\",\"docker --version\",\"查看 Docker 信息\",\"docker info\",\"查看 Docker 镜像\",\"docker images\",\"查看 Docker 容器\",\"docker ps 或 docker ps -a\",\"拉取镜像\",\"docker pull 镜像名称\",\"运行容器\",\"docker run -it 镜像名称\",\"启动容器\",\"docker start 容器ID\",\"停止容器\",\"docker stop 容器ID\",\"重启容器\",\"docker restart 容器ID\",\"进入容器\",\"docker exec -it 容器ID /bin/bash\",\"删除容器\",\"docker rm 容器ID\",\"删除镜像\",\"docker rmi 镜像ID\",\"查看容器日志\",\"docker logs -f 容器ID\"]},\"183\":{\"h\":\"Git\",\"t\":[\"提示\",\"作为一名合格的程序员，熟练掌握 Git 是基本要求\"]},\"184\":{\"h\":\"Git 必须掌握的常用命令\",\"t\":[\"描述\",\"命令\",\"克隆代码\",\"git clone xxxx.git\",\"创建分支\",\"git branch devgit checkout -b devgit switch -c dev\",\"切换分支\",\"git checkout devgit switch dev\",\"查看所有本地分支\",\"git branch\",\"查看所有远程分支\",\"git branch -r\",\"删除本地分支\",\"git branch -d dev\",\"删除远程分支\",\"git push origin --delete dev\",\"暂存代码\",\"git add .\",\"提交代码\",\"git commit -m \\\"feat: add new feature\\\"\",\"推送代码 (强制推送)\",\"git push origin devgit push -f origin dev (强制推送)\",\"拉取代码\",\"git pull origin dev\",\"合并代码\",\"git merge dev\",\"查看状态\",\"git status\",\"查看提交记录\",\"git log\",\"查看差异\",\"git diff\",\"查看远程仓库地址\",\"git remote -v\",\"回退版本\",\"(回退指定 commit_id 版本) git reset --hard commit_id (回退上一个版本) git reset --soft HEAD^ 或 git reset --soft HEAD~1\",\"撤销代码\",\"git revert commit_id\",\"合并代码 (rebase)\",\"git rebase dev\"]},\"185\":{\"h\":\"提交代码步骤\"},\"186\":{\"h\":\"Goland\"},\"187\":{\"h\":\"Goland\",\"t\":[\"Goland 是 JetBrains 推出的 Go 语言 IDE，提供了丰富的功能和插件，可以帮助开发者提高开发效率。\",\"如果是本地开发首选 Goland， 下载地址, 功能强大，支持完善。\",\"如果是云端开发则推荐使用 VsCode\"]},\"188\":{\"h\":\"推荐插件\",\"t\":[\"String Manipulation\",\"String Manipulation 是一个非常好用的字符串修改插件，可以方便地修改所选字符串，将其转换为大写、小写、驼峰等。\",\"string\",\"Makefile Language\",\"Makefile Language 插件可以帮助你高亮 Makefile 语法，快速执行 make 命令\",\"Makefile\",\"Rainbow Brackets\",\"Rainbow Brackets 是一个非常实用的插件，主要用于给括号添加颜色，方便开发者区分括号的层级。\",\"Rainbow Brackets\"]},\"189\":{\"h\":\"快速更新依赖\",\"t\":[\"在 Goland 中打开 go.mod 文件， 点击 require 会出现灯泡，点击灯泡出现 update 根据需求选择 update 的包即可。\",\"update\"]},\"190\":{\"h\":\"VsCode\"},\"191\":{\"h\":\"VsCode\",\"t\":[\"VsCode 是微软推出的开源代码编辑器，支持多种语言，提供了丰富的插件，可以帮助开发者提高开发效率。\",\"如果是云端开发则推荐使用 VsCode ，点击下载\"]},\"192\":{\"h\":\"推荐插件\",\"t\":[\"Go\",\"Go 是一个非常好用的 Go 语言插件，支持代码提示、代码格式化、代码跳转等功能。\",\"相关信息\",\"Name: Go\",\"Id: golang.go\",\"Description: Rich Go language support for Visual Studio Code\",\"Version: 0.41.4\",\"Publisher: Go Team at Google\",\"VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=golang.Go\",\"indent-rainbow 括号提示插件，可以让你更容易地看到代码的缩进层级。\",\"相关信息\",\"Name: indent-rainbow\",\"Id: oderwat.indent-rainbow\",\"Description: Makes indentation easier to read\",\"Version: 8.3.1\",\"Publisher: oderwat\",\"VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow\",\"GitLens\",\"GitLens 是一个非常好用的 Git 插件，可以帮助你更好地管理代码版本。\",\"相关信息\",\"Name: GitLens — Git supercharged\",\"Id: eamodio.gitlens\",\"Description: Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more\",\"Version: 14.9.1\",\"Publisher: GitKraken\",\"VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\",\"Remote Explorer\",\"Remote Explorer 是一个非常好用的远程开发插件，可以帮助你更好地管理远程代码。\",\"相关信息\",\"Name: Remote Explorer\",\"Id: ms-vscode.remote-explorer\",\"Description: View remote machines for SSH and Tunnels.\",\"Version: 0.4.3\",\"Publisher: Microsoft\",\"VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=ms-vscode.remote-explorer\"]},\"193\":{\"h\":\"Launch.json 配置文件教程\",\"t\":[\"在 VsCode 中，launch.json 是一个非常重要的配置文件，可以帮助你更好地调试代码。在 lauch.json 中定义了调试器的配置信息，比如调试器的类型、程序的入口文件、程序的参数等，使得调试程序简单灵活。\",\"使用 launch.json 可以实现以下功能：\",\"功能\",\"描述\",\"本地和远程调试\",\"通过配置可以实现本地和远程调试代码\",\"多语言调试支持\",\"通过配置可以实现调试各类编程语言，如 Java, Python, Go 等\",\"调试参数配置\",\"通过配置可以实现调试参数的配置，如环境变量，工作目录，调试目标文件等\",\"设置断点\",\"通过配置可以设置断点进行调试，显示执行到的代码，以及此时的堆栈信息\"]},\"194\":{\"h\":\"配置字段\",\"t\":[\"Golang launch.json 例子\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"Launch test function\\\", \\\"type\\\": \\\"go\\\", \\\"request\\\": \\\"launch\\\", \\\"mode\\\": \\\"test\\\", \\\"program\\\": \\\"${workspaceFolder}\\\", \\\"args\\\": [ \\\"-test.run\\\", ], \\\"cwd\\\": \\\"${workspaceFolder}\\\" } ] } \",\"字段说明\",\"字段名\",\"描述\",\"version\",\"配置文件版本号，目前只支持 \\\"0.2.0\\\"\",\"configurations\",\"配置数组，包含了多个配置项，每个配置项都是一个对象\",\"name\",\"配置名称，用于在调试器中显示\",\"type\",\"调试器类型，比如 go, python, java 等\",\"request\",\"请求类型，launch 表示启动调试器，attach 表示连接到已经运行的程序\",\"mode\",\"调试模式，比如 test, exec, debug 等\",\"program\",\"程序入口文件，可以是文件路径或者目录路径\",\"args\",\"程序参数，可以是数组或者字符串\",\"cwd\",\"工作目录，程序运行的工作目录\",\"env\",\"以对象形式提供程序运行时的环境变量。\",\"stopOnEntry\",\"如果设置为 true，在启动后会在入口处停止，等待调试器连接。\",\"preLaunchTask\",\"指定在启动调试前运行的任务，通常是一个编译任务。\",\"postDebugTask\",\"指定在调试结束后运行的任务，例如清理任务。\",\"outFiles\",\"设置输出文件的路径，用于映射源代码和编译后的文件。\",\"sourceMaps\",\"控制是否启用源代码映射，可以是 \\\"inline\\\"、\\\"both\\\" 或 \\\"false\\\"。\",\"sourceMapPathOverrides\",\"用于根据源代码映射调整文件路径。\",\"externalConsole\",\"如果设置为 true，将在外部控制台中运行程序。\",\"internalConsoleOptions\",\"控制内部控制台的显示方式，可以是 \\\"neverOpen\\\"、\\\"openOnSessionStart\\\" 或 \\\"openOnFirstSessionStart\\\"。\",\"showAsyncStacks\",\"如果设置为 true，在堆栈跟踪中显示异步调用的信息。\",\"stopOnError\",\"如果设置为 true，当发生错误时暂停调试。\",\"smartStep\",\"如果设置为 true，跳过无需调试的代码。\",\"skipFiles\",\"指定不需要调试的文件或文件夹。\",\"justMyCode\",\"如果设置为 true，只调试自己的代码。\",\"例子\",\"Node.js\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"type\\\": \\\"node\\\", \\\"request\\\": \\\"launch\\\", \\\"name\\\": \\\"Node.js Launch\\\", \\\"program\\\": \\\"${file}\\\", \\\"cwd\\\": \\\"${workspaceFolder}\\\", \\\"runtimeExecutable\\\": \\\"node\\\" } ] } \",\"Python\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"Python: Current File\\\", \\\"type\\\": \\\"python\\\", \\\"request\\\": \\\"launch\\\", \\\"program\\\": \\\"${file}\\\", \\\"console\\\": \\\"integratedTerminal\\\" }, \\\"env\\\": { \\\"PYTHONPATH\\\": \\\"\\\", } \\\"args\\\":[] ] } \",\"Java\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"type\\\": \\\"java\\\", \\\"name\\\": \\\"Java Debug\\\", \\\"request\\\": \\\"launch\\\", \\\"cwd\\\": \\\"${workspaceFolder}\\\", \\\"console\\\": \\\"internalConsole\\\", \\\"stopOnEntry\\\": false, \\\"mainClass\\\": \\\"${file}\\\" } ] } \",\"Go\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"Launch test function\\\", \\\"type\\\": \\\"go\\\", \\\"request\\\": \\\"launch\\\", \\\"mode\\\": \\\"test\\\", \\\"program\\\": \\\"${workspaceFolder}\\\", \\\"args\\\": [ \\\"-test.run\\\", ], \\\"cwd\\\": \\\"${workspaceFolder}\\\" } ] } \",\"C#\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\".NET Core Launch (console)\\\", \\\"type\\\": \\\"coreclr\\\", \\\"request\\\": \\\"launch\\\", \\\"preLaunchTask\\\": \\\"build\\\", \\\"program\\\": \\\"${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>\\\", \\\"args\\\": [], \\\"cwd\\\": \\\"${workspaceFolder}\\\", \\\"stopAtEntry\\\": false, \\\"console\\\": \\\"internalConsole\\\" } ] } \"]},\"195\":{\"h\":\"Gin\"},\"196\":{\"h\":\"介绍\",\"t\":[\"Gin 是一个用 Go 语言编写的 Web 框架。它具有速度快、内存占用低的特点。Gin 的 API 简单易用，提供了诸多中间件，可以快速构建 Web 应用程序。Gin 是一个非常热门的 Web 框架，被广泛应用于生产环境中，在 Github 上有 70k+ 的 Star。\",\"优缺点\",\"优点：\",\"性能：Gin 的性能非常好，速度快，内存占用低\",\"简单：Gin 的 API 简单易用，学习成本低\",\"中间件：Gin 提供了丰富的中间件，可以快速构建 Web 应用程序\",\"轻量级：Gin 是一个轻量级的 Web 框架，不会引入过多的依赖, 不提供太多复杂的功能\",\"缺点：\",\"功能相对简单：Gin 的功能相对简单，不如 Beego、Iris 等 Web 框架功能丰富\",\"不支持 Websocket：Gin 不支持 Websocket，如果需要使用 Websocket，需要自己实现\",\"不支持模板引擎：Gin 不支持模板引擎，需要自己选择模板引擎\",\"不支持 Session：Gin 不支持 Session，需要自己实现\",\"不支持自动化文档：Gin 不支持自动生成 API 文档，需要自己实现\"]},\"197\":{\"h\":\"Gin 的使用示例\"},\"198\":{\"h\":\"创建一个简单的 Web 服务\",\"t\":[\"package main import ( \\\"github.com/gin-gonic/gin\\\" ) func main() { r := gin.Default() r.GET(\\\"/ping\\\", func(c *gin.Context) { c.JSON(200, gin.H{ \\\"message\\\": \\\"pong\\\", }) }) r.Run() } \"]},\"199\":{\"h\":\"Go Zero\"},\"200\":{\"h\":\"介绍\",\"t\":[\"Go Zero 是一个集成了各种工程实践的微服务框架。它提供了一站式的微服务开发解决方案，包括接口定义、错误码生成、客户端代码生成、服务端代码生成、API 文档生成等功能。Go Zero 的设计目标是提供一种简单、高效、可靠的微服务开发框架，让开发者可以专注于业务逻辑的实现，而不用花费过多精力在微服务的开发和维护上。\",\"优缺点\",\"优点：\",\"简单易用：Go Zero 提供了一站式的微服务开发解决方案，让开发者可以专注于业务逻辑的实现\",\"高效可靠：Go Zero 的设计目标是提供一种简单、高效、可靠的微服务开发框架\",\"功能丰富：Go Zero 集成了各种工程实践，包括接口定义、错误码生成、客户端代码生成、服务端代码生成、API 文档生成等功能\",\"生态完善：Go Zero 的生态完善，提供了丰富的插件和工具，可以快速构建微服务应用程序\",\"社区活跃：Go Zero 的社区活跃，有很多开发者在使用 Go Zero，并且有很多插件和工具可以使用\",\"性能优秀：Go Zero 的性能优秀，速度快，内存占用低\",\"缺点：\",\"学习成本：Go Zero 集成了很多工程实践，学习成本较高\",\"功能相对复杂：Go Zero 的功能相对复杂，需要一定的时间来熟悉和掌握\",\"依赖较多：Go Zero 集成了很多工程实践，依赖较多\",\"文档不够完善：Go Zero 的文档相对不够完善，需要自己查阅源码和文档\",\"社区相对小：Go Zero 的社区相对小，可能会遇到一些问题无法解决\"]},\"201\":{\"h\":\"Go Zero 的使用\",\"t\":[\"要使用 Go Zero, 首先要安装命令行工具 goctl。goctl 是 Go Zero 的命令行工具，提供了接口定义、错误码生成、客户端代码生成、服务端代码生成、API 文档生成等功能。\"]},\"202\":{\"h\":\"安装 goctl\",\"t\":[\"GO111MODULE=on go install github.com/zeromicro/go-zero/tools/goctl@latest \"]},\"203\":{\"h\":\"创建一个简单的微服务\",\"t\":[\"goctl api new greet \"]},\"204\":{\"h\":\"Kratos\"},\"205\":{\"h\":\"介绍\",\"t\":[\"Kratos 是一个 Go 语言编写的微服务框架，由 Bilibili 开源。Kratos 提供了一站式的微服务开发解决方案，包括接口定义、错误码生成、客户端代码生成、服务端代码生成、API 文档生成等功能。Kratos 的设计目标是提供一种简单、高效、可靠的微服务开发框架，让开发者可以专注于业务逻辑的实现，而不用花费过多精力在微服务的开发和维护上。\",\"优缺点\",\"优点：\",\"简单易用：Kratos 提供了一站式的微服务开发解决方案，让开发者可以专注于业务逻辑的实现\",\"高效可靠：Kratos 的设计目标是提供一种简单、高效、可靠的微服务开发框架\",\"功能丰富：Kratos 集成了各种工程实践，包括接口定义、错误码生成、客户端代码生成、服务端代码生成、API 文档生成等功能\",\"文档完善：Kratos 的文档完善，提供了详细的使用说明和示例代码\",\"缺点：\",\"生态相对不完善：Kratos 的生态相对不完善，插件和工具相对较少\",\"社区相对小：Kratos 的社区相对小，可能会遇到一些问题无法解决\"]},\"206\":{\"h\":\"Kratos 的使用\",\"t\":[\"要使用 Kratos, 首先要安装命令行工具 kratos。kratos 是 Kratos 的命令行工具，提供了接口定义、错误码生成、客户端代码生成、服务端代码生成、API 文档生成等功能。\"]},\"207\":{\"h\":\"安装 kratos\",\"t\":[\"GO111MODULE=on go get -u github.com/go-kratos/kratos/cmd/kratos/v2@latest \"]},\"208\":{\"h\":\"创建一个简单的微服务\",\"t\":[\"kratos new kratos-demo \"]},\"209\":{\"h\":\"Ent\"},\"210\":{\"h\":\"Ent 介绍\",\"t\":[\"Ent 中文文档\",\"中文文档\",\"Ent 是一个简单而强大的 Go 实体框架，它使得构建和维护具有大型数据模型的应用程序变得轻松，并遵循以下原则：\",\"以图结构建模数据库模式。\",\"将模式定义为 Go 代码。\",\"基于代码生成的静态类型。\",\"编写数据库查询和图遍历变得简单。\",\"使用 Go 模板轻松扩展和自定义。\",\"优缺点\",\"优点：\",\"简单：Ent通过代码生成生成了大量 API 方便开发者调用查询\",\"类型安全：Ent通过代码生成所有类型都是静态类型，且不使用反射，不会出现数据类型无法转换的情况\",\"易扩展：Ent 提供了模板功能，使得扩展 API 非常简单\",\"性能：Ent 生成的代码不使用反射，有着不错的性能\",\"支持多种数据库：Ent 支持多种数据库，如 MySQL、PostgreSQL、SQLite、Gremlin 等\",\"灵活: Ent 提供钩子和拦截器，使得构建复杂查询变得简单\",\"图遍历: Ent 将数据表之间的关系用图的方式表示，使得图遍历变得非常简单\",\"缺点：\",\"学习成本：Ent 有一定的学习成本，需要了解 Ent 的设计思想和 API\",\"占用空间：Ent 生成的代码比较多，会占用一定的空间，导致构建的二进制文件变大\"]},\"211\":{\"h\":\"Ent 的使用示例\"},\"212\":{\"h\":\"创建数据\",\"t\":[\"client.Dictionary.Create(). SetTitle(in.Title). SetName(in.Name). SetStatus(uint8(in.Status)). SetDesc(in.Desc). Exec(l.ctx) \"]},\"213\":{\"h\":\"更新数据\",\"t\":[\"Client.Dictionary.UpdateOneID(in.Id).SetStatus(uint8(in.Status)).Exec(l.ctx) \"]},\"214\":{\"h\":\"查询数据\",\"t\":[\"data, err := client.Dictionary.Query().Where(dictionary. NameContains(\\\"animal\\\")). All(l.ctx) details, err := client.Dictionary.Query().Where(dictionary. NameEQ(in.Name)). QueryDictionaryDetails(). All(l.ctx) \"]},\"215\":{\"h\":\"删除数据\",\"t\":[\"client.Dictionary.DeleteOneID(in.Id).Exec(l.ctx) \"]},\"216\":{\"h\":\"GORM\"},\"217\":{\"h\":\"GORM 介绍\",\"t\":[\"GORM 是一个强大的 ORM 库， 非常受欢迎，它提供了大量的功能，如链式查询、预加载、事务、模型关联等。\",\"全功能 ORM\",\"关联 (Has One，Has Many，Belongs To，Many To Many，多态，单表继承)\",\"Create，Save，Update，Delete，Find 中钩子方法\",\"支持 Preload、Joins 的预加载\",\"事务，嵌套事务，Save Point，Rollback To Saved Point\",\"Context、预编译模式、DryRun 模式\",\"批量插入，FindInBatches，Find/Create with Map，使用 SQL 表达式、Context Valuer 进行 CRUD\",\"SQL 构建器，Upsert，数据库锁，Optimizer/Index/Comment Hint，命名参数，子查询\",\"复合主键，索引，约束\",\"自动迁移\",\"自定义 Logger\",\"灵活的可扩展插件 API：Database Resolver（多数据库，读写分离）、Prometheus…\",\"每个特性都经过了测试的重重考验\",\"开发者友好\",\"优缺点\",\"优点：\",\"功能强大：GORM 提供了大量的功能，如链式查询、预加载、事务、模型关联等\",\"易用：GORM 的 API 设计非常友好，开发者可以很快上手\",\"灵活：GORM 提供了大量的配置选项，可以根据需求进行配置\",\"缺点：\",\"性能：由于大量使用反射，导致 GORM 的性能较低\",\"不太便捷: GORM 的 API 在使用时与直接写原生 SQL 相似，并没有减少太多工作量, 且查询和更新都需要结构体，更新空值也比较麻烦\"]},\"218\":{\"h\":\"GORM 的使用示例\"},\"219\":{\"h\":\"创建数据\",\"t\":[\"db.Create(&User{Name: \\\"Jinzhu\\\", Age: 18}) \"]},\"220\":{\"h\":\"更新数据\",\"t\":[\"db.Model(&user).Update(\\\"Age\\\", 20) \"]},\"221\":{\"h\":\"查询数据\",\"t\":[\"db.First(&user, 1) // 查询id为1的user \"]},\"222\":{\"h\":\"删除数据\",\"t\":[\"db.Delete(&user) \"]},\"223\":{\"h\":\"Lancet\"},\"224\":{\"h\":\"介绍\",\"t\":[\"Lancet 是一个 Go 语言编写的工具库，提供了一些常用的工具函数和工具方法，方便开发者进行开发。Lancet 的设计目标是提供一些常用的工具函数和工具方法，让开发者可以专注于业务逻辑的实现，而不用花费过多精力在工具函数和工具方法的开发上。\",\"Lancet 的作用和 Java 中的 Hutool 类似，提供了大量可以直接使用的函数，可以方便地调用，减少重复造轮子。\"]},\"225\":{\"h\":\"主要功能\",\"t\":[\"功能模块\",\"描述\",\"Algorithm\",\"提供了一些常用的算法函数。\",\"Compare\",\"用于比较数据的函数，例如比较两个值的大小。\",\"Concurrency\",\"处理并发操作的工具函数，包括协程、锁等。\",\"Condition\",\"用于条件判断的函数，例如判断某个值是否满足某个条件。\",\"Convertor\",\"数据类型转换的工具函数，例如将字符串转换为整数。\",\"Cryptor\",\"加密和解密相关的函数。\",\"Datetime\",\"处理日期和时间的函数，例如格式化日期、计算时间差等。\",\"Datastructure\",\"提供了一些常用的数据结构，例如栈、队列、链表等。\",\"Fileutil\",\"文件操作的工具函数，例如读写文件、创建目录等。\",\"Formatter\",\"格式化字符串的函数，例如填充字符串、截断字符串等。\",\"Function\",\"与函数相关的工具函数，例如函数的柯里化、反柯里化等。\",\"Maputil\",\"处理 map 的工具函数，例如合并 map、遍历 map 等。\",\"Mathutil\",\"数学计算相关的函数，例如取绝对值、求平方根等。\",\"Netutil\",\"处理网络和 HTTP 请求的工具函数，例如发送 HTTP 请求、解析 URL 等。\",\"Pointer\",\"操作指针的函数，例如获取指针的值、创建指针等。\",\"Random\",\"生成随机数的函数。\",\"Retry\",\"实现重试机制的函数，例如在网络请求失败时进行重试。\",\"Slice\",\"处理切片的工具函数，例如切片的截取、合并等。\",\"Stream\",\"提供了类似流式处理的函数，例如 map、filter、reduce 等。\",\"Structs\",\"处理结构体的工具函数，例如获取结构体字段的值、判断结构体是否为空等。\",\"Strutil\",\"处理字符串的工具函数，例如字符串的拼接、截取、替换等。\",\"System\",\"系统相关的函数，例如获取环境变量、执行系统命令等。\",\"Tuple\",\"处理元组的工具函数，例如创建元组、获取元组的值等。\",\"Validator\",\"数据验证的函数，例如验证邮箱、手机号等。\",\"Xerror\",\"错误处理相关的函数，例如创建错误、判断错误类型等。\"]},\"226\":{\"h\":\"例子\",\"t\":[\"冒泡排序\",\"package main import ( \\\"fmt\\\" \\\"github.com/duke-git/lancet/v2/algorithm\\\" ) type intComparator struct{} func (c *intComparator) Compare(v1 any, v2 any) int { val1, _ := v1.(int) val2, _ := v2.(int) //ascending order if val1 < val2 { return -1 } else if val1 > val2 { return 1 } return 0 } func main() { numbers := []int{2, 1, 5, 3, 6, 4} comparator := &intComparator{} algorithm.BubbleSort(numbers, comparator) fmt.Println(numbers) // Output: // [1 2 3 4 5 6] } \"]},\"227\":{\"h\":\"基础\"},\"228\":{\"h\":\"关系键\",\"t\":[\"关系键用于标识数据表中的每一行或者标识与其他表的关系\",\"关系键\",\"介绍\",\"主键 (Primary key - Unique key)\",\"主键是数据列中用来唯一标识的字段，不允许为空，一个表只能有一个主键\",\"超键 (Super key)\",\"超键是能唯一标识数据列的所有属性集, 即若任意单个或多个字段如果也能唯一标识数据列，则都属于超键\",\"候选键 (Candidate key)\",\"候选键是超键的子集，候选键是不包含多余字段的超键，候选键中删除任意字段都不属于超键\",\"外键 (Foreign key)\",\"外键用于建立表之间的关系，如 A 表的主键是 B 表的字段，这时候 B 表中的 A 表的主键字段就是外键\",\"注意\",\"主键和唯一键的区别：\",\"一张表只能有一个主键，可以有多个唯一键\",\"主键不能为空，唯一键可以为空\",\"例子\",\"假设有两张表\",\"student\",\"teacher\",\"id\",\"id\",\"name\",\"name\",\"age\",\"age\",\"identify_card (身份证号)\",\"teacher_id\",\"主键： student.idteacher.id\",\"超键: 以 student 表为例: (student.id, student.name),(student.id, student.name, student.age) ... 任何和主键和身份证的组合都为超键\",\"候选键： 以 student 表为例： student.idstudent.identify_card\",\"外键： student.teacher_id\"]},\"229\":{\"h\":\"表连接\",\"t\":[\"要学习表连接，首先要了解笛卡尔积\",\"笛卡尔积\",\"笛卡尔积（Cartesian product）指的是两个集合 X, Y 中 X 的所有元素分别乘以 Y 中所有元素的集合，又称为直积\",\"例如 X={a,b}Y={1,2} 则 X 和 Y 的笛卡尔积为\",\"Z={(a,1),(a,2),(b,1),(b,2)}\",\"表连接是通过条件对两表之间的笛卡尔积进行筛选后的结果\"]},\"230\":{\"h\":\"表连接示意图\",\"t\":[\"sql-join\",\"示例表\",\"示例表\",\"接下来的查询都是围绕该示例表\"]},\"231\":{\"h\":\"course\",\"t\":[\"id\",\"title\",\"1\",\"Math\",\"2\",\"Art\",\"3\",\"Music\",\"4\",\"Geography\",\"15\",\"Sport\"]},\"232\":{\"h\":\"student\",\"t\":[\"id\",\"name\",\"age\",\"course_id\",\"1\",\"Elaine Morris\",\"12\",\"3\",\"2\",\"Beverly Turner\",\"11\",\"4\",\"3\",\"Connie Murphy\",\"11\",\"2\",\"4\",\"Jamie Romero\",\"12\",\"5\",\"5\",\"Clifford Reyes\",\"10\",\"1\",\"6\",\"Francisco Cook\",\"12\",\"2\",\"7\",\"Alan Sanchez\",\"11\",\"9\",\"8\",\"Tony Garcia\",\"12\",\"3\",\"9\",\"Bobby Burns\",\"12\",\"8\",\"10\",\"Glenn Adams\",\"11\",\"5\",\"11\",\"Glenn Griffin\",\"12\",\"4\",\"12\",\"Justin Rogers\",\"13\",\"8\",\"注意\",\"一般我们称第一个表为驱动表，第二个表为被驱动表，在例子中 student 为驱动表， course 为被驱动表\"]},\"233\":{\"h\":\"内连接 （inner Join）\",\"t\":[\"内连接 inner join 等同于 join, 用于只返回匹配的行。\",\"以下三种写法相同\",\"select * from a,b; select * from a join b; select * from a inner join b; \",\"例子\",\"select * from student s inner join course c on s.course_id=c.id; \",\"结果\",\"id\",\"name\",\"age\",\"course_id\",\"id(1)\",\"title\",\"5\",\"Clifford Reyes\",\"10\",\"1\",\"1\",\"Math\",\"6\",\"Francisco Cook\",\"12\",\"2\",\"2\",\"Art\",\"3\",\"Connie Murphy\",\"11\",\"2\",\"2\",\"Art\",\"8\",\"Tony Garcia\",\"12\",\"3\",\"3\",\"Music\",\"1\",\"Elaine Morris\",\"12\",\"3\",\"3\",\"Music\",\"11\",\"Glenn Griffin\",\"12\",\"4\",\"4\",\"Geography\",\"2\",\"Beverly Turner\",\"11\",\"4\",\"4\",\"Geography\",\"可以看到只有满足 s.course_id=c.id 的数据列被返回了\"]},\"234\":{\"h\":\"外连接 (outer join)\"},\"235\":{\"h\":\"左连接 (left join)\",\"t\":[\"select * from student s left join course c on s.course_id=c.id; \",\"结果\",\"id\",\"name\",\"age\",\"course_id\",\"id(1)\",\"title\",\"5\",\"Clifford Reyes\",\"10\",\"1\",\"1\",\"Math\",\"6\",\"Francisco Cook\",\"12\",\"2\",\"2\",\"Art\",\"3\",\"Connie Murphy\",\"11\",\"2\",\"2\",\"Art\",\"8\",\"Tony Garcia\",\"12\",\"3\",\"3\",\"Music\",\"1\",\"Elaine Morris\",\"12\",\"3\",\"3\",\"Music\",\"11\",\"Glenn Griffin\",\"12\",\"4\",\"4\",\"Geography\",\"2\",\"Beverly Turner\",\"11\",\"4\",\"4\",\"Geography\",\"10\",\"Glenn Adams\",\"11\",\"5\",\"4\",\"Jamie Romero\",\"12\",\"5\",\"12\",\"Justin Rogers\",\"13\",\"8\",\"9\",\"Bobby Burns\",\"12\",\"8\",\"7\",\"Alan Sanchez\",\"11\",\"9\",\"相关信息\",\"可以看到不只有满足 s.course_id=c.id 的数据列被返回了，同时驱动表未匹配的其他数据也会返回\"]},\"236\":{\"h\":\"右连接 (right join)\",\"t\":[\"select * from student s right join course c on s.course_id=c.id; \",\"结果\",\"id\",\"name\",\"age\",\"course_id\",\"id(1)\",\"title\",\"5\",\"Clifford Reyes\",\"10\",\"1\",\"1\",\"Math\",\"6\",\"Francisco Cook\",\"12\",\"2\",\"2\",\"Art\",\"3\",\"Connie Murphy\",\"11\",\"2\",\"2\",\"Art\",\"8\",\"Tony Garcia\",\"12\",\"3\",\"3\",\"Music\",\"1\",\"Elaine Morris\",\"12\",\"3\",\"3\",\"Music\",\"11\",\"Glenn Griffin\",\"12\",\"4\",\"4\",\"Geography\",\"2\",\"Beverly Turner\",\"11\",\"4\",\"4\",\"Geography\",\"15\",\"Sport\",\"相关信息\",\"可以看到不只有满足 s.course_id=c.id 的数据列被返回了，同时被驱动表未匹配的其他数据也会返回\"]},\"237\":{\"h\":\"全外连接 (full outer join)\",\"t\":[\"select * from student s full outer join course c on s.course_id=c.id; \",\"结果\",\"id\",\"name\",\"age\",\"course_id\",\"id(1)\",\"title\",\"5\",\"Clifford Reyes\",\"10\",\"1\",\"1\",\"Math\",\"6\",\"Francisco Cook\",\"12\",\"2\",\"2\",\"Art\",\"3\",\"Connie Murphy\",\"11\",\"2\",\"2\",\"Art\",\"8\",\"Tony Garcia\",\"12\",\"3\",\"3\",\"Music\",\"1\",\"Elaine Morris\",\"12\",\"3\",\"3\",\"Music\",\"11\",\"Glenn Griffin\",\"12\",\"4\",\"4\",\"Geography\",\"2\",\"Beverly Turner\",\"11\",\"4\",\"4\",\"Geography\",\"15\",\"Sport\",\"10\",\"Glenn Adams\",\"11\",\"5\",\"4\",\"Jamie Romero\",\"12\",\"5\",\"12\",\"Justin Rogers\",\"13\",\"8\",\"9\",\"Bobby Burns\",\"12\",\"8\",\"7\",\"Alan Sanchez\",\"11\",\"9\",\"相关信息\",\"可以看到不只有满足 s.course_id=c.id 的数据列被返回了，同时未匹配的其他数据也会返回\",\"查询条件\",\"在使用连接后支持两种过滤条件：\",\"where\",\"使用 where 子句只会返回满足 where 条件的列\",\"on\",\"使用 on 时，在内连接的查询中 on 和 where 的效果是一致的，在外连接中如左连接会返回驱动表不匹配的数据\",\"注意\",\"如果有多个表连接如 a inner join b inner join c 首先会执行 a inner join b, 然后将结果再 inner join c\",\"重要\",\"在 join 的时候利用索引可以减少回表次数\"]},\"238\":{\"h\":\"查询\"},\"239\":{\"h\":\"SELECT 选择\",\"t\":[\"Select 命令主要用于限制返回结果\"]},\"240\":{\"h\":\"返回所有字段\",\"t\":[\"SELECT * FROM 表名; \"]},\"241\":{\"h\":\"返回指定字段\",\"t\":[\"SELECT 字段1,字段2 FROM 表名; \"]},\"242\":{\"h\":\"结果去重\",\"t\":[\"SELECT DISTINCT 字段 FROM 表名; \"]},\"243\":{\"h\":\"ORDER 排序\",\"t\":[\"SELECT * FROM 表名 ORDER BY 字段名 [ASC|DESC]; \"]},\"244\":{\"h\":\"LIMIT 限制返回数量\",\"t\":[\"SELECT * FROM 表名 LIMIT 开始，数量; \",\"若只有数量则默认从第 0 行开始\",\"SELECT * FROM 表名 LIMIT 7; \",\"表示第 0-6 行数据\",\"// mysql SELECT * FROM 表名 LIMIT 10, 6; // postgresql SELECT * FROM 表名 LIMIT 6 OFFSET 10; \",\"表示第 10 - 15 行数据\"]},\"245\":{\"h\":\"WHERE 条件\",\"t\":[\"我们使用 Where 进行数据筛选\",\"运算符\",\"描述\",\"=\",\"等于\",\"<>\",\"不等于\",\">\",\"大于\",\"<\",\"小于\",\">=\",\"大于等于\",\"<=\",\"小于等于\",\"BETWEEN\",\"在某个范围内\",\"LIKE\",\"符合模式定义的数据\",\"IN\",\"指定多个可能值\",\"// 姓名等于 Jack SELECT * FROM users WHERE name = \\\"Jack\\\"; // 年龄大于 12 SELECT * FROM users WHERE age > 12; // 年龄在 12 - 18 之间 SELECT * FROM users WHERE age BETWEEN 12 AND 18; // 姓名以 J 开头 SELECT * FROM users WHERE name LIKE \\\"J%\\\"; // 年龄为 12, 15 或 18 SELECT * FROM users WHERE age IN (12,15,18); \",\"相关信息\",\"LIKE 支持两个通配符，% 表示任意个字符串, _ 表示任意单个字符\",\"// 名字以 J 开头，如 Jack, Jacky, Jim SELECT * FROM users WHERE name LIKE \\\"J%\\\"; // 单个字符, 如 JA, Jc SELECT * FROM users WHERE name LIKE \\\"J_\\\"; \"]},\"246\":{\"h\":\"AND, OR, NOT\",\"t\":[\"// 年龄为 12 或 18 SELECT * FROM users WHERE age = 12 OR age = 18; // 姓名为 Jack 且年龄为 12 SELECT * FROM users WHERE name = \\\"Jack\\\" OR age = 12; // 年龄不为 12 SELECT * FROM users WHERE not age = 12; \"]},\"247\":{\"h\":\"GROUP BY 分组\",\"t\":[\"GROUP BY 通常和聚合函数 （COUNT, AVG ...） 等搭配使用，使用 HAVING 做额外查询\",\"// 查询对应年龄用户的数量, 且数量需大于 10 SELECT age, COUNT(age) FROM users GROUP BY age HAVING COUNT(age) > 10; \"]},\"248\":{\"h\":\"EXISTS 存在\",\"t\":[\"EXISTS 主要用于查询是否满足子查询返回的数据\",\"SELECT age FROM users WHERE EXISTS (SELECT age FROM users WHERE age > 2 ); \"]},\"249\":{\"h\":\"常见的聚合函数\",\"t\":[\"函数\",\"功能描述\",\"备注\",\"count()\",\"统计条数\",\"只统计非空行, 使用 count(*) 或 count(1) 统计所有行包括空行\",\"sum()\",\"求和\",\"只统计非空行，True 按 1 处理，False 按 0 处理\",\"max()\",\"最大值\",\"时间字段表示查询最近的日期\",\"min()\",\"最小值\",\"时间字段表示查询最远的日期\",\"avg()\",\"平均值\",\"只统计非空行\"]},\"250\":{\"h\":\"索引\",\"t\":[\"相关信息\",\"索引是关系数据库中对某一列或多个列的值进行预排序的数据结构。通过索引我们可以快速定位到目标数据的位置。\",\"优点：\",\"提高查询速度\",\"降低数据库的 I/O 消耗\",\"降低 CPU 消耗\",\"提高数据的唯一性\",\"保证数据的完整性\",\"缺点：\",\"占用磁盘空间\",\"降低数据的写入和更新速度\"]},\"251\":{\"h\":\"索引类型\",\"t\":[\"索引类型\",\"描述\",\"逻辑功能划分\",\"普通索引\",\"这是最基本的索引，它没有任何限制。它的主要任务是加快对数据的访问速度。\",\"唯一索引\",\"与普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值。如果是组合索引，则列值的组合必须唯一。\",\"主键索引\",\"主键索引是一种特殊的唯一索引，不允许有空值。\",\"全文索引\",\"全文索引用于全文搜索，只有 CHAR、VARCHAR 和 TEXT 列才能被索引。\",\"物理划分\",\"聚簇索引\",\"聚集索引是按照数据存放的物理位置为顺序的，能提高多行检索的速度。\",\"非聚簇索引\",\"非聚簇索引是按照逻辑顺序（索引的顺序）存储的，与数据在磁盘上的存储无关。\",\"字段个数划分\",\"单列索引\",\"单列索引是基于单个列的值创建的索引。\",\"组合索引\",\"组合索引是基于多个列的值创建的索引。\"]},\"252\":{\"h\":\"按逻辑功能划分\"},\"253\":{\"h\":\"普通索引\",\"t\":[\"CREATE INDEX 索引名 ON 表名 (字段名); \"]},\"254\":{\"h\":\"唯一索引\",\"t\":[\"CREATE UNIQUE INDEX 索引名 ON 表名 (字段名); \"]},\"255\":{\"h\":\"主键索引\",\"t\":[\"ALTER TABLE 表名 ADD PRIMARY KEY (字段名); \"]},\"256\":{\"h\":\"全文索引\",\"t\":[\"CREATE FULLTEXT INDEX 索引名 ON 表名 (字段名); \"]},\"257\":{\"h\":\"按物理划分\"},\"258\":{\"h\":\"聚簇索引\",\"t\":[\"聚簇索引的索引和数据存储在一起，索引的顺序和数据的物理存储顺序一致。在 MySQL 中的主键索引就是聚簇索引，索引和数据都存在同一个 .ibd 文件中。\",\"聚簇索引优缺点\",\"优点：\",\"聚簇索引可以减少磁盘 I/O 操作，提高查询效率。查询到索引就找到了数据，不需要再次查询数据。\",\"聚簇索引可以减少数据碎片，提高数据的存储效率。\",\"缺点：\",\"聚簇索引的维护代价较高，插入、删除、更新数据时需要维护索引。\",\"聚簇索引的数据存储是有序的，如果插入数据是无序的，可能会导致数据存储不连续，增加了数据的存储空间。\"]},\"259\":{\"h\":\"非聚簇索引\",\"t\":[\"非聚簇索引的索引和数据存储在不同的地方，索引的顺序和数据的物理存储顺序不一致。在 MySQL 中的普通索引就是非聚簇索引，索引和数据分别存在两个 .ibd 文件中。\",\"非聚簇索引优缺点\",\"优点：\",\"非聚簇索引的维护代价较低，插入、删除、更新数据时只需要维护索引。\",\"非聚簇索引的数据存储是无序的，插入数据时不会导致数据存储不连续，减少了数据的存储空间。\",\"缺点：\",\"非聚簇索引查询效率较低，查询到索引后还需要再次查询数据。\",\"非聚簇索引会增加磁盘 I/O 操作，降低查询效率。\",\"非聚簇索引会增加数据碎片，降低数据的存储效率。\",\"非聚簇索引的数据存储是无序的，可能会导致数据存储不连续，增加了数据的存储空间。\",\"覆盖索引\",\"由于非聚簇索引和数据是分开存储的，意味着在使用索引搜索到数据后还需要回表查询数据，这样会增加一次 I/O 操作。为了减少 I/O 操作，可以使用覆盖索引。覆盖索引是指查询的字段都在索引中，不需要回表查询数据。\"]},\"260\":{\"h\":\"按字段个数划分\"},\"261\":{\"h\":\"单列索引\",\"t\":[\"CREATE INDEX 索引名 ON 表名 (字段名); \"]},\"262\":{\"h\":\"组合索引\",\"t\":[\"CREATE INDEX 索引名 ON 表名 (字段名1, 字段名2, ...); \"]},\"263\":{\"h\":\"创建索引原则\",\"t\":[\"最左前缀原则\",\"MySQL 索引使用最左前缀原则，即在查询时只能使用索引的最左前缀列。例如，如果创建了一个组合索引 (a, b, c)，那么查询时可以使用 (a)、(a, b)、(a, b, c) 三种索引，但不能使用 (b, c)、(c) 等索引。\",\"注意\",\"最左匹配原则在遇到 >=、<=、between、like 前缀匹配 时可以触发索引，但是如果遇到 > 和 < 则不会触发索引查询。\",\"选择唯一性索引\",\"在选择索引时，应该优先选择唯一性索引，因为唯一性索引可以保证数据的唯一性，避免数据重复。\",\"选择区分度高的索引\",\"在选择索引时，应该选择区分度高的索引，区分度高的索引可以减少扫描的数据量，提高查询效率。\",\"选择索引列\",\"在选择索引列时，应该选择查询频繁的列，避免选择不常用的列，提高索引的利用率。\",\"推荐选择的字段\",\"频繁查询的字段\",\"频繁排序的字段\",\"不为 NULL 的字段\",\"经常用来 JOIN 的字段\",\"尽量使用前缀索引\",\"如果索引字段的长度较长，可以使用前缀索引，前缀索引可以减少索引的存储空间，提高索引的查询效率。\",\"尽量扩展索引而不是新建索引\",\"如果我们已经有一个 a 索引， 如果我们需要一个 a,b 索引，那么我们可以直接在 a索引上扩展 b 字段，而不是新建一个 a,b 索引。\",\"索引数量不要太多\",\"单表的索引数量不要太多，太多索引会增加数据的维护成本，降低数据写入效率。\"]},\"264\":{\"h\":\"索引下推\",\"t\":[\"索引下推（Index Condition Pushdown）是 MySQL 5.6 引入的一个优化特性，可以减少回表查询数据，提高查询效率，主要用于组合索引。\",\"工作原理\",\"在没有索引下推之前，如果我们有一个组合索引 (a, b)，查询条件是 a = 1 and b = 2，MySQL 会先使用索引 (a, b) 查询出所有 a = 1 的数据，然后再回表查询对应的完整数据行，接着再用 b = 2 的条件判断每一行是否满足条件，将满足条件的数据行返回。\",\"有了索引下推之后，MySQL 会先使用索引 (a, b) 查询出所有 a = 1 and b = 2 的数据，然后再回表查询对应的完整数据行，减少了回表查询的数据量，提高了查询效率。\"]},\"265\":{\"h\":\"索引的数据结构\"},\"266\":{\"h\":\"B 树\",\"t\":[\"B 树是一种多路平衡查找树，是一种常用的索引数据结构。\",\"B 树的特点：\",\"每个节点都包含多个子节点，每个节点的子节点个数范围是 [m/2, m]，其中 m 是 B 树的层数。\",\"所有叶子节点都在同一层。\",\"根节点至少有两个子节点，除非根节点是叶子节点\",\"有k个子节点的非叶子节点包含k-1个键值\",\"每个节点都包含索引和全部数据\",\"btree\"]},\"267\":{\"h\":\"B+ 树\",\"t\":[\"B+ 树是 B 树的一种变种，是一种常用的索引数据结构。和 B 树相比，B+ 树的叶子节点只包含索引，不包含数据，所有叶子节点都在同一层，叶子节点之间通过指针连接。由于节点只包含索引，在同样的块大小下，B+ 树可以存储更多的索引，减少了树的层数，提高了查询效率。由于叶子节点之间通过指针连接，可以支持范围查询，查询速度大大快于 B 树。\",\"B+ 树的特点：\",\"所有叶子节点都在同一层。\",\"非叶子节点只包含索引，不包含数据。\",\"叶子节点之间通过指针连接。\",\"叶子节点包含全部数据。\",\"同样数量的数据，B+ 树的高度比 B 树低。\",\"b+tree\",\"B树和B+树的区别\",\"B-树\",\"B+ 树\",\"数据指针和键\",\"所有内部节点和叶节点都包含数据指针和键\",\"只有叶节点包含数据指针和键，内部节点只包含键\",\"重复键\",\"没有重复的键\",\"存在重复的键，所有内部节点也存在于叶子中\",\"叶节点链接\",\"叶节点之间没有链接\",\"叶节点之间相互链接\",\"顺序访问\",\"节点的顺序访问是不可能的, 范围查询需要中序遍历\",\"所有节点都存在于叶子中，因此可以像链表一样进行顺序访问\",\"搜索速度\",\"搜索键的速度较慢\",\"搜索速度更快\",\"特定数量条目的高度\",\"对于特定数量的条目，B 树的高度较大\",\"对于相同数量的条目，B+ 树的高度小于 B-树\"]},\"268\":{\"h\":\"事务\"},\"269\":{\"h\":\"隔离级别\",\"t\":[\"名词解释\",\"术语\",\"定义\",\"脏读\",\"脏读指的是读到了其他事务未提交的数据，未提交意味着这些数据可能会回滚，也就是可能最终不会存到数据库中，也就是不存在的数据。读到了不一定最终存在的数据，这就是脏读。\",\"可重复读\",\"可重复读指的是在一个事务内，最开始读到的数据和事务结束前的任意时刻读到的同一批数据都是一致的。主要保证数据更新的准确。\",\"不可重复读\",\"对比可重复读，不可重复读指的是在同一事务内，不同的时刻读到的同一批数据可能是不一样的，可能会受到其他事务的影响，比如其他事务改了这批数据并提交了。不可重复读常在数据更新时出现。\",\"幻读\",\"假设事务A对某些行的内容作了更改，但是还未提交，此时事务B插入了与事务A更改前的记录相同的记录行，并且在事务A提交之前先提交了，而这时，在事务A中查询，会发现好像刚刚的更改对于某些数据未起作用，但其实是事务B刚插入进来的，让用户感觉很魔幻，感觉出现了幻觉，这就叫幻读。幻读常在数据插入时出现。\",\"隔离级别\",\"脏读\",\"不可重复读\",\"幻读\",\"描述\",\"READ-UNCOMMITTED\",\"√\",\"√\",\"√\",\"允许读取尚未提交的数据变更，意味着中间数据的变化也会被读取。未提交的数据还可能会回滚，导致读取到不存在的数据。\",\"READ-COMMITTED\",\"×\",\"√\",\"√\",\"允许读取并发事务已经提交的数据\",\"REPEATABLE-READ\",\"×\",\"×\",\"√\",\"对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改\",\"SERIALIZABLE\",\"×\",\"×\",\"×\",\"串行化，最高的隔离级别，所有事务按顺序执行互不干扰\",\"注意\",\"数据库的默认隔离级别是 REPEATABLE-READ，这不能避免幻读\",\"在 MySQL 中，主要通过 MVCC（多版本并发控制）来实现隔离级别，MVCC 是通过保存数据在某个时间点的快照来实现的，这样可以保证事务在执行过程中看到的数据是一致的。也可以通过使用 锁（Next-key lock） 来实现隔离级别， 但是锁会导致性能问题，所以 MySQL 选择了 MVCC。\"]},\"270\":{\"h\":\"基础\"},\"271\":{\"h\":\"指针\"},\"272\":{\"h\":\"什么是指针和指针变量?\",\"t\":[\"答案\",\"普通变量存储数据，而指针变量存储的是数据的地址。\",\"学习指针，主要有两个运算符号&和*。 \",\"&：地址运算符，从变量中取地址\",\"*：引用运算符，取地址中数据\",\"num := 99 fmt.Println(num) //输出: 99 ptr := &num fmt.Println(ptr) //输出: 例如：0xc000086020 tamp := *ptr fmt.Println(tamp) //输出: 99 \"]},\"273\":{\"h\":\"为什么使用指针？\",\"t\":[\"答案\",\"意义一：容易编码\",\"指针在数据结构中起着重要的作用。通过指针，我们可以创建复杂的数据结构，如链表、树和图。指针可在数据结构中轻松地访问和操作节点之间的关系，从而实现高效的数据存储和检索。\",\"指针可在函数之间传递数据的引用，而不是复制整个数据。这样可以节省内存空间，并提高程序的执行效率。通过传递指针，函数可以直接修改原始数据，而不需要返回值。\",\"意义二：节省内存\",\"指针可直接访问和修改内存中的数据，通过指针，我们可以在运行时动态地分配内存，以满足程序的需求，并在不需要时释放内存，避免内存泄漏。\",\"指针可在程序运行时动态地分配内存。通过动态内存分配，我们可以根据需要分配和释放内存，从而提高程序的灵活性和效率。\"]},\"274\":{\"h\":\"哪些对象可以获取地址，哪些不行？\",\"t\":[\"答案\",\"可以使用 & 获取内存地址的对象：\",\"变量\",\"指针\",\"数组，切片及其内部数据\",\"结构体指针\",\"Map\",\"不能寻址的对象:\",\"结构体\",\"常量\",\"字面量\",\"函数\",\"map 非指针元素\",\"数组字面量\"]},\"275\":{\"h\":\"字面量\"},\"276\":{\"h\":\"字面量是什么意思？\",\"t\":[\"答案\",\"下面这些基本类型赋值的文本，就是基本类型字面量。\",\"基本类型\",\"集合\",\"布尔类型\",\"bool\",\"字符串类\",\"string\",\"复数类型\",\"complex64complex128\",\"浮点类型\",\"float32float64\",\"整数类型\",\"int8uint8int16uint16int32uint32int64uint64intuintuintptr\",\"如\",\"s := \\\"hello world\\\" // \\\"hello world\\\" 就是字面量 n := 10 // 10 就是字面量 \",\"未命名常量是一种特殊的常量，它没有具体的名称。这种常量只有值，没有与之关联的变量名。 如下字符串都是字符串字面量，就是 未命名常量。\",\"\\\"hello，world\\\" \\\"123\\\" \"]},\"277\":{\"h\":\"什么是有类型常量和无类型常量？\",\"t\":[\"答案\",\"Golang 中，常量分为有类型常量和无类型常量。\",\"// 无类型常量 const A = 8 // 有类型常量 const colour string = \\\"red\\\" \",\"当无类型的常量被赋值给一个变量的时，无类型的常量会转化成对应的类型\",\"package main import \\\"fmt\\\" func main() { const A = 8 var t int16 = A fmt.Printf(\\\"%T \\\", t) }//输出： int16 \",\"或者进行显式的转换\",\"package main import \\\"fmt\\\" func main() { const A int8 = 8 var t int16 = int16(A) fmt.Printf(\\\"%T \\\", t) //输出： int16 } \",\"而有类型常量在赋值的时，类型不同会报错\",\"package main import \\\"fmt\\\" func main() { const A int8 = 8 var t int16 = A fmt.Printf(\\\"type: %T \\\\n\\\", t) //出错： cannot use A (type int8) as type int16 in assignment } \"]},\"278\":{\"h\":\"不同字面量可能同值吗？\",\"t\":[\"答案\",\"一个值可存在多种字面量表示，如下十进制的数值 21，可由三种字面量表示\",\"10进制\",\"8进制\",\"2进制\",\"16进制\",\"21\",\"0o25\",\"0b0001 0101\",\"0x15\",\"import \\\"fmt\\\" func main() { fmt.Println(21 == 0o25) fmt.Println(21 == 0x15 ) fmt.Println(21 == 0b0001 0101) }// 由运行结果得出他们相等 \"]},\"279\":{\"h\":\"字面量和变量的区别是什么？\",\"t\":[\"答案\",\"字面量，就是未命名的常量，跟常量一样，是不可寻址的。\",\"举例如下\",\"func run() string { return \\\"fast\\\" } func main() { fmt.Println(&run()) } \",\"./main.go:10:14: cannot take the address of run() \",\"若不用变量名承接，函数返回的一个字符串的文本值，也就是字符串字面量， 而这种字面量是不可寻址的，会出现错误。要用 & 寻址，须用变量名承接。\",\"而下面这样就没错\",\"func run() string { return \\\"fast\\\" } func main() { t := run() fmt.Println(&t) } \"]},\"280\":{\"h\":\"什么是组合字面量？\",\"t\":[\"答案\",\"组合字面量就是把对象的定义和初始化放在了一起，进一步说，组合字面量是为结构体、数组、切片和map构造值，并且每次都会创建新值。它们由字面量的类型后紧跟大括号及元素列表。每个元素前面可以选择性的带一个相关key。\",\"使用组合字面量会简单一些，而结构体、数组、切片和map的组合字面量方式如下。\",\"结构体用组合字面量方式来定义和初始化\",\"type man struct { nationality string height int } func main() { // 声明和属性赋值 su := man{ nationality: \\\"China\\\", height: 180, } } \",\"结构体用繁琐的常规方式如下\",\"type man struct { nationality string height int } func main() { // 声明对象 var su man // 属性赋值 su.nationality = \\\"China\\\" su.height = 180 } \",\"map用组合字面量方式的定义和初始化如下\",\"m := map[string]int { \\\"math\\\": 96, \\\"Chinese\\\": 90, } \",\"同样的，数组用组合字面量方式的定义和初始化可以如下\",\"colours := [3]string{\\\"black\\\", \\\"red\\\", \\\"white\\\"} \",\"切片的组合字面量方式如下\",\"s := []string{\\\"red\\\", \\\"black\\\"} //会自动补上切片的容量和长度 \"]},\"281\":{\"h\":\"其他\"},\"282\":{\"h\":\"Go 中的 和 有什么区别？\",\"t\":[\"答案\",\"在 Go 语言中，byte 和 rune 都是用于表示字符的类型，但它们之间有一些区别：\"]},\"283\":{\"h\":\"类型不同：\",\"t\":[\"byte ：字节，是 uint8 的别名类型\",\"rune ：字符，是 int32 的别名类型\"]},\"284\":{\"h\":\"存储的字符不同：\",\"t\":[\"//byte 用于表示 ASCII 码字符，只能存储 0-255 范围内的字符。 var a byte = 'Y' // ASCII 码字符 //rune 用于表示 Unicode 字符，可以存储任意 Unicode 字符。 var b rune = '酥' // Unicode 字符 \"]},\"285\":{\"h\":\"占用的字节大小不同：byte 占用1个字节，rune 占用4个字节。\",\"t\":[\"import \\\"unsafe\\\" var a byte = 'Y' var b rune = '酥' fmt.Printf(\\\"a 占用 %d 个字节数\\\\nb 占用 %d 个字节数\\\", unsafe.Sizeof(a), unsafe.Sizeof(b)) // 输出: a 占用 1 个字节数 b 占用 4 个字节数 \"]},\"286\":{\"h\":\"表示的字符范围不同：\",\"t\":[\"由于 byte 类型能表示的值是有限的，只有 2^8=256 个。所以想表示中文只能使用 rune 类型。\"]},\"287\":{\"h\":\"Golang中的深拷贝和浅拷贝是什么？\",\"t\":[\"答案\",\"什么是拷贝？\",\"拷贝最简单的一种形式如下\",\"a := 648 b := a //把a 拷贝给 b \",\"那什么是深拷贝和浅拷贝？\",\"深浅拷贝也和类型有关\",\"类型\",\"详情\",\"引用类型\",\"SliceMapChannelsInterfacesFunctions\",\"值类型\",\"StringArrayIntStructFloatBool\",\"两种类型拷贝效果不同，先说我们比较熟悉的值类型。如什么是拷贝提问里易知， 若是值类型的话，在每一次拷贝后都会新申请一块空间存储值，拷贝后的两个值类型独立不影响。\",\"以引用类型的切片(Slice)为例来讲讲深拷贝和浅拷贝\",\"类型\",\"例子\",\"深度拷贝\",\"copy(slice1, slice2)\",\"浅拷贝\",\"slice1 = slice2\",\"浅拷贝仅改变指针的指向，如下\",\"package main import \\\"fmt\\\" func main() { var slice1 = []int{7, 8, 9} var slice2 = make([]int, 3) //切片初始化 slice2 = slice1 //浅拷贝改变了slice2的指向 fmt.Println(slice1) slice2[0] = 648 // 改变slice2[0]，slice1[0]也改变 fmt.Println(slice2) fmt.Println(slice1) } \",\"输出结果如下\",\"[7 8 9] [648 8 9] [648 8 9] \",\"所以对于切片来说，浅拷贝改变了它的地址。\",\"而深拷贝会改变地址的内存内的数组值，如下\",\"package main import \\\"fmt\\\" func main() { var slice1 = []int{7, 8, 9} var slice2 = make([]int, 3) //切片初始化 copy(slice2, slice1) //深拷贝会改变地址的内存内的数组值 fmt.Println(slice2) slice2[0] = 648 // 改变slice2[0]，slice1[0]不变 fmt.Println(slice2) fmt.Println(slice1) } \",\"[7 8 9] [648 8 9] [7 8 9] \"]},\"288\":{\"h\":\"和 有什么区别？\",\"t\":[\"答案\",\"new 用于给任意的类型分配内存地址，并返回该类型的指针，且初始化值为零值。\",\"new 并不是很常用\",\"package main import \\\"fmt\\\" func main() { s := new(string) n := new(int) fmt.Println(s) // 0xc00008a030 fmt.Println(*s) // \\\"\\\" fmt.Println(n) // 0xc00000a0d8 fmt.Println(*n) // 0 } \",\"make 主要用于 slicesmapchannel 初始化\",\"package main import \\\"fmt\\\" func main() { m := make(map[string]int, 10) fmt.Println(m) // map[] } \"]},\"289\":{\"h\":\"数组和切片有什么区别？\",\"t\":[\"答案\",\"数组的长度是固定的，在创建的时候就已经确定，且不可改变。切片的长度是动态的，会根据添加的数据自动扩容。\",\"在函数参数传递时数据是值传递，切片是引用传递\",\"切片有容量 （capacity） 参数，数组没有\"]},\"290\":{\"h\":\"如果 同时添加数据， 会无限执行吗？\",\"t\":[\"答案\",\"不会，在执行 for range 的时候实际遍历的是变量的副本，所以改变遍历的变量是不会有影响的\",\"package main import \\\"fmt\\\" func main() { n := []int{1, 2, 3} for _, v := range n { n = append(n, v) } fmt.Println(n) // 结果： [1 2 3 1 2 3] } \"]},\"291\":{\"h\":\"多个 defer 的执行顺序是什么？\",\"t\":[\"答案\",\"执行的顺序类似堆栈，先进后出\",\"package main import \\\"fmt\\\" func main() { defer func() { fmt.Println(1) }() defer func() { fmt.Println(2) }() defer func() { fmt.Println(3) }() } // 结果： // 3 // 2 // 1 \"]},\"292\":{\"h\":\"什么是数据溢出？\",\"t\":[\"答案\",\"在使用数字类型时如果数据达到最大值，则接下来的数据将会溢出，如 uint 溢出后会从 0 开始， int 溢出后会变为负数。\",\"package main import ( \\\"fmt\\\" \\\"math\\\" ) func main() { var n int8 = math.MaxInt8 var m uint8 = math.MaxUint8 n += 2 m += 1 fmt.Println(n) // -127 fmt.Println(m) // 0 } \",\"如何避免？\",\"正数优先使用 uint, 范围更大\",\"添加判断代码判断是否溢出\"]},\"293\":{\"h\":\"函数参数使用值还是指针？\",\"t\":[\"答案\",\"值传递\",\"一般来说，对于常见的类型都可以使用值传递，值传递的优点是函数内对值的修改不会影响原始的变量，也不会出现并发问题。缺点是值传递会复制一份对应变量的副本，对内存占用会多一些，如果传入的结构体非常大，使用值传递就不太合适。\",\"指针和引用传递\",\"使用指针传递的好处是直接传递变量的地址，不需要额外的空间，缺点是并发操作时数据修改会影响到原始的数据。传入切片实际上就是传递切片的指针，避免重复拷贝，若传入数组则是值传递，会拷贝一份。\"]},\"294\":{\"h\":\"Map\"},\"295\":{\"h\":\"未初始化的 Map 可以读取 key 吗？\",\"t\":[\"答案\",\"可以的，未执行 make 初始化的 map 读取任何 key 都会返回当前类型的空值\",\"package main import \\\"fmt\\\" func main() { var m map[int]int fmt.Println(m[1]) } // 结果： // 0 \"]},\"296\":{\"h\":\"如果对未初始化的 Map 赋值会怎么样？\",\"t\":[\"答案\",\"会触发 panic 异常错误\",\"package main func main() { var m map[int]int m[1] = 1 } // 结果： // panic: assignment to entry in nil map \"]},\"297\":{\"h\":\"如果对未初始化的 Map 进行删除 key 的操作会发生什么？\",\"t\":[\"答案\",\"早期如果对未初始化的 map 进行 delete 操作会报 panic 错误， 现在的版本对于未初始化的 map 进行 delete 是不会报错的。\",\"package main func main() { var m map[int]int delete(m, 1) } // 结果： // \"]},\"298\":{\"h\":\"进阶\"},\"299\":{\"h\":\"使用过 吗？ 有哪些使用场景？\",\"t\":[\"答案\",\"场景\",\"介绍\",\"超时处理\",\"通过使用 context 可以方便地设置超时时间，在超时后自动终止协程\",\"终止协程\",\"通过使用 cancel() 方法，协程可以很方便地终止\",\"传递数据\",\"我们可以将数据写入 context, 在不同协程间传递数据\"]},\"300\":{\"h\":\"channel 是线程安全的吗？\",\"t\":[\"答案\",\"channel 是线程安全的，原因是 channel 内部实现了锁的机制，\"]},\"301\":{\"h\":\"Map 使用 range 遍历时是有序还是无序的？\",\"t\":[\"答案\",\"无序的\",\"Map 在内部使用哈希算法放置元素，在自动扩容时又会重新计算哈希值，因此元素的地址会不断变化，官方为了避免用户认为 Map 元素排列是有序的，直接采用随机顺序返回，所以遍历是无序的。\"]},\"302\":{\"h\":\"Map 并发安全吗？\",\"t\":[\"答案\",\"Map不能保证并发安全\",\"要保证并发安全，使用以下方式：\",\"手动加读写锁\",\"使用 sync.Map\"]},\"303\":{\"h\":\"Map 的 key 删除后 key 的内存会被释放吗？\",\"t\":[\"答案\",\"若 map 的 value 为\",\"值类型 (intuintfloat32stringstruct{}...), 则 key 被删除后 value 不会被内存回收\",\"引用类型 (mapsliceschan ...), 则 key 被删除后 value 会被内存回收\",\"如果我们想强制回收，如何操作？\",\"将 map 设置为 nil\",\"将 map 需要保留的值放置到一个新的 map 并赋值给当前的 map\",\"会员专属\",\"代码实战解析\"]},\"304\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"305\":{\"h\":\"Standard\"},\"306\":{\"h\":\"Standard\"},\"307\":{\"h\":\"Golang\"},\"308\":{\"h\":\"Concepts\"},\"309\":{\"h\":\"Network\"},\"310\":{\"h\":\"Docker\"},\"311\":{\"h\":\"Devtools\"},\"312\":{\"h\":\"Git\"},\"313\":{\"h\":\"IDE\"},\"314\":{\"h\":\"HTTP\"},\"315\":{\"h\":\"Library\"},\"316\":{\"h\":\"Micro\"},\"317\":{\"h\":\"ORM\"},\"318\":{\"h\":\"Util\"},\"319\":{\"h\":\"Golang\"},\"320\":{\"h\":\"Concepts\"},\"321\":{\"h\":\"Network\"},\"322\":{\"h\":\"Docker\"},\"323\":{\"h\":\"Devtools\"},\"324\":{\"h\":\"Git\"},\"325\":{\"h\":\"IDE\"},\"326\":{\"h\":\"HTTP\"},\"327\":{\"h\":\"Library\"},\"328\":{\"h\":\"Micro\"},\"329\":{\"h\":\"ORM\"},\"330\":{\"h\":\"Util\"},\"331\":{\"h\":\"SQL\"},\"332\":{\"h\":\"Database\"},\"333\":{\"h\":\"Basic\"},\"334\":{\"h\":\"Golang\"},\"335\":{\"h\":\"Interview\"},\"336\":{\"h\":\"SQL\"},\"337\":{\"h\":\"Database\"},\"338\":{\"h\":\"Basic\"},\"339\":{\"h\":\"Golang\"},\"340\":{\"h\":\"Interview\"}},\"dirtCount\":0,\"index\":[[\"元素排列是有序的\",{\"1\":{\"301\":1}}],[\"官方为了避免用户认为\",{\"1\":{\"301\":1}}],[\"场景\",{\"1\":{\"299\":1}}],[\"早期如果对未初始化的\",{\"1\":{\"297\":1}}],[\"异常错误\",{\"1\":{\"296\":1}}],[\"赋值会怎么样\",{\"0\":{\"296\":1}}],[\"赋值运算符\",{\"0\":{\"88\":1}}],[\"吗\",{\"0\":{\"295\":1,\"299\":1}}],[\"传递数据\",{\"1\":{\"299\":1}}],[\"传入切片实际上就是传递切片的指针\",{\"1\":{\"293\":1}}],[\"传输速度\",{\"1\":{\"162\":1}}],[\"传输控制协议\",{\"1\":{\"146\":1}}],[\"传输的数据内容\",{\"1\":{\"140\":1}}],[\"传输有地址的顿以及错误检测功能\",{\"1\":{\"129\":1}}],[\"传输层需要关注的协议有tcp协议和udp协议\",{\"1\":{\"128\":1}}],[\"传输层\",{\"1\":{\"128\":1,\"129\":3}}],[\"正数优先使用\",{\"1\":{\"292\":1}}],[\"溢出后会变为负数\",{\"1\":{\"292\":1}}],[\"溢出后会从\",{\"1\":{\"292\":1}}],[\"先进后出\",{\"1\":{\"291\":1}}],[\"先说我们比较熟悉的值类型\",{\"1\":{\"287\":1}}],[\"参数\",{\"1\":{\"289\":1}}],[\"参考模型中的一种无连接的传输层协议\",{\"1\":{\"159\":1}}],[\"改变slice2\",{\"1\":{\"287\":2}}],[\"浅拷贝改变了它的地址\",{\"1\":{\"287\":1}}],[\"浅拷贝改变了slice2的指向\",{\"1\":{\"287\":1}}],[\"浅拷贝仅改变指针的指向\",{\"1\":{\"287\":1}}],[\"浅拷贝\",{\"1\":{\"287\":1}}],[\"深拷贝会改变地址的内存内的数组值\",{\"1\":{\"287\":1}}],[\"深度拷贝\",{\"1\":{\"287\":1}}],[\"深浅拷贝也和类型有关\",{\"1\":{\"287\":1}}],[\"两种类型拷贝效果不同\",{\"1\":{\"287\":1}}],[\"那什么是深拷贝和浅拷贝\",{\"1\":{\"287\":1}}],[\"那么我们可以直接在\",{\"1\":{\"263\":1}}],[\"那么查询时可以使用\",{\"1\":{\"263\":1}}],[\"那么即使其账户或者密码等个人信息被盗取\",{\"1\":{\"136\":1}}],[\"拷贝后的两个值类型独立不影响\",{\"1\":{\"287\":1}}],[\"拷贝给\",{\"1\":{\"287\":1}}],[\"拷贝最简单的一种形式如下\",{\"1\":{\"287\":1}}],[\"把a\",{\"1\":{\"287\":1}}],[\"酥\",{\"1\":{\"284\":1,\"285\":1}}],[\"码字符\",{\"1\":{\"284\":2}}],[\"属性赋值\",{\"1\":{\"280\":1}}],[\"属于服务器端的错误码\",{\"1\":{\"132\":1}}],[\"须用变量名承接\",{\"1\":{\"279\":1}}],[\"寻址\",{\"1\":{\"279\":1}}],[\"举例如下\",{\"1\":{\"279\":1}}],[\"跟常量一样\",{\"1\":{\"279\":1}}],[\"出错\",{\"1\":{\"277\":1}}],[\"浮点类型\",{\"1\":{\"276\":1}}],[\"浮点数就是包含小数点的数字\",{\"1\":{\"73\":1}}],[\"浮点数\",{\"0\":{\"73\":1}}],[\"哪些不行\",{\"0\":{\"274\":1}}],[\"哪些对象可以获取地址\",{\"0\":{\"274\":1}}],[\"意义二\",{\"1\":{\"273\":1}}],[\"意义一\",{\"1\":{\"273\":1}}],[\"意味着中间数据的变化也会被读取\",{\"1\":{\"269\":1}}],[\"意味着在使用索引搜索到数据后还需要回表查询数据\",{\"1\":{\"259\":1}}],[\"意味着\",{\"1\":{\"139\":1}}],[\"输出结果如下\",{\"1\":{\"287\":1}}],[\"输出\",{\"1\":{\"272\":3,\"277\":2,\"285\":1}}],[\"输出值\",{\"1\":{\"79\":1,\"98\":1}}],[\"引用类型\",{\"1\":{\"287\":1,\"303\":1}}],[\"引用运算符\",{\"1\":{\"272\":1}}],[\"引入的一个优化特性\",{\"1\":{\"264\":1}}],[\"学习指针\",{\"1\":{\"272\":1}}],[\"学习成本较高\",{\"1\":{\"200\":1}}],[\"学习成本\",{\"1\":{\"200\":1,\"210\":1}}],[\"学习成本低\",{\"1\":{\"196\":1}}],[\"答案\",{\"1\":{\"272\":1,\"273\":1,\"274\":1,\"276\":1,\"277\":1,\"278\":1,\"279\":1,\"280\":1,\"282\":1,\"287\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":1,\"295\":1,\"296\":1,\"297\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1}}],[\"锁\",{\"1\":{\"269\":1}}],[\"锁等\",{\"1\":{\"225\":1}}],[\"串行化\",{\"1\":{\"269\":1}}],[\"允许读取并发事务已经提交的数据\",{\"1\":{\"269\":1}}],[\"允许读取尚未提交的数据变更\",{\"1\":{\"269\":1}}],[\"×\",{\"1\":{\"269\":6}}],[\"√\",{\"1\":{\"269\":6}}],[\"感觉出现了幻觉\",{\"1\":{\"269\":1}}],[\"脏读指的是读到了其他事务未提交的数据\",{\"1\":{\"269\":1}}],[\"脏读\",{\"1\":{\"269\":2}}],[\"术语\",{\"1\":{\"269\":1}}],[\"隔离级别\",{\"0\":{\"269\":1},\"1\":{\"269\":1}}],[\"搜索键的速度较慢\",{\"1\":{\"267\":1}}],[\"搜索速度更快\",{\"1\":{\"267\":1}}],[\"搜索速度\",{\"1\":{\"267\":1}}],[\"节省内存\",{\"1\":{\"273\":1}}],[\"节点的顺序访问是不可能的\",{\"1\":{\"267\":1}}],[\"节约\",{\"1\":{\"177\":1}}],[\"顺序访问\",{\"1\":{\"267\":1}}],[\"叶节点之间相互链接\",{\"1\":{\"267\":1}}],[\"叶节点之间没有链接\",{\"1\":{\"267\":1}}],[\"叶节点链接\",{\"1\":{\"267\":1}}],[\"叶子节点包含全部数据\",{\"1\":{\"267\":1}}],[\"叶子节点之间通过指针连接\",{\"1\":{\"267\":2}}],[\"树和图\",{\"1\":{\"273\":1}}],[\"树低\",{\"1\":{\"267\":1}}],[\"树可以存储更多的索引\",{\"1\":{\"267\":1}}],[\"树相比\",{\"1\":{\"267\":1}}],[\"树是\",{\"1\":{\"267\":1}}],[\"树是一种多路平衡查找树\",{\"1\":{\"266\":1}}],[\"树的高度小于\",{\"1\":{\"267\":1}}],[\"树的高度较大\",{\"1\":{\"267\":1}}],[\"树的高度比\",{\"1\":{\"267\":1}}],[\"树的叶子节点只包含索引\",{\"1\":{\"267\":1}}],[\"树的一种变种\",{\"1\":{\"267\":1}}],[\"树的层数\",{\"1\":{\"266\":1}}],[\"树的特点\",{\"1\":{\"266\":1,\"267\":1}}],[\"树\",{\"0\":{\"266\":1,\"267\":1},\"1\":{\"267\":4}}],[\"太多索引会增加数据的维护成本\",{\"1\":{\"263\":1}}],[\"太多函数可以调用\",{\"1\":{\"40\":1}}],[\"前缀索引可以减少索引的存储空间\",{\"1\":{\"263\":1}}],[\"前缀匹配\",{\"1\":{\"263\":1}}],[\"经常用来\",{\"1\":{\"263\":1}}],[\"频繁排序的字段\",{\"1\":{\"263\":1}}],[\"频繁查询的字段\",{\"1\":{\"263\":1}}],[\"三种索引\",{\"1\":{\"263\":1}}],[\"三次握手的目的就是使客户端\",{\"1\":{\"149\":1}}],[\"三次握手过程\",{\"1\":{\"149\":1}}],[\"三次握手\",{\"0\":{\"149\":1}}],[\"覆盖索引是指查询的字段都在索引中\",{\"1\":{\"259\":1}}],[\"覆盖索引\",{\"1\":{\"259\":1}}],[\"增加了数据的存储空间\",{\"1\":{\"258\":1,\"259\":1}}],[\"增加最大半连接数允许服务器处理大量传入的\",{\"1\":{\"163\":1}}],[\"增加最大半连接数\",{\"1\":{\"163\":1}}],[\"插入数据时不会导致数据存储不连续\",{\"1\":{\"259\":1}}],[\"插入\",{\"1\":{\"258\":1,\"259\":1}}],[\"插件和工具相对较少\",{\"1\":{\"205\":1}}],[\"插件\",{\"1\":{\"192\":1}}],[\"插件可以帮助你高亮\",{\"1\":{\"188\":1}}],[\"聚集索引是按照数据存放的物理位置为顺序的\",{\"1\":{\"251\":1}}],[\"聚簇索引的数据存储是有序的\",{\"1\":{\"258\":1}}],[\"聚簇索引的维护代价较高\",{\"1\":{\"258\":1}}],[\"聚簇索引的索引和数据存储在一起\",{\"1\":{\"258\":1}}],[\"聚簇索引可以减少数据碎片\",{\"1\":{\"258\":1}}],[\"聚簇索引可以减少磁盘\",{\"1\":{\"258\":1}}],[\"聚簇索引优缺点\",{\"1\":{\"258\":1}}],[\"聚簇索引\",{\"0\":{\"258\":1},\"1\":{\"251\":1}}],[\"物理划分\",{\"1\":{\"251\":1}}],[\"物理层定义了物理设备的标准\",{\"1\":{\"128\":1}}],[\"物理层\",{\"1\":{\"128\":1,\"129\":2}}],[\"列才能被索引\",{\"1\":{\"251\":1}}],[\"唯一索引\",{\"0\":{\"254\":1},\"1\":{\"251\":1}}],[\"唯一键可以为空\",{\"1\":{\"228\":1}}],[\"逻辑功能划分\",{\"1\":{\"251\":1}}],[\"逻辑运算符\",{\"0\":{\"86\":1}}],[\"消耗\",{\"1\":{\"250\":2}}],[\"消息\",{\"1\":{\"173\":1}}],[\"降低查询效率\",{\"1\":{\"259\":1}}],[\"降低数据写入效率\",{\"1\":{\"263\":1}}],[\"降低数据的存储效率\",{\"1\":{\"259\":1}}],[\"降低数据的写入和更新速度\",{\"1\":{\"250\":1}}],[\"降低数据库的\",{\"1\":{\"250\":1}}],[\"降低\",{\"1\":{\"250\":1}}],[\"降低传输效率\",{\"1\":{\"152\":1}}],[\"平均值\",{\"1\":{\"249\":1}}],[\"按字段个数划分\",{\"0\":{\"260\":1}}],[\"按物理划分\",{\"0\":{\"257\":1}}],[\"按逻辑功能划分\",{\"0\":{\"252\":1}}],[\"按\",{\"1\":{\"249\":2}}],[\"按位进行异或运算\",{\"1\":{\"87\":1}}],[\"按位进行或运算\",{\"1\":{\"87\":1}}],[\"按位进行与运算\",{\"1\":{\"87\":1}}],[\"求和\",{\"1\":{\"249\":1}}],[\"求平方根等\",{\"1\":{\"225\":1}}],[\"统计所有行包括空行\",{\"1\":{\"249\":1}}],[\"统计条数\",{\"1\":{\"249\":1}}],[\"备注\",{\"1\":{\"249\":1}}],[\"做额外查询\",{\"1\":{\"247\":1}}],[\"名词解释\",{\"1\":{\"269\":1}}],[\"名字以\",{\"1\":{\"245\":1}}],[\"名称\",{\"1\":{\"132\":1,\"173\":1}}],[\"姓名为\",{\"1\":{\"246\":1}}],[\"姓名以\",{\"1\":{\"245\":1}}],[\"姓名等于\",{\"1\":{\"245\":1}}],[\"年龄不为\",{\"1\":{\"246\":1}}],[\"年龄为\",{\"1\":{\"245\":1,\"246\":1}}],[\"年龄在\",{\"1\":{\"245\":1}}],[\"年龄大于\",{\"1\":{\"245\":1}}],[\"符合模式定义的数据\",{\"1\":{\"245\":1}}],[\"符号优先级\",{\"0\":{\"90\":1}}],[\"符号\",{\"1\":{\"24\":1}}],[\"小于等于\",{\"1\":{\"245\":1}}],[\"小于\",{\"1\":{\"245\":1}}],[\"小写\",{\"1\":{\"188\":1}}],[\"条件\",{\"0\":{\"245\":1}}],[\"条件的列\",{\"1\":{\"237\":1}}],[\"行数据\",{\"1\":{\"244\":2}}],[\"行开始\",{\"1\":{\"244\":1}}],[\"排序\",{\"0\":{\"243\":1}}],[\"子句只会返回满足\",{\"1\":{\"237\":1}}],[\"子查询\",{\"1\":{\"217\":1}}],[\"右连接\",{\"0\":{\"236\":1}}],[\"右移\",{\"1\":{\"87\":1}}],[\"示例表\",{\"1\":{\"230\":2}}],[\"z=\",{\"1\":{\"229\":1}}],[\"zeromicro\",{\"1\":{\"202\":1}}],[\"zero\",{\"0\":{\"199\":1,\"201\":1},\"1\":{\"200\":14,\"201\":2,\"202\":1}}],[\"笛卡尔积\",{\"1\":{\"229\":2}}],[\"任何和主键和身份证的组合都为超键\",{\"1\":{\"228\":1}}],[\"候选键中删除任意字段都不属于超键\",{\"1\":{\"228\":1}}],[\"候选键是不包含多余字段的超键\",{\"1\":{\"228\":1}}],[\"候选键是超键的子集\",{\"1\":{\"228\":1}}],[\"候选键\",{\"1\":{\"228\":2}}],[\"超键是能唯一标识数据列的所有属性集\",{\"1\":{\"228\":1}}],[\"超键\",{\"1\":{\"228\":2}}],[\"超时处理\",{\"1\":{\"299\":1}}],[\"超时重传的缺点是周期较长\",{\"1\":{\"152\":1}}],[\"超时重传机制下\",{\"1\":{\"152\":1}}],[\"超时重传有两种情况\",{\"1\":{\"152\":1}}],[\"超时重传\",{\"1\":{\"150\":1,\"152\":1}}],[\"超时会发生什么\",{\"1\":{\"149\":1,\"163\":1}}],[\"超时管理\",{\"1\":{\"119\":1}}],[\"冒泡排序\",{\"1\":{\"226\":1}}],[\"冒号十六进制表示法\",{\"1\":{\"143\":1}}],[\"手机号等\",{\"1\":{\"225\":1}}],[\"手动加读写锁\",{\"1\":{\"302\":1}}],[\"手动\",{\"1\":{\"143\":1}}],[\"手动或\",{\"1\":{\"143\":1}}],[\"替换等\",{\"1\":{\"225\":1}}],[\"截取\",{\"1\":{\"225\":1}}],[\"截断字符串等\",{\"1\":{\"225\":1}}],[\"链表等\",{\"1\":{\"225\":1}}],[\"链接丢失\",{\"1\":{\"178\":1}}],[\"队列\",{\"1\":{\"225\":1}}],[\"队头阻塞\",{\"1\":{\"135\":1}}],[\"读到了不一定最终存在的数据\",{\"1\":{\"269\":1}}],[\"读写分离\",{\"1\":{\"217\":1}}],[\"读取任何\",{\"1\":{\"295\":1}}],[\"读取\",{\"1\":{\"114\":1}}],[\"读取已关闭的\",{\"1\":{\"114\":1}}],[\"约束\",{\"1\":{\"217\":1}}],[\"索引的数据结构\",{\"0\":{\"265\":1}}],[\"索引的顺序和数据的物理存储顺序不一致\",{\"1\":{\"259\":1}}],[\"索引的顺序和数据的物理存储顺序一致\",{\"1\":{\"258\":1}}],[\"索引的顺序\",{\"1\":{\"251\":1}}],[\"索引下推\",{\"0\":{\"264\":1},\"1\":{\"264\":1}}],[\"索引数量不要太多\",{\"1\":{\"263\":1}}],[\"索引使用最左前缀原则\",{\"1\":{\"263\":1}}],[\"索引和数据分别存在两个\",{\"1\":{\"259\":1}}],[\"索引和数据都存在同一个\",{\"1\":{\"258\":1}}],[\"索引名\",{\"1\":{\"253\":1,\"254\":1,\"256\":1,\"261\":1,\"262\":1}}],[\"索引列的值必须唯一\",{\"1\":{\"251\":1}}],[\"索引类型\",{\"0\":{\"251\":1},\"1\":{\"251\":1}}],[\"索引是关系数据库中对某一列或多个列的值进行预排序的数据结构\",{\"1\":{\"250\":1}}],[\"索引\",{\"0\":{\"250\":1},\"1\":{\"217\":1,\"263\":3}}],[\"命名参数\",{\"1\":{\"217\":1}}],[\"命令主要用于限制返回结果\",{\"1\":{\"239\":1}}],[\"命令\",{\"0\":{\"182\":1},\"1\":{\"182\":1,\"184\":1,\"188\":1}}],[\"构建器\",{\"1\":{\"217\":1}}],[\"批量插入\",{\"1\":{\"217\":1}}],[\"预编译模式\",{\"1\":{\"217\":1}}],[\"预加载\",{\"1\":{\"217\":2}}],[\"嵌套事务\",{\"1\":{\"217\":1}}],[\"嵌入式类型优缺点\",{\"1\":{\"16\":1}}],[\"模式\",{\"1\":{\"217\":1}}],[\"模型关联等\",{\"1\":{\"217\":2}}],[\"模板轻松扩展和自定义\",{\"1\":{\"210\":1}}],[\"模板路由器再通过\",{\"1\":{\"172\":1}}],[\"事务\",{\"0\":{\"268\":1},\"1\":{\"217\":3}}],[\"库\",{\"1\":{\"217\":1}}],[\"更新空值也比较麻烦\",{\"1\":{\"217\":1}}],[\"更新数据时只需要维护索引\",{\"1\":{\"259\":1}}],[\"更新数据时需要维护索引\",{\"1\":{\"258\":1}}],[\"更新数据\",{\"0\":{\"213\":1,\"220\":1}}],[\"更多分片\",{\"1\":{\"140\":1,\"141\":1}}],[\"图遍历\",{\"1\":{\"210\":1}}],[\"图中的\",{\"1\":{\"157\":1}}],[\"灵活的可扩展插件\",{\"1\":{\"217\":1}}],[\"灵活\",{\"1\":{\"210\":1,\"217\":1}}],[\"非指针元素\",{\"1\":{\"274\":1}}],[\"非叶子节点只包含索引\",{\"1\":{\"267\":1}}],[\"非聚簇索引会增加数据碎片\",{\"1\":{\"259\":1}}],[\"非聚簇索引会增加磁盘\",{\"1\":{\"259\":1}}],[\"非聚簇索引查询效率较低\",{\"1\":{\"259\":1}}],[\"非聚簇索引的数据存储是无序的\",{\"1\":{\"259\":2}}],[\"非聚簇索引的维护代价较低\",{\"1\":{\"259\":1}}],[\"非聚簇索引的索引和数据存储在不同的地方\",{\"1\":{\"259\":1}}],[\"非聚簇索引优缺点\",{\"1\":{\"259\":1}}],[\"非聚簇索引是按照逻辑顺序\",{\"1\":{\"251\":1}}],[\"非聚簇索引\",{\"0\":{\"259\":1},\"1\":{\"251\":1}}],[\"非常受欢迎\",{\"1\":{\"217\":1}}],[\"非常简单\",{\"1\":{\"210\":1}}],[\"非授权信息\",{\"1\":{\"132\":1}}],[\"易用\",{\"1\":{\"217\":1}}],[\"易扩展\",{\"1\":{\"210\":1}}],[\"易于维护\",{\"1\":{\"181\":1}}],[\"编写数据库查询和图遍历变得简单\",{\"1\":{\"210\":1}}],[\"编译器会自己推断\",{\"1\":{\"51\":1}}],[\"安装\",{\"0\":{\"202\":1,\"207\":1}}],[\"安全\",{\"1\":{\"181\":1}}],[\"安全性选项\",{\"1\":{\"140\":1}}],[\"安全性\",{\"1\":{\"133\":1,\"143\":1}}],[\"社区相对小\",{\"1\":{\"200\":1,\"205\":1}}],[\"社区活跃\",{\"1\":{\"181\":1,\"200\":1}}],[\"依赖较多\",{\"1\":{\"200\":2}}],[\"依次处理错误\",{\"0\":{\"32\":1}}],[\"集成了很多工程实践\",{\"1\":{\"200\":2}}],[\"集成了各种工程实践\",{\"1\":{\"200\":1,\"205\":1}}],[\"集合\",{\"0\":{\"97\":1},\"1\":{\"276\":1}}],[\"文档完善\",{\"1\":{\"205\":1}}],[\"文档不够完善\",{\"1\":{\"200\":1}}],[\"文档生成等功能\",{\"1\":{\"200\":2,\"201\":1,\"205\":2,\"206\":1}}],[\"文档\",{\"1\":{\"196\":1}}],[\"文件中\",{\"1\":{\"258\":1,\"259\":1}}],[\"文件中是否有配置以及系统中是否有该域名的缓存信息\",{\"1\":{\"166\":1}}],[\"文件操作的工具函数\",{\"1\":{\"225\":1}}],[\"文件\",{\"1\":{\"189\":1}}],[\"文件服务\",{\"1\":{\"129\":1}}],[\"文件传输\",{\"1\":{\"129\":1}}],[\"上有\",{\"1\":{\"196\":1}}],[\"被删除后\",{\"1\":{\"303\":2}}],[\"被广泛应用于生产环境中\",{\"1\":{\"196\":1}}],[\"被分片的报文除了最后一个分片以外其他分片的\",{\"1\":{\"140\":1}}],[\"框架功能丰富\",{\"1\":{\"196\":1}}],[\"框架\",{\"1\":{\"196\":3}}],[\"框架等内容\",{\"1\":{\"1\":1}}],[\"跳过无需调试的代码\",{\"1\":{\"194\":1}}],[\"跳到\",{\"1\":{\"66\":1}}],[\"控制内部控制台的显示方式\",{\"1\":{\"194\":1}}],[\"控制是否启用源代码映射\",{\"1\":{\"194\":1}}],[\"程序运行的工作目录\",{\"1\":{\"194\":1}}],[\"程序参数\",{\"1\":{\"194\":1}}],[\"程序入口文件\",{\"1\":{\"194\":1}}],[\"程序的参数等\",{\"1\":{\"193\":1}}],[\"程序的入口文件\",{\"1\":{\"193\":1}}],[\"$\",{\"1\":{\"194\":11}}],[\"显示执行到的代码\",{\"1\":{\"193\":1}}],[\"显式拥塞通告\",{\"1\":{\"140\":1}}],[\"调试模式\",{\"1\":{\"194\":1}}],[\"调试器类型\",{\"1\":{\"194\":1}}],[\"调试目标文件等\",{\"1\":{\"193\":1}}],[\"调试参数配置\",{\"1\":{\"193\":1}}],[\"调整分片偏移量\",{\"1\":{\"141\":1}}],[\"比如其他事务改了这批数据并提交了\",{\"1\":{\"269\":1}}],[\"比如\",{\"1\":{\"194\":2}}],[\"比如调试器的类型\",{\"1\":{\"193\":1}}],[\"比如是否在有效期内\",{\"1\":{\"134\":1}}],[\"括号提示插件\",{\"1\":{\"192\":1}}],[\"点击下载\",{\"1\":{\"191\":1}}],[\"点击灯泡出现\",{\"1\":{\"189\":1}}],[\"点击\",{\"1\":{\"189\":1}}],[\"点分十进制表示法\",{\"1\":{\"143\":1}}],[\"驼峰等\",{\"1\":{\"188\":1}}],[\"撤销代码\",{\"1\":{\"184\":1}}],[\"回退上一个版本\",{\"1\":{\"184\":1}}],[\"回退指定\",{\"1\":{\"184\":1}}],[\"回退版本\",{\"1\":{\"184\":1}}],[\"回显服务器收到的请求\",{\"1\":{\"131\":1}}],[\"拉取代码\",{\"1\":{\"184\":1}}],[\"拉取镜像\",{\"1\":{\"182\":1}}],[\"强制推送\",{\"1\":{\"184\":2}}],[\"推出的\",{\"1\":{\"187\":1}}],[\"推送代码\",{\"1\":{\"184\":1}}],[\"推荐选择的字段\",{\"1\":{\"263\":1}}],[\"推荐插件\",{\"0\":{\"188\":1,\"192\":1}}],[\"推荐\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"16\":1,\"17\":1,\"19\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"32\":3,\"33\":1,\"35\":1,\"36\":1,\"39\":1,\"41\":1}}],[\"暂存代码\",{\"1\":{\"184\":1}}],[\"暂时无法响应服务器\",{\"1\":{\"132\":1}}],[\"克隆代码\",{\"1\":{\"184\":1}}],[\"克隆切片\",{\"0\":{\"109\":1}}],[\"熟练掌握\",{\"1\":{\"183\":1}}],[\"启动容器\",{\"1\":{\"182\":1}}],[\"启用ip数据报在传输路径上记录途经的路由器的ip地址\",{\"1\":{\"140\":1}}],[\"镜像id\",{\"1\":{\"182\":1}}],[\"镜像名称\",{\"1\":{\"182\":2}}],[\"镜像\",{\"1\":{\"182\":1}}],[\"持续集成\",{\"1\":{\"181\":1}}],[\"持有者的公钥\",{\"1\":{\"137\":1}}],[\"高效可靠\",{\"1\":{\"200\":1,\"205\":1}}],[\"高效\",{\"1\":{\"200\":2,\"205\":2}}],[\"高效利用系统资源\",{\"1\":{\"181\":1}}],[\"高位补\",{\"1\":{\"87\":1}}],[\"测试\",{\"1\":{\"181\":1}}],[\"测试环境\",{\"1\":{\"180\":1,\"181\":1}}],[\"系统相关的函数\",{\"1\":{\"225\":1}}],[\"系统库等\",{\"1\":{\"180\":1}}],[\"系统工具\",{\"1\":{\"180\":1}}],[\"打包在一个文件系统中\",{\"1\":{\"180\":1}}],[\"与数据在磁盘上的存储无关\",{\"1\":{\"251\":1}}],[\"与普通索引类似\",{\"1\":{\"251\":1}}],[\"与函数相关的工具函数\",{\"1\":{\"225\":1}}],[\"与虚拟机相似\",{\"1\":{\"180\":1}}],[\"与服务器建立隧道\",{\"1\":{\"131\":1}}],[\"容易编码\",{\"1\":{\"273\":1}}],[\"容器id\",{\"1\":{\"182\":6}}],[\"容器\",{\"1\":{\"182\":1}}],[\"容器是独立于平台的\",{\"1\":{\"180\":1}}],[\"容器是完全使用沙箱机制\",{\"1\":{\"180\":1}}],[\"容器就是将应用程序及其依赖\",{\"1\":{\"180\":1}}],[\"容量为\",{\"1\":{\"107\":1}}],[\"机器上\",{\"1\":{\"180\":1}}],[\"语法\",{\"1\":{\"188\":1}}],[\"语言中\",{\"1\":{\"282\":1}}],[\"语言编写的工具库\",{\"1\":{\"224\":1}}],[\"语言编写的微服务框架\",{\"1\":{\"205\":1}}],[\"语言编写的\",{\"1\":{\"196\":1}}],[\"语言插件\",{\"1\":{\"192\":1}}],[\"语言\",{\"1\":{\"187\":1}}],[\"语言并遵从\",{\"1\":{\"180\":1}}],[\"语句中使用相同的变量名\",{\"1\":{\"18\":1}}],[\"语句中声明\",{\"1\":{\"18\":1}}],[\"语句块\",{\"1\":{\"18\":1}}],[\"性能优秀\",{\"1\":{\"200\":1}}],[\"性能优化\",{\"0\":{\"45\":1}}],[\"性能\",{\"1\":{\"196\":1,\"210\":1,\"217\":1}}],[\"性能损耗\",{\"1\":{\"178\":1}}],[\"外连接\",{\"0\":{\"234\":1}}],[\"外键用于建立表之间的关系\",{\"1\":{\"228\":1}}],[\"外键\",{\"1\":{\"228\":2}}],[\"外部服务器无法直接访问内网设备\",{\"1\":{\"178\":1}}],[\"外定义格式化字符串\",{\"1\":{\"26\":1}}],[\"外定义\",{\"0\":{\"26\":1}}],[\"能提高多行检索的速度\",{\"1\":{\"251\":1}}],[\"能提高内网主机的安全性\",{\"1\":{\"177\":1}}],[\"能让数据及时传送\",{\"1\":{\"128\":1}}],[\"内连接\",{\"0\":{\"233\":1},\"1\":{\"233\":1}}],[\"内存占用低\",{\"1\":{\"196\":1,\"200\":1}}],[\"内存占用低的特点\",{\"1\":{\"196\":1}}],[\"内部实现了锁的机制\",{\"1\":{\"300\":1}}],[\"内部节点只包含键\",{\"1\":{\"267\":1}}],[\"内部屏蔽\",{\"1\":{\"178\":1}}],[\"内部属性全部是其对应0值\",{\"1\":{\"82\":1}}],[\"内网安全\",{\"1\":{\"177\":1}}],[\"转换表有性能损耗\",{\"1\":{\"178\":1}}],[\"转换过程\",{\"1\":{\"176\":1}}],[\"转换为\",{\"1\":{\"176\":1}}],[\"又称为直积\",{\"1\":{\"229\":1}}],[\"又称为硬件地址\",{\"1\":{\"170\":1}}],[\"又需要将目标地址转换为内网地址\",{\"1\":{\"176\":1}}],[\"家用路由器拥有一个广域网的\",{\"1\":{\"175\":1}}],[\"免费\",{\"1\":{\"173\":1}}],[\"恶意修改网络设备的\",{\"1\":{\"173\":1}}],[\"反柯里化等\",{\"1\":{\"225\":1}}],[\"反向地址解析协议主要用于通过设备的\",{\"1\":{\"172\":1}}],[\"反向地址解析协议\",{\"1\":{\"172\":1}}],[\"反之若条件为\",{\"1\":{\"86\":1}}],[\"路由器维护\",{\"1\":{\"178\":1}}],[\"路由器会根据转换表中的记录将请求目标地址转换为\",{\"1\":{\"176\":1}}],[\"路由器会保存该映射到\",{\"1\":{\"176\":1}}],[\"路由器会将来源\",{\"1\":{\"176\":1}}],[\"路由器再通过代理地址解析协议转发数据到目标设备\",{\"1\":{\"172\":1}}],[\"路由器发送数据到目标路由器\",{\"1\":{\"172\":1}}],[\"路由器转发数据前通过\",{\"1\":{\"172\":1}}],[\"路由器等\",{\"1\":{\"170\":1}}],[\"步骤如下\",{\"1\":{\"172\":1}}],[\"存储的字符不同\",{\"0\":{\"284\":1}}],[\"存储的\",{\"1\":{\"251\":1}}],[\"存活时间\",{\"1\":{\"172\":1}}],[\"存在重复的键\",{\"1\":{\"267\":1}}],[\"存在\",{\"0\":{\"248\":1},\"1\":{\"135\":2}}],[\"格式化字符串的函数\",{\"1\":{\"225\":1}}],[\"格式化符号\",{\"1\":{\"30\":1}}],[\"格式化符号来包装错误\",{\"1\":{\"30\":1}}],[\"格式为\",{\"1\":{\"172\":1}}],[\"该字段为\",{\"1\":{\"171\":1}}],[\"该字段为广播地址\",{\"1\":{\"171\":1}}],[\"该字段的值与以太网帧头中的以太网源\",{\"1\":{\"171\":1}}],[\"该字段的值为\",{\"1\":{\"171\":1}}],[\"该字段的值在以太网中为\",{\"1\":{\"171\":1}}],[\"该字段的值在\",{\"1\":{\"171\":3}}],[\"该报文数据区使用的协议\",{\"1\":{\"140\":1}}],[\"硬件地址类型\",{\"1\":{\"171\":1}}],[\"硬件地址长度\",{\"1\":{\"171\":3}}],[\"硬件类型\",{\"1\":{\"171\":2}}],[\"帧类型\",{\"1\":{\"171\":2}}],[\"管理并保证不重复\",{\"1\":{\"170\":1}}],[\"管理\",{\"1\":{\"170\":1}}],[\"媒体访问控制地址\",{\"1\":{\"170\":1}}],[\"随机子域攻击\",{\"1\":{\"168\":1}}],[\"域锁定攻击\",{\"1\":{\"168\":1}}],[\"域服务器\",{\"1\":{\"168\":1}}],[\"域名服务器\",{\"1\":{\"167\":1}}],[\"域名系统\",{\"1\":{\"165\":1}}],[\"幻读常在数据插入时出现\",{\"1\":{\"269\":1}}],[\"幻读\",{\"1\":{\"269\":2}}],[\"幻影\",{\"1\":{\"168\":1}}],[\"幻域攻击\",{\"1\":{\"168\":1}}],[\"试图导致合法流量的拒绝服务的攻击\",{\"1\":{\"168\":1}}],[\"劫持\",{\"1\":{\"168\":1}}],[\"查询速度大大快于\",{\"1\":{\"267\":1}}],[\"查询出所有\",{\"1\":{\"264\":2}}],[\"查询到索引后还需要再次查询数据\",{\"1\":{\"259\":1}}],[\"查询到索引就找到了数据\",{\"1\":{\"258\":1}}],[\"查询对应年龄用户的数量\",{\"1\":{\"247\":1}}],[\"查询条件是\",{\"1\":{\"264\":1}}],[\"查询条件\",{\"1\":{\"237\":1}}],[\"查询id为1的user\",{\"1\":{\"221\":1}}],[\"查询数据\",{\"0\":{\"214\":1,\"221\":1}}],[\"查询\",{\"0\":{\"238\":1},\"1\":{\"168\":1}}],[\"查询和响应建立隧道的攻击\",{\"1\":{\"168\":1}}],[\"查看远程仓库地址\",{\"1\":{\"184\":1}}],[\"查看差异\",{\"1\":{\"184\":1}}],[\"查看提交记录\",{\"1\":{\"184\":1}}],[\"查看状态\",{\"1\":{\"184\":1}}],[\"查看所有远程分支\",{\"1\":{\"184\":1}}],[\"查看所有本地分支\",{\"1\":{\"184\":1}}],[\"查看容器日志\",{\"1\":{\"182\":1}}],[\"查看\",{\"1\":{\"182\":4}}],[\"查看本地\",{\"1\":{\"166\":1}}],[\"查看其它地址与301类似\",{\"1\":{\"132\":1}}],[\"隧道\",{\"1\":{\"168\":1}}],[\"邮件交换服务器\",{\"1\":{\"167\":1}}],[\"别名的权威名称\",{\"1\":{\"167\":1}}],[\"权威域名\",{\"1\":{\"166\":1}}],[\"顶级域名服务器查询\",{\"1\":{\"166\":1}}],[\"顶层变量声明\",{\"0\":{\"14\":1}}],[\"运行容器\",{\"1\":{\"182\":1}}],[\"运行时\",{\"1\":{\"180\":1}}],[\"运营商通常会缓存一部分\",{\"1\":{\"166\":1}}],[\"运算符\",{\"0\":{\"83\":1},\"1\":{\"88\":1,\"89\":1,\"90\":1,\"245\":1}}],[\"计算时间差等\",{\"1\":{\"225\":1}}],[\"计算机会检查\",{\"1\":{\"166\":1}}],[\"计算包括证书颁发者信息\",{\"1\":{\"137\":1}}],[\"首先会执行\",{\"1\":{\"237\":1}}],[\"首先要了解笛卡尔积\",{\"1\":{\"229\":1}}],[\"首先要安装命令行工具\",{\"1\":{\"201\":1,\"206\":1}}],[\"首先查看浏览器缓存\",{\"1\":{\"166\":1}}],[\"首部\",{\"1\":{\"141\":1}}],[\"首部校验和\",{\"1\":{\"140\":1}}],[\"首部与数据部分合起来的总字节数\",{\"1\":{\"140\":1}}],[\"首部的大小\",{\"1\":{\"140\":1}}],[\"首部的版本号\",{\"1\":{\"140\":1}}],[\"首部长度\",{\"1\":{\"140\":1,\"141\":1,\"162\":1}}],[\"缓存将数据发送给目标子网的主机\",{\"1\":{\"172\":1}}],[\"缓存表中不存在\",{\"1\":{\"172\":1}}],[\"缓存表中存在\",{\"1\":{\"172\":1}}],[\"缓存表中存储了\",{\"1\":{\"172\":1}}],[\"缓存表\",{\"1\":{\"172\":1}}],[\"缓存中毒\",{\"1\":{\"168\":1}}],[\"缓存中查询\",{\"1\":{\"166\":1}}],[\"缓存\",{\"1\":{\"166\":2}}],[\"利用容器共享主机内核\",{\"1\":{\"181\":1}}],[\"利用请求淹没\",{\"1\":{\"168\":1}}],[\"利用基于云的\",{\"1\":{\"163\":1}}],[\"利用签名哈希算法\",{\"1\":{\"137\":1}}],[\"混合方法\",{\"1\":{\"163\":1}}],[\"洪水攻击的重要策略\",{\"1\":{\"163\":1}}],[\"限制返回数量\",{\"0\":{\"244\":1}}],[\"限制\",{\"1\":{\"173\":2}}],[\"限制传入连接请求的速率是防止\",{\"1\":{\"163\":1}}],[\"限制单行长度\",{\"0\":{\"4\":1}}],[\"速率限制\",{\"1\":{\"163\":1}}],[\"速度快\",{\"1\":{\"160\":1,\"196\":1,\"200\":1}}],[\"速度\",{\"1\":{\"133\":1}}],[\"蜜网通过收集攻击者策略的数据来提供威胁情报\",{\"1\":{\"163\":1}}],[\"蜜罐吸收和转移攻击\",{\"1\":{\"163\":1}}],[\"蜜罐和蜜网\",{\"1\":{\"163\":1}}],[\"部署麻烦\",{\"1\":{\"181\":1}}],[\"部署防火墙和代理可以在恶意流量到达目标服务器之前过滤掉恶意流量\",{\"1\":{\"163\":1}}],[\"部分内容服务器成功处理了部分get请求\",{\"1\":{\"132\":1}}],[\"部分测试函数可以使用下划线分隔单词\",{\"1\":{\"10\":1}}],[\"负载均衡\",{\"1\":{\"177\":1}}],[\"负载均衡器\",{\"1\":{\"163\":1}}],[\"负责在网络中的两节点之间建立\",{\"1\":{\"128\":1}}],[\"从变量中取地址\",{\"1\":{\"272\":1}}],[\"从而提高程序的灵活性和效率\",{\"1\":{\"273\":1}}],[\"从而提供针对泛洪尝试的缓冲区\",{\"1\":{\"163\":1}}],[\"从而实现高效的数据存储和检索\",{\"1\":{\"273\":1}}],[\"从而避免用户的消息传到不正确的网关\",{\"1\":{\"173\":1}}],[\"从而防止被恶意修改\",{\"1\":{\"173\":1}}],[\"从而造成通信异常\",{\"1\":{\"173\":1}}],[\"从而减少设备负荷\",{\"1\":{\"173\":1}}],[\"从高到低为\",{\"1\":{\"90\":1}}],[\"防护解决方案可以将流量卸载并过滤到能够处理大规模攻击的专用平台\",{\"1\":{\"163\":1}}],[\"防火墙和代理\",{\"1\":{\"163\":1}}],[\"防御措施\",{\"1\":{\"163\":1}}],[\"防止被第三方获取\",{\"1\":{\"133\":1}}],[\"半连接\",{\"1\":{\"163\":1}}],[\"入站网络流量增加\",{\"1\":{\"163\":1}}],[\"维护成本低\",{\"1\":{\"181\":1}}],[\"维护一个半连接状态\",{\"1\":{\"163\":1}}],[\"维持和终止通信\",{\"1\":{\"128\":1}}],[\"响应时间来缓解\",{\"1\":{\"163\":1}}],[\"响应时才分配资源\",{\"1\":{\"163\":1}}],[\"响应的时间\",{\"1\":{\"163\":1}}],[\"响应\",{\"1\":{\"163\":2}}],[\"攻击方式\",{\"0\":{\"173\":1},\"1\":{\"173\":1}}],[\"攻击类型\",{\"1\":{\"168\":1}}],[\"攻击的分层防御\",{\"1\":{\"163\":1}}],[\"攻击的原理非常简单\",{\"1\":{\"163\":1}}],[\"攻击者通过发送伪造的\",{\"1\":{\"173\":1}}],[\"攻击者通过使用工具扫描网段主机或者跨网段扫描时会向设备发送大量目标\",{\"1\":{\"173\":1}}],[\"攻击者通过伪造大量\",{\"1\":{\"173\":1}}],[\"攻击者只需要使用多个主机向服务器发送大量半连接请求\",{\"1\":{\"163\":1}}],[\"攻击者可以向服务器发送大量\",{\"1\":{\"144\":1}}],[\"攻击\",{\"0\":{\"163\":1,\"168\":1},\"1\":{\"163\":3,\"168\":2}}],[\"轻量级\",{\"1\":{\"162\":1,\"181\":1,\"196\":1}}],[\"面向连接\",{\"1\":{\"162\":1}}],[\"面试题\",{\"1\":{\"1\":1}}],[\"广播仅用于局域网\",{\"1\":{\"162\":1}}],[\"广播风暴\",{\"1\":{\"162\":1}}],[\"广播禁止在internet宽带网上传输\",{\"1\":{\"162\":1}}],[\"广播\",{\"1\":{\"162\":1}}],[\"广播类型\",{\"0\":{\"162\":1}}],[\"检测数据在传输过程中是否丢失或修改\",{\"1\":{\"161\":1}}],[\"检验和\",{\"1\":{\"161\":1}}],[\"检查对应端口是否有程序正在监听\",{\"1\":{\"163\":1}}],[\"检查左边是否小于等于右边\",{\"1\":{\"85\":1}}],[\"检查左边是否小于右边\",{\"1\":{\"85\":1}}],[\"检查左边是否大于等于右边\",{\"1\":{\"85\":1}}],[\"检查左边是否大于右边\",{\"1\":{\"85\":1}}],[\"检查两数是否不相等\",{\"1\":{\"85\":1}}],[\"检查两数是否相等\",{\"1\":{\"85\":1}}],[\"仅当收到合法的\",{\"1\":{\"163\":1}}],[\"仅有首部\",{\"1\":{\"161\":1}}],[\"仅定义别名\",{\"1\":{\"55\":1}}],[\"许多互联网电话服务使用的ip语音\",{\"1\":{\"160\":1}}],[\"特定数量条目的高度\",{\"1\":{\"267\":1}}],[\"特点\",{\"0\":{\"160\":1}}],[\"特性\",{\"1\":{\"133\":1,\"135\":1,\"143\":1,\"162\":1}}],[\"全文索引用于全文搜索\",{\"1\":{\"251\":1}}],[\"全文索引\",{\"0\":{\"256\":1},\"1\":{\"251\":1}}],[\"全外连接\",{\"0\":{\"237\":1}}],[\"全功能\",{\"1\":{\"217\":1}}],[\"全局地址\",{\"1\":{\"170\":1}}],[\"全称用户数据报协议\",{\"1\":{\"159\":1}}],[\"全部小写\",{\"1\":{\"9\":1}}],[\"还会对数据计算校验和\",{\"1\":{\"158\":1}}],[\"还可以存放时间戳数据\",{\"1\":{\"147\":1}}],[\"还可以使用\",{\"1\":{\"115\":1}}],[\"号为快恢复阶段\",{\"1\":{\"157\":1}}],[\"此时事务b插入了与事务a更改前的记录相同的记录行\",{\"1\":{\"269\":1}}],[\"此时\",{\"1\":{\"156\":1}}],[\"此层的数据称为数据包\",{\"1\":{\"128\":1}}],[\"达到\",{\"1\":{\"156\":1}}],[\"都会返回当前类型的空值\",{\"1\":{\"295\":1}}],[\"都会翻倍\",{\"1\":{\"155\":1}}],[\"都是用于表示字符的类型\",{\"1\":{\"282\":1}}],[\"都带有\",{\"1\":{\"64\":1}}],[\"快速更新依赖\",{\"0\":{\"189\":1}}],[\"快速执行\",{\"1\":{\"188\":1}}],[\"快速扩展\",{\"1\":{\"181\":1}}],[\"快速停止\",{\"1\":{\"181\":1}}],[\"快速启动\",{\"1\":{\"181\":1}}],[\"快速交付\",{\"1\":{\"181\":1}}],[\"快速重传\",{\"1\":{\"152\":1}}],[\"快\",{\"1\":{\"162\":1}}],[\"快恢复算法\",{\"1\":{\"157\":1}}],[\"快恢复算法需要配合快重传算法使用\",{\"1\":{\"157\":1}}],[\"快恢复\",{\"1\":{\"154\":1}}],[\"快重传在前面已介绍过\",{\"1\":{\"157\":1}}],[\"快重传\",{\"1\":{\"154\":1}}],[\"拥塞窗口\",{\"1\":{\"154\":1}}],[\"拥塞避免\",{\"1\":{\"154\":1}}],[\"拥塞控制\",{\"1\":{\"150\":1,\"154\":1}}],[\"慢开始门限\",{\"1\":{\"154\":1}}],[\"慢开始\",{\"1\":{\"154\":1}}],[\"丢失的问题\",{\"1\":{\"152\":1}}],[\"报文后不允许修改\",{\"1\":{\"173\":1}}],[\"报文限速类似\",{\"1\":{\"173\":1}}],[\"报文数量\",{\"1\":{\"173\":1}}],[\"报文使得\",{\"1\":{\"173\":1}}],[\"报文\",{\"0\":{\"171\":1},\"1\":{\"173\":2}}],[\"报文段\",{\"1\":{\"152\":2}}],[\"报文中的对应字段需要进行修改\",{\"1\":{\"141\":1}}],[\"报文中\",{\"1\":{\"141\":1}}],[\"告知发送端缺少的报文段\",{\"1\":{\"152\":1}}],[\"告诉发送方已接收到报文段\",{\"1\":{\"152\":1}}],[\"告诉我们\",{\"1\":{\"42\":1}}],[\"告诉\",{\"1\":{\"42\":1}}],[\"加密和解密相关的函数\",{\"1\":{\"225\":1}}],[\"加密数据确保数据安全\",{\"1\":{\"137\":1}}],[\"加剧网络的拥堵\",{\"1\":{\"152\":1}}],[\"过滤\",{\"1\":{\"163\":1}}],[\"过短则可能会导致频繁重传\",{\"1\":{\"152\":1}}],[\"过长则重传时间会大大延长\",{\"1\":{\"152\":1}}],[\"延迟和拥塞等问题\",{\"1\":{\"152\":1}}],[\"流量控制和拥塞控制\",{\"1\":{\"162\":1}}],[\"流量控制\",{\"1\":{\"150\":1}}],[\"流程控制\",{\"0\":{\"62\":1},\"1\":{\"49\":1}}],[\"才会断开连接\",{\"1\":{\"149\":1}}],[\"间隔时间从\",{\"1\":{\"149\":1}}],[\"次\",{\"1\":{\"149\":1}}],[\"假如客户端发送\",{\"1\":{\"149\":1}}],[\"假设事务a对某些行的内容作了更改\",{\"1\":{\"269\":1}}],[\"假设有两张表\",{\"1\":{\"228\":1}}],[\"假设局域网中存在以下设备\",{\"1\":{\"172\":1}}],[\"假设\",{\"1\":{\"87\":1}}],[\"就是未命名的常量\",{\"1\":{\"279\":1}}],[\"就是\",{\"1\":{\"276\":1}}],[\"就是字面量\",{\"1\":{\"276\":2}}],[\"就是基本类型字面量\",{\"1\":{\"276\":1}}],[\"就是同步序列号\",{\"1\":{\"149\":1}}],[\"就会将\",{\"1\":{\"156\":1}}],[\"就可以确定之前传递的数据包已经被正确接收\",{\"1\":{\"147\":1}}],[\"建立连接的过程就是同步序列号的过程\",{\"1\":{\"149\":1}}],[\"建议\",{\"1\":{\"16\":1,\"17\":2}}],[\"建议使用\",{\"0\":{\"26\":1},\"1\":{\"6\":1,\"25\":1,\"26\":1}}],[\"详情\",{\"1\":{\"149\":3,\"152\":3,\"175\":1,\"287\":1}}],[\"向\",{\"1\":{\"172\":1}}],[\"向合法站点的不存在的子域发送\",{\"1\":{\"168\":1}}],[\"向服务器发送数据包时\",{\"1\":{\"176\":1}}],[\"向服务器发送\",{\"1\":{\"149\":1}}],[\"向主机进程提供通用的数据传输服务\",{\"1\":{\"128\":1}}],[\"表名\",{\"1\":{\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":4,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"261\":1,\"262\":1}}],[\"表连接示意图\",{\"0\":{\"230\":1}}],[\"表连接是通过条件对两表之间的笛卡尔积进行筛选后的结果\",{\"1\":{\"229\":1}}],[\"表连接\",{\"0\":{\"229\":1}}],[\"表为例\",{\"1\":{\"228\":2}}],[\"表的主键字段就是外键\",{\"1\":{\"228\":1}}],[\"表的主键是\",{\"1\":{\"228\":1}}],[\"表的字段\",{\"1\":{\"228\":1}}],[\"表达式\",{\"1\":{\"217\":1}}],[\"表中的\",{\"1\":{\"173\":1,\"228\":1}}],[\"表项\",{\"1\":{\"173\":2}}],[\"表动态表项的数目\",{\"1\":{\"173\":1}}],[\"表无法新增条目从而使正常通信无法进行\",{\"1\":{\"173\":1}}],[\"表有大小限制\",{\"1\":{\"173\":1}}],[\"表明收到了上一个包\",{\"1\":{\"149\":1}}],[\"表示的字符范围不同\",{\"0\":{\"286\":1}}],[\"表示的是\",{\"1\":{\"140\":1}}],[\"表示任意单个字符\",{\"1\":{\"245\":1}}],[\"表示任意个字符串\",{\"1\":{\"245\":1}}],[\"表示任意类型\",{\"1\":{\"49\":1}}],[\"表示第\",{\"1\":{\"244\":2}}],[\"表示连接到已经运行的程序\",{\"1\":{\"194\":1}}],[\"表示启动调试器\",{\"1\":{\"194\":1}}],[\"表示头部长度是20字节\",{\"1\":{\"147\":1}}],[\"表示tcp头部的长度\",{\"1\":{\"147\":1}}],[\"表示接收端的\",{\"1\":{\"140\":1}}],[\"表示发送端的\",{\"1\":{\"140\":1}}],[\"表示发送数据到该\",{\"1\":{\"113\":1}}],[\"表示包被分片的相关信息\",{\"1\":{\"140\":1}}],[\"表示\",{\"1\":{\"140\":1}}],[\"表示不能及时地从远程服务器获得应答\",{\"1\":{\"132\":1}}],[\"表示服务器自身工作正常\",{\"1\":{\"132\":1}}],[\"表示服务器已经接受了请求\",{\"1\":{\"132\":1}}],[\"表示服务器成功处理请求\",{\"1\":{\"132\":1}}],[\"表示服务器成功接收到请求并创建了对应的资源\",{\"1\":{\"132\":1}}],[\"表示服务器成功返回了数据\",{\"1\":{\"132\":1}}],[\"表示客户端可以继续提交请求\",{\"1\":{\"132\":1}}],[\"表示请求成功\",{\"1\":{\"132\":1}}],[\"表示请求已经被成功接收\",{\"1\":{\"132\":1}}],[\"表示请求以接收\",{\"1\":{\"132\":1}}],[\"表示层\",{\"1\":{\"128\":1,\"129\":1}}],[\"表示这是原生字符串\",{\"1\":{\"19\":1}}],[\"四次挥手\",{\"0\":{\"149\":1},\"1\":{\"149\":1}}],[\"四层模型\",{\"1\":{\"129\":1}}],[\"紧急数据指针\",{\"1\":{\"147\":1}}],[\"紧急数据的最后一个字节由紧急数据指针指出\",{\"1\":{\"147\":1}}],[\"校验和覆盖了整个tcp报文段\",{\"1\":{\"147\":1}}],[\"校验和\",{\"1\":{\"147\":1,\"150\":1}}],[\"代理地址解析协议主要用于共用路由器\",{\"1\":{\"172\":1}}],[\"代理地址解析协议\",{\"1\":{\"172\":1}}],[\"代表该数据包为紧急数据包\",{\"1\":{\"147\":1}}],[\"代码实战解析\",{\"1\":{\"303\":1}}],[\"代码跳转等功能\",{\"1\":{\"192\":1}}],[\"代码格式化\",{\"1\":{\"192\":1}}],[\"代码转换\",{\"1\":{\"129\":1}}],[\"代码\",{\"1\":{\"32\":1,\"210\":1}}],[\"代码简洁\",{\"1\":{\"16\":1}}],[\"代码应该有限处理错误或者特殊情况并且尽早返回\",{\"1\":{\"12\":1}}],[\"代码行长度限制为\",{\"1\":{\"4\":1}}],[\"确保在一种方法失败时其他人仍然可以提供保护\",{\"1\":{\"163\":1}}],[\"确保没有任何一台服务器会首当其冲地受到攻击\",{\"1\":{\"163\":1}}],[\"确保数据在传输过程中未丢失或出现错误\",{\"1\":{\"158\":1}}],[\"确保双方身份正确\",{\"1\":{\"137\":1}}],[\"确认号\",{\"1\":{\"147\":1}}],[\"简单\",{\"1\":{\"196\":1,\"210\":1}}],[\"简单易用\",{\"1\":{\"196\":2,\"200\":1,\"205\":1}}],[\"简单互联网协议\",{\"1\":{\"140\":1}}],[\"简称ack\",{\"1\":{\"147\":1}}],[\"简称为seq\",{\"1\":{\"147\":1}}],[\"序列号和确认应答\",{\"1\":{\"150\":1}}],[\"序列号就会加1\",{\"1\":{\"149\":1}}],[\"序列号字段的值是本报文段发送的数据的第一个字节的序列号\",{\"1\":{\"147\":1}}],[\"序列号\",{\"1\":{\"147\":1}}],[\"源\",{\"1\":{\"171\":4}}],[\"源协议地址\",{\"1\":{\"171\":1}}],[\"源硬件地址\",{\"1\":{\"171\":1}}],[\"源以太网地址\",{\"1\":{\"171\":1}}],[\"源端口号\",{\"1\":{\"161\":1}}],[\"源端口\",{\"1\":{\"147\":1,\"161\":1}}],[\"源地址\",{\"1\":{\"140\":1}}],[\"窃取数据\",{\"1\":{\"144\":1}}],[\"使得图遍历变得非常简单\",{\"1\":{\"210\":1}}],[\"使得构建复杂查询变得简单\",{\"1\":{\"210\":1}}],[\"使得扩展\",{\"1\":{\"210\":1}}],[\"使得调试程序简单灵活\",{\"1\":{\"193\":1}}],[\"使得开发\",{\"1\":{\"181\":1}}],[\"使得发送端可以根据接收端的接收能力控制发送数据的速度\",{\"1\":{\"153\":1}}],[\"使得发送方可以仅传输缺失的数据包而不需要额外重传其他数据包\",{\"1\":{\"152\":1}}],[\"使得服务器和主机的连接断开\",{\"1\":{\"144\":1}}],[\"使接收端可以重新组合tcp数据\",{\"1\":{\"147\":1}}],[\"使用以下方式\",{\"1\":{\"302\":1}}],[\"使用过\",{\"0\":{\"299\":1}}],[\"使用指针传递的好处是直接传递变量的地址\",{\"1\":{\"293\":1}}],[\"使用值传递就不太合适\",{\"1\":{\"293\":1}}],[\"使用组合字面量会简单一些\",{\"1\":{\"280\":1}}],[\"使用沙箱机制\",{\"1\":{\"181\":1}}],[\"使用单播告诉\",{\"1\":{\"172\":1}}],[\"使用受损的\",{\"1\":{\"168\":1}}],[\"使用其他协议通过\",{\"1\":{\"168\":1}}],[\"使用其公开的标识符\",{\"1\":{\"53\":1}}],[\"使用户能够通过域名访问目标地址而不需要记住ip地址\",{\"1\":{\"165\":1}}],[\"使用慢开始与拥塞避免算法任意一个\",{\"1\":{\"154\":1}}],[\"使用慢开始算法\",{\"1\":{\"154\":1}}],[\"使用拥塞避免算法\",{\"1\":{\"154\":1}}],[\"使用滑动窗口来控制流量\",{\"1\":{\"153\":1}}],[\"使用者可以信任并使用该证书中的信息\",{\"1\":{\"137\":1}}],[\"使用者使用获取到的颁发者的公钥解密数字签名\",{\"1\":{\"137\":1}}],[\"使用者使用数字证书中的指纹算法重新计算数字证书相关内容\",{\"1\":{\"137\":1}}],[\"使用者通过某种方式\",{\"1\":{\"137\":1}}],[\"使用对称密钥加密请求的明文内容b\",{\"1\":{\"134\":1}}],[\"使用get请求重定向\",{\"1\":{\"132\":1}}],[\"使用get和post请求查看\",{\"1\":{\"132\":1}}],[\"使用代理\",{\"1\":{\"132\":1}}],[\"使用括号\",{\"1\":{\"56\":1}}],[\"使用方法\",{\"1\":{\"53\":1}}],[\"使用可插入的钩子函数如\",{\"1\":{\"38\":1}}],[\"使用驼峰命名法\",{\"1\":{\"31\":1}}],[\"使用字段名初始化结构\",{\"0\":{\"21\":1}}],[\"使用原生字符串而不是转义\",{\"0\":{\"19\":1}}],[\"使用\",{\"0\":{\"23\":1,\"25\":1,\"35\":1,\"40\":1,\"301\":1},\"1\":{\"17\":1,\"24\":1,\"25\":1,\"32\":1,\"43\":1,\"53\":1,\"64\":1,\"65\":1,\"79\":1,\"81\":1,\"93\":2,\"94\":3,\"95\":5,\"96\":3,\"98\":2,\"99\":4,\"102\":1,\"105\":1,\"107\":2,\"108\":1,\"113\":2,\"114\":1,\"117\":1,\"123\":1,\"126\":1,\"135\":1,\"152\":1,\"193\":1,\"210\":1,\"217\":1,\"237\":2,\"247\":1,\"249\":1,\"302\":1}}],[\"欺骗技术指的是伪造某台主机的\",{\"1\":{\"144\":1}}],[\"欺骗\",{\"0\":{\"144\":1},\"1\":{\"168\":1}}],[\"什么是数据溢出\",{\"0\":{\"292\":1}}],[\"什么是拷贝\",{\"1\":{\"287\":1}}],[\"什么是组合字面量\",{\"0\":{\"280\":1}}],[\"什么是有类型常量和无类型常量\",{\"0\":{\"277\":1}}],[\"什么是指针和指针变量\",{\"0\":{\"272\":1}}],[\"什么是容器\",{\"1\":{\"180\":1}}],[\"什么是反向地址解析协议和代理地址解析协议\",{\"1\":{\"172\":1}}],[\"什么是rto\",{\"1\":{\"152\":1}}],[\"什么是rtt\",{\"1\":{\"152\":1}}],[\"什么是\",{\"0\":{\"144\":1},\"1\":{\"163\":1}}],[\"什么时候要用\",{\"1\":{\"38\":1}}],[\"配置名称\",{\"1\":{\"194\":1}}],[\"配置数组\",{\"1\":{\"194\":1}}],[\"配置文件版本号\",{\"1\":{\"194\":1}}],[\"配置文件教程\",{\"0\":{\"193\":1}}],[\"配置字段\",{\"0\":{\"194\":1}}],[\"配置\",{\"1\":{\"143\":1}}],[\"配置容量\",{\"1\":{\"39\":1}}],[\"服务\",{\"0\":{\"198\":1}}],[\"服务端代码生成\",{\"1\":{\"200\":2,\"201\":1,\"205\":2,\"206\":1}}],[\"服务端发起自己的fin=1\",{\"1\":{\"149\":1}}],[\"服务端发送自己的syn段作为应答\",{\"1\":{\"149\":1}}],[\"服务端将x+2值加1作为ack序号值\",{\"1\":{\"149\":1}}],[\"服务质量\",{\"1\":{\"143\":1}}],[\"服务器返回数据的数据包目标地址为\",{\"1\":{\"176\":1}}],[\"服务器返回此状态码时\",{\"1\":{\"132\":1}}],[\"服务器收到请求\",{\"1\":{\"172\":1}}],[\"服务器查询\",{\"1\":{\"166\":1}}],[\"服务器\",{\"1\":{\"165\":1,\"168\":1}}],[\"服务器在接收到\",{\"1\":{\"163\":1}}],[\"服务器发回\",{\"1\":{\"163\":1}}],[\"服务器使用缓存来存储有关每个请求的较少信息\",{\"1\":{\"163\":1}}],[\"服务器无响应\",{\"1\":{\"163\":1}}],[\"服务器无法处理\",{\"1\":{\"132\":1}}],[\"服务器最终会导致资源耗尽\",{\"1\":{\"163\":1}}],[\"服务器模式的网络应用都需要使用udp协议\",{\"1\":{\"160\":1}}],[\"服务器会尝试重发\",{\"1\":{\"149\":1}}],[\"服务器推送\",{\"1\":{\"135\":1}}],[\"服务器不可用表示服务器当前很忙\",{\"1\":{\"132\":1}}],[\"服务器处理成功\",{\"1\":{\"132\":1}}],[\"固定\",{\"1\":{\"143\":2}}],[\"头部\",{\"1\":{\"147\":1,\"153\":1}}],[\"头部结构\",{\"0\":{\"147\":1}}],[\"头部长度\",{\"1\":{\"143\":1,\"147\":1}}],[\"头部压缩\",{\"1\":{\"135\":1}}],[\"一张表只能有一个主键\",{\"1\":{\"228\":1}}],[\"一致运行环境\",{\"1\":{\"181\":1}}],[\"一台主机一般只能运行几十台虚拟机\",{\"1\":{\"180\":1}}],[\"一定是由发送端计算和存储\",{\"1\":{\"147\":1}}],[\"一般来说\",{\"1\":{\"293\":1}}],[\"一般我们称第一个表为驱动表\",{\"1\":{\"232\":1}}],[\"一般网络设备的\",{\"1\":{\"173\":1}}],[\"一般情况下\",{\"1\":{\"152\":1}}],[\"一般用于握手阶段\",{\"1\":{\"147\":1}}],[\"一般使用较少\",{\"1\":{\"147\":1}}],[\"一旦收集齐就会组装起来提交给上传协议栈\",{\"1\":{\"142\":1}}],[\"一个值可存在多种字面量表示\",{\"1\":{\"278\":1}}],[\"一个表只能有一个主键\",{\"1\":{\"228\":1}}],[\"一个ip报文首部长度\",{\"1\":{\"141\":1}}],[\"一个\",{\"1\":{\"135\":1}}],[\"变小时会被再次切割\",{\"1\":{\"141\":1}}],[\"变量在\",{\"1\":{\"18\":1}}],[\"变量\",{\"1\":{\"5\":1,\"87\":1,\"274\":1}}],[\"否\",{\"1\":{\"141\":1,\"162\":1}}],[\"否则直接返回对应的\",{\"1\":{\"166\":1}}],[\"否则为\",{\"1\":{\"85\":6,\"86\":1}}],[\"否则会终止\",{\"1\":{\"43\":1}}],[\"否则会导致\",{\"1\":{\"33\":1}}],[\"否则不予合并\",{\"1\":{\"1\":1}}],[\"他将被分割成两个分片\",{\"1\":{\"141\":1}}],[\"总长\",{\"1\":{\"141\":2}}],[\"总长度\",{\"1\":{\"140\":1}}],[\"除了最后一片分片外\",{\"1\":{\"141\":1}}],[\"除非数据是被本身事务自己所修改\",{\"1\":{\"269\":1}}],[\"除非根节点是叶子节点\",{\"1\":{\"266\":1}}],[\"除非变量在其他地方也被调用\",{\"1\":{\"18\":1}}],[\"除非包名冲突\",{\"1\":{\"8\":1}}],[\"修改总长字段为此时分片的长度\",{\"1\":{\"141\":1}}],[\"减半\",{\"1\":{\"157\":1}}],[\"减去\",{\"1\":{\"141\":1}}],[\"减少重复造轮子\",{\"1\":{\"224\":1}}],[\"减少syn\",{\"1\":{\"163\":1}}],[\"减少了树的层数\",{\"1\":{\"267\":1}}],[\"减少了回表查询的数据量\",{\"1\":{\"264\":1}}],[\"减少了数据的存储空间\",{\"1\":{\"259\":1}}],[\"减少了\",{\"1\":{\"135\":1}}],[\"减少\",{\"1\":{\"39\":1}}],[\"减少变量作用域\",{\"0\":{\"18\":1}}],[\"减少不必要的\",{\"0\":{\"13\":1}}],[\"减少嵌套\",{\"0\":{\"12\":1}}],[\"严格源站选路\",{\"1\":{\"140\":1}}],[\"宽松源站选路\",{\"1\":{\"140\":1}}],[\"记录类型\",{\"0\":{\"167\":1},\"1\":{\"167\":1}}],[\"记录路由选项\",{\"1\":{\"140\":1}}],[\"记录错误并正常降级\",{\"1\":{\"32\":1}}],[\"记录错误并将其返回\",{\"1\":{\"32\":1}}],[\"身份证号\",{\"1\":{\"228\":1}}],[\"身份验证和访问控制\",{\"1\":{\"140\":1}}],[\"身份确定\",{\"1\":{\"137\":1}}],[\"禁止分片\",{\"1\":{\"140\":1}}],[\"禁止访问表示服务器禁止访问资源\",{\"1\":{\"132\":1}}],[\"必须掌握的常用命令\",{\"0\":{\"184\":1}}],[\"必须为0\",{\"1\":{\"140\":1}}],[\"必须有停止的方法\",{\"1\":{\"42\":1}}],[\"必须有一个可预测的停止时间\",{\"1\":{\"42\":1}}],[\"废弃\",{\"1\":{\"140\":6}}],[\"互联网流协议或\",{\"1\":{\"140\":2}}],[\"互联网协议版本\",{\"1\":{\"140\":2}}],[\"互联网协议\",{\"1\":{\"140\":2}}],[\"活跃\",{\"1\":{\"140\":2}}],[\"状态机\",{\"0\":{\"148\":1}}],[\"状态\",{\"1\":{\"140\":1}}],[\"状态码表示客户端请求报文正确\",{\"1\":{\"132\":1}}],[\"状态码表示客户端请求的资源发送了变动\",{\"1\":{\"132\":1}}],[\"状态码表示客户端发送的报文有误\",{\"1\":{\"132\":1}}],[\"状态码\",{\"0\":{\"132\":1},\"1\":{\"132\":1}}],[\"附加的信息\",{\"1\":{\"140\":1}}],[\"选项有哪些\",{\"1\":{\"140\":1}}],[\"选项\",{\"1\":{\"140\":1,\"147\":1}}],[\"选择了\",{\"1\":{\"269\":1}}],[\"选择索引列\",{\"1\":{\"263\":1}}],[\"选择区分度高的索引\",{\"1\":{\"263\":1}}],[\"选择唯一性索引\",{\"1\":{\"263\":1}}],[\"选择性确认\",{\"1\":{\"152\":1}}],[\"选择\",{\"0\":{\"239\":1},\"1\":{\"132\":1}}],[\"选择合适的路由和交换结点\",{\"1\":{\"128\":1}}],[\"目前只支持\",{\"1\":{\"194\":1}}],[\"目的端口\",{\"1\":{\"161\":1}}],[\"目的是更方便应用从网络中接收的数据\",{\"1\":{\"128\":1}}],[\"目标\",{\"1\":{\"171\":4}}],[\"目标协议地址\",{\"1\":{\"171\":1}}],[\"目标硬件地址\",{\"1\":{\"171\":1}}],[\"目标以太网地址\",{\"1\":{\"171\":1}}],[\"目标端口号\",{\"1\":{\"161\":1}}],[\"目标端口\",{\"1\":{\"147\":1}}],[\"目标地址\",{\"1\":{\"140\":1}}],[\"生态相对不完善\",{\"1\":{\"205\":1}}],[\"生态完善\",{\"1\":{\"200\":1}}],[\"生态丰富\",{\"1\":{\"181\":2}}],[\"生产环境一致\",{\"1\":{\"181\":2}}],[\"生产环境中运行\",{\"1\":{\"180\":1}}],[\"生存时间\",{\"1\":{\"140\":1}}],[\"生成随机数的函数\",{\"1\":{\"225\":1}}],[\"生成的代码比较多\",{\"1\":{\"210\":1}}],[\"生成的代码不使用反射\",{\"1\":{\"210\":1}}],[\"生成一个新的指纹β\",{\"1\":{\"137\":1}}],[\"生成证书摘要\",{\"1\":{\"137\":1}}],[\"片偏移\",{\"1\":{\"140\":1}}],[\"标志位的不同ip\",{\"1\":{\"144\":1}}],[\"标志位为\",{\"1\":{\"142\":1}}],[\"标志位被设置为\",{\"1\":{\"141\":1}}],[\"标志位都为\",{\"1\":{\"140\":1}}],[\"标志\",{\"1\":{\"140\":2}}],[\"标识\",{\"1\":{\"140\":1}}],[\"标准库\",{\"1\":{\"7\":2}}],[\"区分度高的索引可以减少扫描的数据量\",{\"1\":{\"263\":1}}],[\"区分服务\",{\"1\":{\"140\":1}}],[\"区别\",{\"1\":{\"135\":1,\"143\":1,\"162\":1}}],[\"最高的隔离级别\",{\"1\":{\"269\":1}}],[\"最开始读到的数据和事务结束前的任意时刻读到的同一批数据都是一致的\",{\"1\":{\"269\":1}}],[\"最左匹配原则在遇到\",{\"1\":{\"263\":1}}],[\"最左前缀原则\",{\"1\":{\"263\":1}}],[\"最小值\",{\"1\":{\"249\":1}}],[\"最小值为5\",{\"1\":{\"140\":1}}],[\"最后再部署到生产环境\",{\"1\":{\"181\":1}}],[\"最终请求来源地址为\",{\"1\":{\"176\":1}}],[\"最大值\",{\"1\":{\"249\":1}}],[\"最大值为\",{\"1\":{\"140\":1}}],[\"最大限度地减少资源消耗\",{\"1\":{\"163\":1}}],[\"最大传输单元\",{\"1\":{\"141\":1}}],[\"最好仅在main\",{\"1\":{\"40\":1}}],[\"占用4个字节\",{\"0\":{\"285\":1}}],[\"占用1个字节\",{\"0\":{\"285\":1}}],[\"占用的字节大小不同\",{\"0\":{\"285\":1}}],[\"占用磁盘空间\",{\"1\":{\"250\":1}}],[\"占用空间\",{\"1\":{\"210\":1}}],[\"占用过高\",{\"1\":{\"173\":1}}],[\"占用解析器资源的攻击\",{\"1\":{\"168\":1}}],[\"占用\",{\"1\":{\"140\":1,\"285\":4}}],[\"版本字段标记值\",{\"1\":{\"140\":1}}],[\"版本对应数字列表\",{\"1\":{\"140\":1}}],[\"版本号是\",{\"1\":{\"140\":1}}],[\"版本\",{\"1\":{\"140\":2,\"182\":1,\"184\":1}}],[\"字面量和变量的区别是什么\",{\"0\":{\"279\":1}}],[\"字面量是什么意思\",{\"0\":{\"276\":1}}],[\"字面量\",{\"0\":{\"275\":1},\"1\":{\"274\":1,\"279\":1}}],[\"字节的链路上传输\",{\"1\":{\"141\":1}}],[\"字节的数据载荷\",{\"1\":{\"141\":1}}],[\"字节且有\",{\"1\":{\"141\":1}}],[\"字节\",{\"1\":{\"140\":1,\"141\":2,\"283\":1}}],[\"字段个数划分\",{\"1\":{\"251\":1}}],[\"字段2\",{\"1\":{\"241\":1}}],[\"字段1\",{\"1\":{\"241\":1}}],[\"字段名2\",{\"1\":{\"262\":1}}],[\"字段名1\",{\"1\":{\"262\":1}}],[\"字段名\",{\"1\":{\"194\":1,\"243\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"261\":1}}],[\"字段说明\",{\"1\":{\"194\":1}}],[\"字段添加了缓冲区\",{\"1\":{\"152\":1}}],[\"字段\",{\"1\":{\"140\":1,\"161\":1,\"171\":1,\"242\":1,\"263\":1}}],[\"字段介绍\",{\"1\":{\"140\":1}}],[\"字符\",{\"1\":{\"72\":2,\"283\":1,\"284\":3}}],[\"字符串类\",{\"1\":{\"276\":1}}],[\"字符串一旦创建\",{\"1\":{\"75\":1}}],[\"字符串由一连串的字符组成\",{\"1\":{\"75\":1}}],[\"字符串\",{\"0\":{\"26\":1,\"75\":1}}],[\"地址运算符\",{\"1\":{\"272\":1}}],[\"地址不足导致的问题\",{\"1\":{\"177\":1}}],[\"地址改为\",{\"1\":{\"176\":1}}],[\"地址之间互相转换\",{\"1\":{\"175\":1}}],[\"地址和局域网的\",{\"1\":{\"175\":1}}],[\"地址为目标地址的\",{\"1\":{\"173\":1}}],[\"地址为广播地址\",{\"1\":{\"172\":1}}],[\"地址变化的\",{\"1\":{\"173\":1}}],[\"地址给网络设备\",{\"1\":{\"172\":1}}],[\"地址广播给服务器\",{\"1\":{\"172\":1}}],[\"地址获取到设备的\",{\"1\":{\"172\":1}}],[\"地址写入数据帧中发送即可\",{\"1\":{\"172\":1}}],[\"地址相同\",{\"1\":{\"171\":1}}],[\"地址时为\",{\"1\":{\"171\":1}}],[\"地址的映射关系\",{\"1\":{\"172\":1}}],[\"地址的构成\",{\"1\":{\"170\":1}}],[\"地址的过程称为域名解析\",{\"1\":{\"165\":1}}],[\"地址一般会写入固件或硬件中\",{\"1\":{\"170\":1}}],[\"地址确定目标设备的\",{\"1\":{\"170\":1}}],[\"地址解析协议\",{\"1\":{\"170\":1}}],[\"地址发送请求\",{\"1\":{\"166\":1}}],[\"地址发送请求到目标网站\",{\"1\":{\"165\":1}}],[\"地址信息\",{\"1\":{\"166\":1}}],[\"地址信息后会将数据返回给客户端\",{\"1\":{\"166\":1}}],[\"地址识别和阻止恶意\",{\"1\":{\"163\":1}}],[\"地址表示\",{\"1\":{\"143\":1}}],[\"地址长度为\",{\"1\":{\"170\":1}}],[\"地址长度\",{\"1\":{\"143\":1}}],[\"地址\",{\"1\":{\"139\":1,\"140\":2,\"144\":1,\"165\":1,\"166\":1,\"167\":2,\"168\":1,\"170\":2,\"171\":12,\"172\":9,\"173\":1,\"175\":2,\"177\":2}}],[\"组合字面量是为结构体\",{\"1\":{\"280\":1}}],[\"组合字面量就是把对象的定义和初始化放在了一起\",{\"1\":{\"280\":1}}],[\"组合索引是基于多个列的值创建的索引\",{\"1\":{\"251\":1}}],[\"组合索引\",{\"0\":{\"262\":1},\"1\":{\"251\":1}}],[\"组合成一个数组\",{\"1\":{\"94\":1}}],[\"组成\",{\"1\":{\"171\":1}}],[\"组成的\",{\"1\":{\"139\":1}}],[\"组播\",{\"1\":{\"162\":1}}],[\"作用是什么\",{\"1\":{\"149\":2}}],[\"作用\",{\"1\":{\"137\":1}}],[\"作为一名合格的程序员\",{\"1\":{\"183\":1}}],[\"作为后缀\",{\"1\":{\"31\":1}}],[\"作为前缀\",{\"0\":{\"15\":1}}],[\"现在的版本对于未初始化的\",{\"1\":{\"297\":1}}],[\"现在通用的证书一般采用utc时间格式\",{\"1\":{\"137\":1}}],[\"现在可用\",{\"1\":{\"16\":1}}],[\"验签过程\",{\"1\":{\"137\":1}}],[\"颁发者将签名过的数字证书和公钥一起交给证书持有者\",{\"1\":{\"137\":1}}],[\"颁发者生成一对私钥和公钥\",{\"1\":{\"137\":1}}],[\"形成一个签名过的数字证书\",{\"1\":{\"137\":1}}],[\"α\",{\"1\":{\"137\":1}}],[\"证书发行者对证书的签名\",{\"1\":{\"137\":1}}],[\"证书所有人的公开密钥\",{\"1\":{\"137\":1}}],[\"证书所有人的名称\",{\"1\":{\"137\":1}}],[\"证书所使用的签名算法\",{\"1\":{\"137\":1}}],[\"证书的有效期\",{\"1\":{\"137\":1}}],[\"证书的发行机构名称\",{\"1\":{\"137\":1}}],[\"证书的序列号\",{\"1\":{\"137\":1}}],[\"证书的版本信息\",{\"1\":{\"137\":1}}],[\"证书的用途是不是匹配client请求的站点\",{\"1\":{\"134\":1}}],[\"证书包含的信息\",{\"1\":{\"137\":1}}],[\"证书持有者公钥等在内的信息\",{\"1\":{\"137\":1}}],[\"证书持有者信息\",{\"1\":{\"137\":1}}],[\"证书有效期\",{\"1\":{\"137\":1}}],[\"签名过程\",{\"1\":{\"137\":1}}],[\"另外\",{\"1\":{\"136\":1}}],[\"另一种初始化方式\",{\"1\":{\"74\":1}}],[\"保证数据的完整性\",{\"1\":{\"250\":1}}],[\"保证应用在任何环境下都能运行\",{\"1\":{\"180\":1}}],[\"保证了数据的完整性\",{\"1\":{\"151\":1}}],[\"保存结果\",{\"1\":{\"166\":1}}],[\"保留\",{\"1\":{\"140\":3,\"162\":1}}],[\"保留关键字\",{\"0\":{\"48\":1,\"49\":1}}],[\"保护电子邮件在传输和接收过程中的安全²\",{\"1\":{\"136\":1}}],[\"公钥用于签名验证和加密\",{\"1\":{\"136\":1}}],[\"公开变量\",{\"1\":{\"56\":1}}],[\"私有网段\",{\"1\":{\"175\":1}}],[\"私有变量\",{\"1\":{\"56\":1}}],[\"私钥主要用于签名和解密\",{\"1\":{\"136\":1}}],[\"即在查询时只能使用索引的最左前缀列\",{\"1\":{\"263\":1}}],[\"即若任意单个或多个字段如果也能唯一标识数据列\",{\"1\":{\"228\":1}}],[\"即请求来源为\",{\"1\":{\"176\":1}}],[\"即一对所有\",{\"1\":{\"162\":1}}],[\"即一对一组\",{\"1\":{\"162\":1}}],[\"即一对一\",{\"1\":{\"162\":1}}],[\"即如果连续收到三个重复的确认就会立即发送尚未接收到的报文段\",{\"1\":{\"157\":1}}],[\"即发送的消息没得到及时的回应\",{\"1\":{\"156\":1}}],[\"即数据在传输过程中经过的总时间\",{\"1\":{\"152\":1}}],[\"即客户端和服务端都可以主动发送消息\",{\"1\":{\"149\":1}}],[\"即\",{\"1\":{\"149\":2}}],[\"即x\",{\"1\":{\"149\":1}}],[\"即tcp头部和tcp数据\",{\"1\":{\"147\":1}}],[\"即值为5\",{\"1\":{\"147\":1}}],[\"即利用一对密钥实施加密和解密\",{\"1\":{\"136\":1}}],[\"即可手动终止\",{\"1\":{\"126\":1}}],[\"它没有具体的名称\",{\"1\":{\"276\":1}}],[\"它没有任何限制\",{\"1\":{\"251\":1}}],[\"它使得构建和维护具有大型数据模型的应用程序变得轻松\",{\"1\":{\"210\":1}}],[\"它具有速度快\",{\"1\":{\"196\":1}}],[\"它不会重新发送\",{\"1\":{\"160\":1}}],[\"它提供了大量的功能\",{\"1\":{\"217\":1}}],[\"它提供了一站式的微服务开发解决方案\",{\"1\":{\"200\":1}}],[\"它提供了一种在互联网上验证身份的方式\",{\"1\":{\"136\":1}}],[\"它提供面向事务的简单不可靠信息传送服务\",{\"1\":{\"159\":1}}],[\"它会假设数据丢失\",{\"1\":{\"152\":1}}],[\"它告诉系统此报文段中有紧急数据\",{\"1\":{\"147\":1}}],[\"它们由字面量的类型后紧跟大括号及元素列表\",{\"1\":{\"280\":1}}],[\"它们是\",{\"1\":{\"140\":1}}],[\"它们类似于网站和用户的安全徽章\",{\"1\":{\"136\":1}}],[\"它的主要任务是加快对数据的访问速度\",{\"1\":{\"251\":1}}],[\"它的计时范围为1950\",{\"1\":{\"137\":1}}],[\"它的上一级证书是否有效\",{\"1\":{\"134\":1}}],[\"它的所有派生节点也会被终止\",{\"1\":{\"121\":1}}],[\"算法\",{\"1\":{\"154\":1}}],[\"算法对\",{\"1\":{\"135\":1}}],[\"算术运算符\",{\"0\":{\"84\":1}}],[\"连接断开\",{\"1\":{\"178\":1}}],[\"连接\",{\"1\":{\"162\":1,\"168\":1}}],[\"连接上可以并发多个\",{\"1\":{\"135\":1}}],[\"连接的重复建立和断开所造成的额外开销\",{\"1\":{\"135\":1}}],[\"连接方式\",{\"1\":{\"135\":1}}],[\"长短对重传有什么影响\",{\"1\":{\"152\":1}}],[\"长连接\",{\"1\":{\"135\":1}}],[\"长度及容量\",{\"0\":{\"107\":1}}],[\"长度\",{\"0\":{\"102\":1},\"1\":{\"161\":1,\"171\":2}}],[\"每个元素前面可以选择性的带一个相关key\",{\"1\":{\"280\":1}}],[\"每个节点都包含索引和全部数据\",{\"1\":{\"266\":1}}],[\"每个节点都包含多个子节点\",{\"1\":{\"266\":1}}],[\"每个节点的子节点个数范围是\",{\"1\":{\"266\":1}}],[\"每个特性都经过了测试的重重考验\",{\"1\":{\"217\":1}}],[\"每个配置项都是一个对象\",{\"1\":{\"194\":1}}],[\"每经过一个传播轮次\",{\"1\":{\"155\":1}}],[\"每经过一个路由器该字段就会减一\",{\"1\":{\"140\":1}}],[\"每发送一个syn\",{\"1\":{\"149\":1}}],[\"每次发送都需要指定目标的\",{\"1\":{\"139\":1}}],[\"每次请求都要建立连接\",{\"1\":{\"135\":1}}],[\"每组按照字母顺序排序\",{\"1\":{\"7\":1}}],[\"每组之间用空行分隔\",{\"1\":{\"7\":1}}],[\"然后再回表查询对应的完整数据行\",{\"1\":{\"264\":2}}],[\"然后将结果再\",{\"1\":{\"237\":1}}],[\"然后将代码部署到测试环境\",{\"1\":{\"181\":1}}],[\"然后发布到任何流行的\",{\"1\":{\"180\":1}}],[\"然后发送给服务器\",{\"1\":{\"176\":1}}],[\"然后向\",{\"1\":{\"166\":1}}],[\"然后使用私钥对指纹进行加密\",{\"1\":{\"137\":1}}],[\"然后server使用对称密钥解密密文\",{\"1\":{\"134\":1}}],[\"然后用证书的公钥加密这个对称密钥\",{\"1\":{\"134\":1}}],[\"得到解密后的指纹α\",{\"1\":{\"137\":1}}],[\"得到的加密数据即为颁发者的数字签名γ\",{\"1\":{\"137\":1}}],[\"得到明文内容b\",{\"1\":{\"134\":1}}],[\"得到明文内容a\",{\"1\":{\"134\":1}}],[\"得到对称密钥\",{\"1\":{\"134\":1}}],[\"至此\",{\"1\":{\"134\":1}}],[\"发给server\",{\"1\":{\"134\":1}}],[\"发送数据\",{\"1\":{\"172\":1}}],[\"发送给客户端\",{\"1\":{\"166\":1}}],[\"发送给client\",{\"1\":{\"134\":1}}],[\"发送域名请求到\",{\"1\":{\"165\":1}}],[\"发送端根据窗口大小调整发送速率\",{\"1\":{\"153\":1}}],[\"发送的数据包丢失导致的超时\",{\"1\":{\"152\":1}}],[\"发送方只需要发送数据给路由器\",{\"1\":{\"172\":1}}],[\"发送方根据前一次的rtt来估计下一次发送数据的rto\",{\"1\":{\"152\":1}}],[\"发送方发送数据后等待确认\",{\"1\":{\"152\":1}}],[\"发送方的端口号\",{\"1\":{\"147\":1}}],[\"发送方和接收方都不需要存储对方的信息\",{\"1\":{\"139\":1}}],[\"发送消息\",{\"1\":{\"114\":1}}],[\"发送接收数据\",{\"0\":{\"113\":1}}],[\"直到查询到结果\",{\"1\":{\"166\":1}}],[\"直到达到\",{\"1\":{\"155\":1}}],[\"直到验证到根证书\",{\"1\":{\"134\":1}}],[\"直接采用随机顺序返回\",{\"1\":{\"301\":1}}],[\"直接初始化\",{\"1\":{\"105\":1}}],[\"直接声明\",{\"1\":{\"105\":1}}],[\"协议开源\",{\"1\":{\"180\":1}}],[\"协议的出现可以弥补\",{\"1\":{\"178\":1}}],[\"协议的网络设备中会各自维护一张\",{\"1\":{\"172\":1}}],[\"协议使得大量内网设备可以联网\",{\"1\":{\"177\":1}}],[\"协议进行转换\",{\"1\":{\"175\":1}}],[\"协议将自身的\",{\"1\":{\"172\":1}}],[\"协议获取目标路由器的\",{\"1\":{\"172\":1}}],[\"协议地址长度\",{\"1\":{\"171\":3}}],[\"协议类型\",{\"1\":{\"162\":1,\"171\":2}}],[\"协议\",{\"1\":{\"140\":1}}],[\"协议不能保证数据包一定能送达\",{\"1\":{\"139\":1}}],[\"协议传递的数据包可能是无序的\",{\"1\":{\"139\":1}}],[\"协议有以下特点\",{\"1\":{\"139\":1}}],[\"协议栈是互联网的核心协议之一\",{\"1\":{\"139\":1}}],[\"协议和\",{\"1\":{\"139\":1}}],[\"协议会对传输的数据进行加密\",{\"1\":{\"134\":1}}],[\"协程可以很方便地终止\",{\"1\":{\"119\":1,\"299\":1}}],[\"工作目录\",{\"1\":{\"193\":1,\"194\":1}}],[\"工作原理\",{\"0\":{\"134\":1,\"172\":1,\"176\":1},\"1\":{\"264\":1}}],[\"工具等\",{\"1\":{\"1\":1}}],[\"工具\",{\"1\":{\"1\":1}}],[\"端口是\",{\"1\":{\"133\":2}}],[\"端口\",{\"1\":{\"133\":1,\"176\":1}}],[\"访问后端服务器发生了错误\",{\"1\":{\"132\":1}}],[\"未执行\",{\"1\":{\"295\":1}}],[\"未初始化的\",{\"0\":{\"295\":1}}],[\"未命名常量\",{\"1\":{\"276\":1}}],[\"未命名常量是一种特殊的常量\",{\"1\":{\"276\":1}}],[\"未提交的数据还可能会回滚\",{\"1\":{\"269\":1}}],[\"未提交意味着这些数据可能会回滚\",{\"1\":{\"269\":1}}],[\"未分配\",{\"1\":{\"140\":2}}],[\"未找到表示请求的资源在服务器上不存在或未找到\",{\"1\":{\"132\":1}}],[\"未授权缺失或错误的认证\",{\"1\":{\"132\":1}}],[\"未修改\",{\"1\":{\"132\":1}}],[\"临时重定向与302类似\",{\"1\":{\"132\":1}}],[\"临时移动与301类似\",{\"1\":{\"132\":1}}],[\"客户端代码生成\",{\"1\":{\"200\":2,\"201\":1,\"205\":2,\"206\":1}}],[\"客户端会缓存\",{\"1\":{\"166\":1}}],[\"客户端与服务器端点到点连接\",{\"1\":{\"162\":1}}],[\"客户端确认\",{\"1\":{\"149\":1}}],[\"客户端发送fin=1\",{\"1\":{\"149\":1}}],[\"客户端发送syn=1\",{\"1\":{\"149\":1}}],[\"客户端将y+1作为返回的ack数值\",{\"1\":{\"149\":1}}],[\"客户端通常会缓存访问过的资源\",{\"1\":{\"132\":1}}],[\"客户端应继续使用原有uri\",{\"1\":{\"132\":1}}],[\"今后任何新的请求都应使用新的uri代替\",{\"1\":{\"132\":1}}],[\"永久移动请求的资源已被永久的移动到新uri\",{\"1\":{\"132\":1}}],[\"多个\",{\"0\":{\"291\":1}}],[\"多个导入\",{\"1\":{\"53\":1}}],[\"多版本并发控制\",{\"1\":{\"269\":1}}],[\"多数据库\",{\"1\":{\"217\":1}}],[\"多态\",{\"1\":{\"217\":1}}],[\"多语言调试支持\",{\"1\":{\"193\":1}}],[\"多播地址\",{\"1\":{\"170\":1}}],[\"多播较为常用\",{\"1\":{\"162\":1}}],[\"多播\",{\"1\":{\"162\":1}}],[\"多路复用\",{\"1\":{\"135\":1}}],[\"多种选择请求的资源可包括多个位置\",{\"1\":{\"132\":1}}],[\"浏览器访问网站步骤\",{\"1\":{\"165\":1}}],[\"浏览器访问\",{\"1\":{\"137\":1}}],[\"浏览器和web服务器之间传输的数据进行加密和保护\",{\"1\":{\"136\":1}}],[\"浏览器会自动定向到新uri\",{\"1\":{\"132\":1}}],[\"浏览器\",{\"1\":{\"132\":2}}],[\"已接受\",{\"1\":{\"132\":1}}],[\"已创建\",{\"1\":{\"132\":1}}],[\"已经明确了返回一个字符串类型\",{\"1\":{\"14\":1}}],[\"只能存储\",{\"1\":{\"284\":1}}],[\"只能从低版本切换到高版本\",{\"1\":{\"132\":1}}],[\"只有叶节点包含数据指针和键\",{\"1\":{\"267\":1}}],[\"只有\",{\"1\":{\"251\":1,\"286\":1}}],[\"只有用户自己知道\",{\"1\":{\"136\":1}}],[\"只统计非空行\",{\"1\":{\"249\":3}}],[\"只调试自己的代码\",{\"1\":{\"194\":1}}],[\"只支持一对一\",{\"1\":{\"162\":1}}],[\"只存在于syn报文\",{\"1\":{\"147\":1}}],[\"只要结构体实现了\",{\"1\":{\"92\":1}}],[\"切割后的分片在\",{\"1\":{\"141\":1}}],[\"切换分支\",{\"1\":{\"184\":1}}],[\"切换为\",{\"1\":{\"132\":1}}],[\"切换传输协议\",{\"1\":{\"132\":1}}],[\"切换协议\",{\"1\":{\"132\":1}}],[\"切片有容量\",{\"1\":{\"289\":1}}],[\"切片是引用传递\",{\"1\":{\"289\":1}}],[\"切片是动态的数组\",{\"1\":{\"78\":1}}],[\"切片的长度是动态的\",{\"1\":{\"289\":1}}],[\"切片的组合字面量方式如下\",{\"1\":{\"280\":1}}],[\"切片初始化\",{\"1\":{\"287\":2}}],[\"切片和map的组合字面量方式如下\",{\"1\":{\"280\":1}}],[\"切片和map构造值\",{\"1\":{\"280\":1}}],[\"切片及其内部数据\",{\"1\":{\"274\":1}}],[\"切片截取\",{\"0\":{\"106\":1}}],[\"切片\",{\"0\":{\"78\":1,\"104\":1}}],[\"也不会出现并发问题\",{\"1\":{\"293\":1}}],[\"也改变\",{\"1\":{\"287\":1}}],[\"也就是字符串字面量\",{\"1\":{\"279\":1}}],[\"也就是不存在的数据\",{\"1\":{\"269\":1}}],[\"也就是可能最终不会存到数据库中\",{\"1\":{\"269\":1}}],[\"也就是错误码的含义\",{\"1\":{\"132\":1}}],[\"也就是重定向\",{\"1\":{\"132\":1}}],[\"也可以通过使用\",{\"1\":{\"269\":1}}],[\"也可以实现虚拟化\",{\"1\":{\"180\":1}}],[\"也可以这样初始化\",{\"1\":{\"99\":1,\"100\":1}}],[\"也可用于测试服务器支持的功能\",{\"1\":{\"131\":1}}],[\"重启容器\",{\"1\":{\"182\":1}}],[\"重量级\",{\"1\":{\"162\":1}}],[\"重要\",{\"1\":{\"154\":1,\"163\":1,\"237\":1}}],[\"重复键\",{\"1\":{\"267\":1}}],[\"重复选择性确认\",{\"1\":{\"152\":1}}],[\"重复的\",{\"1\":{\"139\":1}}],[\"重组\",{\"0\":{\"142\":1}}],[\"重新执行慢开始\",{\"1\":{\"156\":1}}],[\"重新发送数据包直到收到\",{\"1\":{\"152\":1}}],[\"重新发送请求获取资源\",{\"1\":{\"132\":1}}],[\"重新计算校验和\",{\"1\":{\"141\":1}}],[\"重置内容\",{\"1\":{\"132\":1}}],[\"重点关注http协议\",{\"1\":{\"128\":1}}],[\"理解\",{\"1\":{\"132\":1}}],[\"成功\",{\"1\":{\"132\":1}}],[\"继续\",{\"1\":{\"132\":1}}],[\"继续处理\",{\"1\":{\"132\":1}}],[\"继续执行下一轮循环\",{\"1\":{\"65\":1}}],[\"含义\",{\"1\":{\"132\":1,\"170\":1}}],[\"返回指定字段\",{\"0\":{\"241\":1}}],[\"返回所有字段\",{\"0\":{\"240\":1}}],[\"返回信息会包括新的uri\",{\"1\":{\"132\":1}}],[\"返回特定服务器地址所支持的\",{\"1\":{\"131\":1}}],[\"返回值判断\",{\"1\":{\"33\":1}}],[\"删除后\",{\"0\":{\"303\":1}}],[\"删除\",{\"1\":{\"258\":1,\"259\":1}}],[\"删除数据\",{\"0\":{\"215\":1,\"222\":1}}],[\"删除远程分支\",{\"1\":{\"184\":1}}],[\"删除本地分支\",{\"1\":{\"184\":1}}],[\"删除镜像\",{\"1\":{\"182\":1}}],[\"删除容器\",{\"1\":{\"182\":1}}],[\"删除指定的资源\",{\"1\":{\"131\":1}}],[\"删除键值\",{\"0\":{\"100\":1},\"1\":{\"100\":1}}],[\"类似\",{\"1\":{\"131\":1,\"224\":1}}],[\"类型能表示的值是有限的\",{\"1\":{\"286\":1}}],[\"类型不同\",{\"0\":{\"283\":1}}],[\"类型不同会报错\",{\"1\":{\"277\":1}}],[\"类型安全\",{\"1\":{\"210\":1}}],[\"类型的接口\",{\"1\":{\"92\":1}}],[\"类型的数据的信道\",{\"1\":{\"58\":3}}],[\"类型名称为\",{\"1\":{\"75\":1,\"76\":1}}],[\"类型断言\",{\"0\":{\"33\":1}}],[\"类型\",{\"1\":{\"5\":1,\"14\":2,\"49\":1,\"72\":2,\"73\":1,\"74\":1,\"82\":1,\"92\":1,\"162\":1,\"286\":1,\"287\":2}}],[\"种请求方式\",{\"1\":{\"131\":1}}],[\"额外支持\",{\"1\":{\"131\":1}}],[\"虚拟终端等\",{\"1\":{\"129\":1}}],[\"虚数\",{\"1\":{\"74\":2}}],[\"电子邮件\",{\"1\":{\"129\":1}}],[\"五层模型\",{\"1\":{\"129\":1}}],[\"要保证并发安全\",{\"1\":{\"302\":1}}],[\"要用\",{\"1\":{\"279\":1}}],[\"要学习表连接\",{\"1\":{\"229\":1}}],[\"要使用\",{\"1\":{\"201\":1,\"206\":1}}],[\"要映射到发送方的协议地址类型\",{\"1\":{\"171\":1}}],[\"要关注的是ip协议\",{\"1\":{\"128\":1}}],[\"要求数据包必须按照指定的节点顺序传递\",{\"1\":{\"140\":1}}],[\"要求数据包经过指定的中间节点\",{\"1\":{\"140\":1}}],[\"要求\",{\"1\":{\"1\":1}}],[\"网关通过主动向主机发送自己的\",{\"1\":{\"173\":1}}],[\"网关超时网关超时\",{\"1\":{\"132\":1}}],[\"网关错误通常是服务器作为网关或代理时返回的错误码\",{\"1\":{\"132\":1}}],[\"网络类型\",{\"1\":{\"175\":1}}],[\"网络地址转换协议\",{\"1\":{\"175\":1}}],[\"网络设备通过\",{\"1\":{\"172\":1}}],[\"网络性能下降\",{\"1\":{\"163\":1}}],[\"网络接口层\",{\"1\":{\"129\":2}}],[\"网络层\",{\"1\":{\"128\":1,\"129\":3}}],[\"网卡也会在这层工作\",{\"1\":{\"128\":1}}],[\"功能描述\",{\"1\":{\"249\":1}}],[\"功能模块\",{\"1\":{\"225\":1}}],[\"功能相对复杂\",{\"1\":{\"200\":1}}],[\"功能相对简单\",{\"1\":{\"196\":1}}],[\"功能丰富\",{\"1\":{\"200\":1,\"205\":1}}],[\"功能强大\",{\"1\":{\"187\":1,\"217\":1}}],[\"功能未实现表示客户端请求的功能还不支持\",{\"1\":{\"132\":1}}],[\"功能\",{\"1\":{\"128\":1,\"129\":1,\"193\":1}}],[\"功能修饰\",{\"0\":{\"68\":1},\"1\":{\"49\":1}}],[\"层级\",{\"1\":{\"128\":1}}],[\"根域名服务器查询\",{\"1\":{\"166\":1}}],[\"根节点至少有两个子节点\",{\"1\":{\"266\":1}}],[\"根节点的数据也会被所有派生节点共享\",{\"1\":{\"121\":1}}],[\"根节点和派生节点\",{\"0\":{\"121\":1}}],[\"根据需求选择\",{\"1\":{\"189\":1}}],[\"根据特定模式或已知的恶意\",{\"1\":{\"163\":1}}],[\"根据\",{\"1\":{\"56\":1,\"165\":1}}],[\"根据不同的错误类型进行不同的处理\",{\"1\":{\"32\":1}}],[\"终止协程\",{\"1\":{\"119\":1,\"299\":1}}],[\"定时更新主机的\",{\"1\":{\"173\":1}}],[\"定时器就是通过\",{\"1\":{\"116\":1}}],[\"定义\",{\"1\":{\"133\":1,\"269\":1}}],[\"定义为指针\",{\"1\":{\"81\":1}}],[\"定义一个新的类型\",{\"1\":{\"55\":1}}],[\"定义等价类型\",{\"1\":{\"55\":1}}],[\"定义结构\",{\"1\":{\"55\":1}}],[\"定义接口\",{\"1\":{\"55\":1}}],[\"定义之后\",{\"1\":{\"11\":1}}],[\"定义包名请遵循以下规范\",{\"1\":{\"9\":1}}],[\"完成操作\",{\"1\":{\"115\":1}}],[\"完成后会关闭它\",{\"1\":{\"43\":1}}],[\"设计非常友好\",{\"1\":{\"217\":1}}],[\"设备进行的攻击\",{\"1\":{\"168\":1}}],[\"设定默认执行的动作\",{\"1\":{\"115\":1}}],[\"设置输出文件的路径\",{\"1\":{\"194\":1}}],[\"设置断点\",{\"1\":{\"193\":1}}],[\"设置响应慢或不响应的\",{\"1\":{\"168\":1}}],[\"设置为\",{\"1\":{\"157\":1,\"303\":1}}],[\"设置为发生网络拥塞时的\",{\"1\":{\"156\":1}}],[\"设置值\",{\"1\":{\"79\":1,\"98\":1}}],[\"设置初始化容量\",{\"1\":{\"25\":1}}],[\"左连接\",{\"0\":{\"235\":1}}],[\"左侧表示接收数据\",{\"1\":{\"113\":1}}],[\"左移\",{\"1\":{\"87\":1}}],[\"带缓冲\",{\"1\":{\"112\":1}}],[\"带缓冲信道\",{\"1\":{\"58\":1}}],[\"信息\",{\"1\":{\"166\":3,\"182\":1}}],[\"信息量不足的名称\",{\"1\":{\"9\":1}}],[\"信道\",{\"0\":{\"110\":1}}],[\"没有与之关联的变量名\",{\"1\":{\"276\":1}}],[\"没有重复的键\",{\"1\":{\"267\":1}}],[\"没有\",{\"1\":{\"162\":1}}],[\"没有办法阻止这个\",{\"1\":{\"42\":1}}],[\"没被改变\",{\"1\":{\"109\":1}}],[\"给请求\",{\"1\":{\"176\":1}}],[\"给\",{\"1\":{\"109\":1}}],[\"给嵌入式类型的字段赋值不方便\",{\"1\":{\"16\":1}}],[\"实体框架\",{\"1\":{\"210\":1}}],[\"实现重试机制的函数\",{\"1\":{\"225\":1}}],[\"实现持续集成\",{\"1\":{\"181\":1}}],[\"实现复制均衡\",{\"1\":{\"177\":1}}],[\"实现了定时结果的返回\",{\"1\":{\"116\":1}}],[\"实际上是利用了服务器的超时机制\",{\"1\":{\"163\":1}}],[\"实际上共用一个内存地址的数据\",{\"1\":{\"109\":1}}],[\"实数为浮点数\",{\"1\":{\"74\":1}}],[\"追加多条数据\",{\"1\":{\"108\":1}}],[\"追加一条数据\",{\"1\":{\"108\":1}}],[\"追加数据\",{\"0\":{\"108\":1}}],[\"下面这些基本类型赋值的文本\",{\"1\":{\"276\":1}}],[\"下面的例子中的\",{\"1\":{\"49\":1}}],[\"下载地址\",{\"1\":{\"187\":1}}],[\"下默认重试\",{\"1\":{\"149\":1}}],[\"下一代互联网\",{\"1\":{\"140\":1}}],[\"下一个请求必须在前一个请求响应到达之前才能发送\",{\"1\":{\"135\":1}}],[\"下标的数据\",{\"1\":{\"106\":1}}],[\"第二个表为被驱动表\",{\"1\":{\"232\":1}}],[\"第二种方式\",{\"1\":{\"105\":1}}],[\"第25\",{\"1\":{\"170\":1}}],[\"第2位\",{\"1\":{\"170\":1}}],[\"第3\",{\"1\":{\"170\":1}}],[\"第1位\",{\"1\":{\"170\":1}}],[\"第一个段作为标志位\",{\"1\":{\"152\":1}}],[\"第一种方式\",{\"1\":{\"105\":1}}],[\"第三种方式\",{\"1\":{\"105\":1}}],[\"第三方库\",{\"1\":{\"7\":2}}],[\"解除或建立与别的接点的联系\",{\"1\":{\"129\":1}}],[\"解决方法\",{\"1\":{\"178\":1}}],[\"解决不同系统之间通信语法问题\",{\"1\":{\"128\":1}}],[\"解决\",{\"1\":{\"103\":1,\"135\":1}}],[\"解析器缓存中的攻击\",{\"1\":{\"168\":1}}],[\"解析过程\",{\"0\":{\"166\":1}}],[\"解析后可以得到数字签名γ和数字证书\",{\"1\":{\"137\":1}}],[\"解析\",{\"1\":{\"53\":1,\"225\":1}}],[\"判断错误类型等\",{\"1\":{\"225\":1}}],[\"判断错误是否是目标错误\",{\"1\":{\"95\":1}}],[\"判断结构体是否为空等\",{\"1\":{\"225\":1}}],[\"判断是否发送成功\",{\"1\":{\"149\":1}}],[\"判断是否为空而不是\",{\"1\":{\"17\":1}}],[\"判断\",{\"0\":{\"101\":1},\"1\":{\"101\":1}}],[\"合并等\",{\"1\":{\"225\":1}}],[\"合并代码\",{\"1\":{\"184\":2}}],[\"合并\",{\"1\":{\"94\":1,\"95\":1,\"96\":1}}],[\"方法\",{\"1\":{\"100\":1,\"109\":1,\"119\":1,\"131\":1,\"152\":1,\"299\":1}}],[\"方法可以将\",{\"1\":{\"96\":1}}],[\"方法可以判断当前\",{\"1\":{\"95\":1}}],[\"方法将多个\",{\"1\":{\"94\":1}}],[\"方法就属于\",{\"1\":{\"92\":1}}],[\"方便开发者进行开发\",{\"1\":{\"224\":1}}],[\"方便开发者调用查询\",{\"1\":{\"210\":1}}],[\"方便开发者区分括号的层级\",{\"1\":{\"188\":1}}],[\"方便上级处理\",{\"1\":{\"32\":1}}],[\"方便记忆和引用\",{\"1\":{\"9\":1}}],[\"接着再用\",{\"1\":{\"264\":1}}],[\"接下来的查询都是围绕该示例表\",{\"1\":{\"230\":1}}],[\"接受\",{\"1\":{\"132\":1}}],[\"接收端在应答\",{\"1\":{\"153\":1}}],[\"接收端每接收一个失序的数据包就立即返回重复的确认报文段\",{\"1\":{\"152\":1}}],[\"接收窗口\",{\"1\":{\"147\":1}}],[\"接收方的端口号\",{\"1\":{\"147\":1}}],[\"接收者会将分片收集起来\",{\"1\":{\"142\":1}}],[\"接收\",{\"1\":{\"115\":3}}],[\"接收到信息\",{\"1\":{\"67\":1}}],[\"接口\",{\"0\":{\"92\":1,\"120\":1}}],[\"取地址中数据\",{\"1\":{\"272\":1}}],[\"取地址\",{\"1\":{\"89\":1}}],[\"取余\",{\"1\":{\"84\":1}}],[\"其中\",{\"1\":{\"266\":1}}],[\"其中密钥包括私钥和公钥\",{\"1\":{\"136\":1}}],[\"其最小值是8\",{\"1\":{\"161\":1}}],[\"其正式规范是\",{\"1\":{\"159\":1}}],[\"其他\",{\"0\":{\"281\":1}}],[\"其他主机在收到广播后不会回应\",{\"1\":{\"172\":1}}],[\"其他分片的更多分片\",{\"1\":{\"141\":1}}],[\"其他节点不能参与\",{\"1\":{\"140\":1}}],[\"其他符号\",{\"0\":{\"89\":1}}],[\"其账户中的信息与资金安全仍然能得到有效的保障\",{\"1\":{\"136\":1}}],[\"其它\",{\"1\":{\"42\":1}}],[\"将满足条件的数据行返回\",{\"1\":{\"264\":1}}],[\"将模式定义为\",{\"1\":{\"210\":1}}],[\"将在外部控制台中运行程序\",{\"1\":{\"194\":1}}],[\"将其转换为大写\",{\"1\":{\"188\":1}}],[\"将数据表之间的关系用图的方式表示\",{\"1\":{\"210\":1}}],[\"将数据包发送到内网主机\",{\"1\":{\"176\":1}}],[\"将数字签名γ附加到数字证书上\",{\"1\":{\"137\":1}}],[\"将查询重定向到其他域名服务器的攻击\",{\"1\":{\"168\":1}}],[\"将伪造的\",{\"1\":{\"168\":1}}],[\"将会执行以下步骤\",{\"1\":{\"172\":1}}],[\"将会递归查询下一级服务器\",{\"1\":{\"166\":1}}],[\"将会返回管辖范围内的权威域名服务器的\",{\"1\":{\"166\":1}}],[\"将传入的网络流量分布到多个服务器上\",{\"1\":{\"163\":1}}],[\"将\",{\"1\":{\"157\":2,\"172\":1,\"303\":2}}],[\"将x+1作为ack数值\",{\"1\":{\"149\":1}}],[\"将网络层传下来的比特数据包组装成帧\",{\"1\":{\"128\":1}}],[\"将多个\",{\"1\":{\"94\":1,\"95\":1,\"96\":1}}],[\"将右边的结果赋值到左边\",{\"1\":{\"88\":1}}],[\"将错误换行并返回\",{\"1\":{\"32\":1}}],[\"低位补\",{\"1\":{\"87\":1}}],[\"^=\",{\"1\":{\"88\":2}}],[\"^\",{\"1\":{\"87\":3,\"88\":1,\"90\":2}}],[\"||\",{\"1\":{\"90\":1}}],[\"|=\",{\"1\":{\"88\":2}}],[\"|\",{\"1\":{\"87\":3,\"88\":1,\"90\":1}}],[\"真值表\",{\"1\":{\"87\":1}}],[\"关系键用于标识数据表中的每一行或者标识与其他表的关系\",{\"1\":{\"228\":1}}],[\"关系键\",{\"0\":{\"228\":1},\"1\":{\"228\":1}}],[\"关系运算符\",{\"0\":{\"85\":1}}],[\"关联\",{\"1\":{\"217\":1}}],[\"关闭\",{\"0\":{\"114\":1},\"1\":{\"114\":1}}],[\"关键字\",{\"1\":{\"49\":1}}],[\"相互之间不会有任何接口\",{\"1\":{\"180\":1,\"181\":1}}],[\"相对慢\",{\"1\":{\"162\":1}}],[\"相对较慢\",{\"1\":{\"133\":1}}],[\"相对较快\",{\"1\":{\"133\":1}}],[\"相当于高优先级的数据\",{\"1\":{\"147\":1}}],[\"相应可返回一个资源特征与地址的列表用于用户终端\",{\"1\":{\"132\":1}}],[\"相似\",{\"1\":{\"131\":1,\"217\":1}}],[\"相除\",{\"1\":{\"84\":1}}],[\"相乘\",{\"1\":{\"84\":1}}],[\"相减\",{\"1\":{\"84\":1}}],[\"相加\",{\"1\":{\"84\":1}}],[\"相关名词\",{\"1\":{\"154\":1}}],[\"相关信息\",{\"1\":{\"40\":1,\"131\":1,\"192\":4,\"235\":1,\"236\":1,\"237\":1,\"245\":1,\"250\":1}}],[\"相关\",{\"1\":{\"5\":1}}],[\"相关的声明放在一起\",{\"0\":{\"5\":1}}],[\"相关的知识点\",{\"1\":{\"1\":1}}],[\"操作会报\",{\"1\":{\"297\":1}}],[\"操作指针的函数\",{\"1\":{\"225\":1}}],[\"操作类型\",{\"1\":{\"171\":1}}],[\"操作码\",{\"1\":{\"171\":2}}],[\"操作系统内置的root证书或者client内置的root证书\",{\"1\":{\"134\":1}}],[\"操作\",{\"1\":{\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"258\":1,\"259\":3}}],[\"操作符\",{\"1\":{\"84\":1,\"85\":1,\"86\":1,\"87\":1}}],[\"零值\",{\"1\":{\"82\":1}}],[\"零值表\",{\"0\":{\"82\":1}}],[\"零值切片\",{\"1\":{\"17\":1}}],[\"通常和聚合函数\",{\"1\":{\"247\":1}}],[\"通常是一个编译任务\",{\"1\":{\"194\":1}}],[\"通常是使用udp发送的\",{\"1\":{\"160\":1}}],[\"通常为本地路由器\",{\"1\":{\"172\":1}}],[\"通常这将引起应用程序发起自己的关闭操作\",{\"1\":{\"149\":1}}],[\"通常发生了某些错误\",{\"1\":{\"147\":1}}],[\"通常我们会使用\",{\"1\":{\"115\":1}}],[\"通常用于动态错误信息\",{\"1\":{\"29\":1}}],[\"通常用于预定义的错误\",{\"1\":{\"29\":1}}],[\"通过动态内存分配\",{\"1\":{\"273\":1}}],[\"通过传递指针\",{\"1\":{\"273\":1}}],[\"通过指针\",{\"1\":{\"273\":2}}],[\"通过指针可以在函数中修改函数外的数据\",{\"1\":{\"81\":1}}],[\"通过索引我们可以快速定位到目标数据的位置\",{\"1\":{\"250\":1}}],[\"通过配置可以设置断点进行调试\",{\"1\":{\"193\":1}}],[\"通过配置可以实现调试参数的配置\",{\"1\":{\"193\":1}}],[\"通过配置可以实现调试各类编程语言\",{\"1\":{\"193\":1}}],[\"通过配置可以实现本地和远程调试代码\",{\"1\":{\"193\":1}}],[\"通过配置超时时间\",{\"1\":{\"119\":1}}],[\"通过两个路由器连接\",{\"1\":{\"172\":1}}],[\"通过与其他合法解析器建立\",{\"1\":{\"168\":1}}],[\"通过域名获取\",{\"1\":{\"165\":1}}],[\"通过减少服务器在发送\",{\"1\":{\"163\":1}}],[\"通过超时重传机制可以在数据包丢失或者延迟时\",{\"1\":{\"152\":1}}],[\"通过序列号可以对数据包进行排序和去重\",{\"1\":{\"151\":1}}],[\"通过以下几个特性保证数据传输的可靠性\",{\"1\":{\"150\":1}}],[\"通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源\",{\"1\":{\"132\":1}}],[\"通过使用\",{\"1\":{\"119\":1,\"299\":2}}],[\"通过\",{\"1\":{\"79\":1,\"98\":1,\"133\":1,\"149\":1}}],[\"90\",{\"1\":{\"280\":1}}],[\"96\",{\"1\":{\"280\":1}}],[\"99\",{\"1\":{\"272\":3}}],[\"9999\",{\"1\":{\"176\":4}}],[\"9\",{\"1\":{\"78\":1,\"107\":3,\"140\":1,\"192\":1,\"232\":2,\"235\":2,\"237\":2,\"287\":8}}],[\"数量\",{\"1\":{\"244\":1}}],[\"数学计算相关的函数\",{\"1\":{\"225\":1}}],[\"数字签名工作原理\",{\"0\":{\"137\":1}}],[\"数字证书也可以用于终端的保护\",{\"1\":{\"136\":1}}],[\"数字证书也称为公钥证书或身份证书\",{\"1\":{\"136\":1}}],[\"数字证书的应用非常广泛\",{\"1\":{\"136\":1}}],[\"数字证书的基本架构是公开密钥pki\",{\"1\":{\"136\":1}}],[\"数字证书由证书颁发机构\",{\"1\":{\"136\":1}}],[\"数字证书对个人或组织的线上凭据与身份进行验证\",{\"1\":{\"136\":1}}],[\"数字证书是一种权威性的电子文档\",{\"1\":{\"136\":1}}],[\"数字证书\",{\"0\":{\"136\":1}}],[\"数字\",{\"1\":{\"132\":1}}],[\"数据库的默认隔离级别是\",{\"1\":{\"269\":1}}],[\"数据库锁\",{\"1\":{\"217\":1}}],[\"数据指针和键\",{\"1\":{\"267\":1}}],[\"数据验证的函数\",{\"1\":{\"225\":1}}],[\"数据将被路由器转发\",{\"1\":{\"172\":1}}],[\"数据引入\",{\"1\":{\"168\":1}}],[\"数据边界\",{\"1\":{\"162\":1}}],[\"数据有序性\",{\"1\":{\"162\":1}}],[\"数据包丢失导致的超时\",{\"1\":{\"152\":1}}],[\"数据包在链路层传输的时候\",{\"1\":{\"141\":1}}],[\"数据\",{\"1\":{\"140\":1,\"141\":1}}],[\"数据完整性校验及身份认证\",{\"1\":{\"133\":1}}],[\"数据加密\",{\"1\":{\"129\":1,\"137\":1}}],[\"数据格式化\",{\"1\":{\"129\":1}}],[\"数据链路层会将0\",{\"1\":{\"128\":1}}],[\"数据链路层\",{\"1\":{\"128\":1,\"129\":2}}],[\"数据传递\",{\"1\":{\"119\":1}}],[\"数据类型转换的工具函数\",{\"1\":{\"225\":1}}],[\"数据类型\",{\"0\":{\"71\":1},\"1\":{\"171\":2}}],[\"数组没有\",{\"1\":{\"289\":1}}],[\"数组的长度是固定的\",{\"1\":{\"289\":1}}],[\"数组的容量一经创建就无法修改\",{\"1\":{\"77\":1}}],[\"数组和切片有什么区别\",{\"0\":{\"289\":1}}],[\"数组用组合字面量方式的定义和初始化可以如下\",{\"1\":{\"280\":1}}],[\"数组字面量\",{\"1\":{\"274\":1}}],[\"数组由一系列数据组成\",{\"1\":{\"77\":1}}],[\"数组\",{\"0\":{\"77\":1},\"1\":{\"274\":1,\"280\":2}}],[\"布尔类型的值为\",{\"1\":{\"76\":1}}],[\"布尔类型\",{\"0\":{\"76\":1},\"1\":{\"276\":1}}],[\"复合主键\",{\"1\":{\"217\":1}}],[\"复合类型\",{\"0\":{\"57\":1},\"1\":{\"49\":1}}],[\"复制\",{\"1\":{\"109\":1}}],[\"复数类型\",{\"1\":{\"276\":1}}],[\"复数包含虚数和实数\",{\"1\":{\"74\":1}}],[\"复数\",{\"0\":{\"74\":1}}],[\"8进制\",{\"1\":{\"278\":1}}],[\"8888\",{\"1\":{\"176\":4}}],[\"8字节\",{\"1\":{\"162\":1}}],[\"8s+\",{\"1\":{\"149\":1}}],[\"8s\",{\"1\":{\"149\":1}}],[\"8a2e\",{\"1\":{\"143\":1}}],[\"85a3\",{\"1\":{\"143\":1}}],[\"8\",{\"1\":{\"72\":1,\"78\":1,\"140\":2,\"141\":1,\"171\":4,\"192\":1,\"232\":3,\"233\":1,\"235\":3,\"236\":1,\"237\":3,\"277\":4,\"287\":8}}],[\"8080\",{\"1\":{\"15\":2}}],[\"80\",{\"1\":{\"4\":1,\"133\":1,\"176\":1}}],[\"位数\",{\"1\":{\"170\":1}}],[\"位由硬件厂商管理\",{\"1\":{\"170\":1}}],[\"位由\",{\"1\":{\"170\":1}}],[\"位运算符\",{\"0\":{\"87\":1}}],[\"位浮点数\",{\"1\":{\"74\":2}}],[\"位\",{\"1\":{\"72\":1,\"73\":1,\"74\":1,\"87\":2,\"140\":1,\"170\":1,\"171\":13}}],[\"位置执行\",{\"1\":{\"66\":1}}],[\"~\",{\"1\":{\"72\":2}}],[\"∞\",{\"1\":{\"72\":1}}],[\"范围更大\",{\"1\":{\"292\":1}}],[\"范围内的字符\",{\"1\":{\"284\":1}}],[\"范围查询需要中序遍历\",{\"1\":{\"267\":1}}],[\"范围0~65535字节\",{\"1\":{\"147\":1}}],[\"范围\",{\"1\":{\"72\":1,\"147\":3,\"175\":1}}],[\"整数类型\",{\"1\":{\"276\":1}}],[\"整数有两种类型\",{\"1\":{\"72\":1}}],[\"整数\",{\"0\":{\"72\":1}}],[\"获取内存地址的对象\",{\"1\":{\"274\":1}}],[\"获取元组的值等\",{\"1\":{\"225\":1}}],[\"获取到目标子网路由器的\",{\"1\":{\"172\":1}}],[\"获取到对方的序列号\",{\"1\":{\"149\":1}}],[\"获取域名对应\",{\"1\":{\"165\":1}}],[\"获取签名过的数字证书\",{\"1\":{\"137\":1}}],[\"获取切片容量\",{\"1\":{\"107\":1}}],[\"获取切片长度\",{\"1\":{\"107\":1}}],[\"获取变量地址\",{\"1\":{\"81\":1}}],[\"获取字段内容\",{\"1\":{\"80\":1}}],[\"获取对应的\",{\"1\":{\"79\":1,\"98\":1}}],[\"获取\",{\"0\":{\"102\":1},\"1\":{\"69\":1,\"102\":1}}],[\"之间\",{\"1\":{\"245\":1}}],[\"之间数据共享\",{\"1\":{\"111\":1}}],[\"之所以需要四次挥手\",{\"1\":{\"149\":1}}],[\"之前\",{\"1\":{\"140\":1}}],[\"之前变量的最终结果\",{\"1\":{\"69\":1}}],[\"之前执行意味着可以使用\",{\"1\":{\"69\":1}}],[\"之前或执行完之后执行动作\",{\"1\":{\"69\":1}}],[\"之后\",{\"1\":{\"30\":1}}],[\"y=\",{\"1\":{\"229\":1}}],[\"y\",{\"1\":{\"67\":3,\"149\":1,\"229\":3,\"284\":1,\"285\":1}}],[\"让用户感觉很魔幻\",{\"1\":{\"269\":1}}],[\"让开发者可以专注于业务逻辑的实现\",{\"1\":{\"200\":2,\"205\":2,\"224\":1}}],[\"让\",{\"1\":{\"67\":1}}],[\"遍历时是有序还是无序的\",{\"0\":{\"301\":1}}],[\"遍历\",{\"0\":{\"99\":1},\"1\":{\"65\":1,\"99\":4,\"225\":1}}],[\"循环\",{\"1\":{\"65\":1}}],[\"768\",{\"1\":{\"159\":1}}],[\"7334\",{\"1\":{\"143\":1}}],[\"70k+\",{\"1\":{\"196\":1}}],[\"70\",{\"1\":{\"84\":1}}],[\"7\",{\"1\":{\"64\":1,\"69\":1,\"78\":1,\"140\":1,\"232\":1,\"235\":1,\"237\":1,\"244\":1,\"287\":5}}],[\"63s\",{\"1\":{\"149\":1}}],[\"60byte\",{\"1\":{\"140\":1}}],[\"66\",{\"1\":{\"79\":1,\"98\":1}}],[\"648\",{\"1\":{\"287\":6}}],[\"64\",{\"1\":{\"72\":2,\"73\":1,\"74\":1}}],[\"6\",{\"1\":{\"64\":1,\"78\":1,\"108\":2,\"131\":1,\"140\":3,\"171\":1,\"226\":2,\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"244\":3,\"264\":1}}],[\"后\",{\"1\":{\"170\":1}}],[\"后等待\",{\"1\":{\"163\":1}}],[\"后会终止循环\",{\"1\":{\"114\":1}}],[\"后直接执行下一个\",{\"1\":{\"64\":1}}],[\"后面跟错误的描述\",{\"1\":{\"31\":1}}],[\"结合多种技术可以创建针对\",{\"1\":{\"163\":1}}],[\"结构\",{\"0\":{\"140\":1,\"161\":1},\"1\":{\"121\":1}}],[\"结构体用繁琐的常规方式如下\",{\"1\":{\"280\":1}}],[\"结构体用组合字面量方式来定义和初始化\",{\"1\":{\"280\":1}}],[\"结构体指针\",{\"1\":{\"274\":1}}],[\"结构体由一系列自定义的字段组成\",{\"1\":{\"80\":1}}],[\"结构体\",{\"0\":{\"80\":1},\"1\":{\"274\":1}}],[\"结构体中的嵌入式类型需放在顶部且用空行隔开\",{\"0\":{\"16\":1}}],[\"结果去重\",{\"0\":{\"242\":1}}],[\"结果\",{\"1\":{\"64\":2,\"66\":1,\"69\":2,\"70\":1,\"78\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"94\":2,\"95\":4,\"96\":1,\"99\":1,\"100\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"123\":1,\"125\":1,\"126\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"290\":1,\"291\":1,\"295\":1,\"296\":1,\"297\":1}}],[\"默认值为\",{\"1\":{\"172\":1}}],[\"默认的\",{\"1\":{\"133\":2}}],[\"默认操作\",{\"1\":{\"64\":1}}],[\"默认每个\",{\"1\":{\"64\":1}}],[\"需要保留的值放置到一个新的\",{\"1\":{\"303\":1}}],[\"需要了解\",{\"1\":{\"210\":1}}],[\"需要一定的时间来熟悉和掌握\",{\"1\":{\"200\":1}}],[\"需要自己查阅源码和文档\",{\"1\":{\"200\":1}}],[\"需要自己选择模板引擎\",{\"1\":{\"196\":1}}],[\"需要自己实现\",{\"1\":{\"196\":3}}],[\"需要分别发送\",{\"1\":{\"149\":1}}],[\"需要使用\",{\"1\":{\"143\":1}}],[\"需要使用函数保证主程序不退出\",{\"1\":{\"43\":1}}],[\"需要客户端用新的\",{\"1\":{\"132\":1}}],[\"需搭配\",{\"1\":{\"64\":1}}],[\"执行的顺序类似堆栈\",{\"1\":{\"291\":1}}],[\"执行系统命令等\",{\"1\":{\"225\":1}}],[\"执行\",{\"1\":{\"126\":1}}],[\"执行完一个\",{\"1\":{\"64\":1}}],[\"执行时\",{\"1\":{\"43\":1}}],[\"初始值为\",{\"1\":{\"155\":1}}],[\"初始容量为\",{\"1\":{\"60\":1}}],[\"初始化的\",{\"1\":{\"295\":1}}],[\"初始化一个复数\",{\"1\":{\"74\":1}}],[\"初始化并判断\",{\"1\":{\"65\":1}}],[\"初始化\",{\"0\":{\"25\":1},\"1\":{\"79\":1,\"98\":2,\"99\":1,\"100\":1,\"101\":1,\"288\":1}}],[\"初始化结构体指针时\",{\"1\":{\"24\":1}}],[\"初始化结构体指针\",{\"0\":{\"24\":1}}],[\"初始化结构体赋值的时候尽量添加字段名\",{\"1\":{\"21\":1}}],[\"初始化结构体\",{\"0\":{\"20\":1}}],[\"空的\",{\"1\":{\"60\":1}}],[\"虽然可以发起多个请求\",{\"1\":{\"135\":1}}],[\"虽然\",{\"1\":{\"60\":1}}],[\"底层为\",{\"1\":{\"60\":1}}],[\"自定义\",{\"1\":{\"217\":1}}],[\"自定义的错误命名则建议使用\",{\"1\":{\"31\":1}}],[\"自动迁移\",{\"1\":{\"217\":1}}],[\"自动解析的别名\",{\"1\":{\"167\":1}}],[\"自动\",{\"1\":{\"143\":1}}],[\"自动推断类型并初始化\",{\"1\":{\"56\":1}}],[\"自减\",{\"1\":{\"84\":1}}],[\"自增\",{\"1\":{\"84\":1}}],[\"普通变量存储数据\",{\"1\":{\"272\":1}}],[\"普通索引\",{\"0\":{\"253\":1},\"1\":{\"251\":1}}],[\"普通导入需要使用包名\",{\"1\":{\"53\":1}}],[\"普通错误变量的命名应该以\",{\"1\":{\"31\":1}}],[\"支持两个通配符\",{\"1\":{\"245\":1}}],[\"支持代码提示\",{\"1\":{\"192\":1}}],[\"支持多种数据库\",{\"1\":{\"210\":2}}],[\"支持多种语言\",{\"1\":{\"191\":1}}],[\"支持多个返回值\",{\"1\":{\"52\":1}}],[\"支持完善\",{\"1\":{\"187\":1}}],[\"支持\",{\"1\":{\"135\":2,\"217\":1}}],[\"支持三种请求方式\",{\"1\":{\"131\":1}}],[\"支持单行和多行导入\",{\"1\":{\"53\":1}}],[\"枚举\",{\"1\":{\"51\":1}}],[\"例如创建错误\",{\"1\":{\"225\":1}}],[\"例如创建元组\",{\"1\":{\"225\":1}}],[\"例如验证邮箱\",{\"1\":{\"225\":1}}],[\"例如字符串的拼接\",{\"1\":{\"225\":1}}],[\"例如获取环境变量\",{\"1\":{\"225\":1}}],[\"例如获取结构体字段的值\",{\"1\":{\"225\":1}}],[\"例如获取指针的值\",{\"1\":{\"225\":1}}],[\"例如切片的截取\",{\"1\":{\"225\":1}}],[\"例如发送\",{\"1\":{\"225\":1}}],[\"例如取绝对值\",{\"1\":{\"225\":1}}],[\"例如合并\",{\"1\":{\"225\":1}}],[\"例如函数的柯里化\",{\"1\":{\"225\":1}}],[\"例如填充字符串\",{\"1\":{\"225\":1}}],[\"例如读写文件\",{\"1\":{\"225\":1}}],[\"例如栈\",{\"1\":{\"225\":1}}],[\"例如格式化日期\",{\"1\":{\"225\":1}}],[\"例如将字符串转换为整数\",{\"1\":{\"225\":1}}],[\"例如判断某个值是否满足某个条件\",{\"1\":{\"225\":1}}],[\"例如比较两个值的大小\",{\"1\":{\"225\":1}}],[\"例如清理任务\",{\"1\":{\"194\":1}}],[\"例如值为5时\",{\"1\":{\"147\":1}}],[\"例如数据加密\",{\"1\":{\"140\":1}}],[\"例如在网络请求失败时进行重试\",{\"1\":{\"225\":1}}],[\"例如在电子商务的活动过程中安装了数字证书\",{\"1\":{\"136\":1}}],[\"例如在安全电子邮件中使用数字证书可以建构安全电子邮件证书\",{\"1\":{\"136\":1}}],[\"例如\",{\"1\":{\"132\":2,\"136\":1,\"137\":3,\"143\":2,\"160\":1,\"225\":1,\"229\":1,\"263\":1,\"272\":1}}],[\"例如net\",{\"1\":{\"9\":1}}],[\"例子\",{\"0\":{\"116\":1,\"226\":1},\"1\":{\"51\":1,\"52\":1,\"53\":1,\"55\":1,\"56\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"69\":1,\"70\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"107\":1,\"108\":1,\"109\":1,\"137\":1,\"141\":1,\"172\":1,\"194\":2,\"228\":1,\"233\":1,\"287\":1}}],[\"用来唯一标识网络设备\",{\"1\":{\"170\":1}}],[\"用来表示服务的类型\",{\"1\":{\"140\":1}}],[\"用来标识被分片的每一个分段相对于原始数据的位置\",{\"1\":{\"140\":1}}],[\"用来标识\",{\"1\":{\"140\":1}}],[\"用户终端\",{\"1\":{\"132\":1}}],[\"用于给任意的类型分配内存地址\",{\"1\":{\"288\":1}}],[\"用于表示\",{\"1\":{\"284\":2}}],[\"用于只返回匹配的行\",{\"1\":{\"233\":1}}],[\"用于比较数据的函数\",{\"1\":{\"225\":1}}],[\"用于根据源代码映射调整文件路径\",{\"1\":{\"194\":1}}],[\"用于根据不同条件执行不同的动作\",{\"1\":{\"64\":1}}],[\"用于映射源代码和编译后的文件\",{\"1\":{\"194\":1}}],[\"用于在调试器中显示\",{\"1\":{\"194\":1}}],[\"用于内部局域网使用\",{\"1\":{\"175\":1}}],[\"用于对一个站点或域进行随机子域攻击\",{\"1\":{\"168\":1}}],[\"用于对线上数据进行加密\",{\"1\":{\"136\":1}}],[\"用于一个主机对整个局域网上所有主机通信\",{\"1\":{\"162\":1}}],[\"用于两个主机之间端对端的通信\",{\"1\":{\"162\":1}}],[\"用于标记已经\",{\"1\":{\"152\":1}}],[\"用于记录已传输的数据包\",{\"1\":{\"152\":1}}],[\"用于流量控制\",{\"1\":{\"147\":1}}],[\"用于测量数据包从源到目的地传输所需的时间\",{\"1\":{\"140\":1}}],[\"用于提供网络安全功能\",{\"1\":{\"140\":1}}],[\"用于提交信息到目标地址\",{\"1\":{\"131\":1}}],[\"用于检测报文是否损坏\",{\"1\":{\"140\":1}}],[\"用于分片重组\",{\"1\":{\"140\":1}}],[\"用于从万维网服务器传输超文本到本地浏览器的传送协议\",{\"1\":{\"133\":1}}],[\"用于替换原数据\",{\"1\":{\"131\":1}}],[\"用于数据提交和文件上传\",{\"1\":{\"131\":1}}],[\"用于获取数据\",{\"1\":{\"131\":1}}],[\"用于端到端数据的通信\",{\"1\":{\"111\":1}}],[\"用于存储域名和ip地址相互映射的关系\",{\"1\":{\"165\":1}}],[\"用于存储\",{\"1\":{\"72\":2}}],[\"用于创建协程\",{\"1\":{\"70\":1}}],[\"用于函数\",{\"1\":{\"69\":1}}],[\"用于终止函数的执行并返回0个或多个返回值\",{\"1\":{\"69\":1}}],[\"用于跳过当前循环的剩余语句\",{\"1\":{\"65\":1}}],[\"用于循环执行动作\",{\"1\":{\"65\":1}}],[\"用于条件判断的函数\",{\"1\":{\"225\":1}}],[\"用于条件判断\",{\"1\":{\"63\":1}}],[\"用于接收\",{\"1\":{\"58\":1}}],[\"用于发送方和接收方协商最大报文长度\",{\"1\":{\"147\":1}}],[\"用于发送\",{\"1\":{\"58\":1}}],[\"用于发送和接收\",{\"1\":{\"58\":1}}],[\"用于定义\",{\"1\":{\"119\":1}}],[\"用于定义变量类型\",{\"1\":{\"55\":1}}],[\"用于定义包名\",{\"1\":{\"54\":1}}],[\"用于导入包\",{\"1\":{\"53\":1}}],[\"用于声明结构体\",{\"1\":{\"61\":1}}],[\"用于声明集合\",{\"1\":{\"60\":1}}],[\"用于声明接口\",{\"1\":{\"59\":1}}],[\"用于声明信道\",{\"1\":{\"58\":1}}],[\"用于声明公开或者私有变量\",{\"1\":{\"56\":1}}],[\"用于声明函数\",{\"1\":{\"52\":1}}],[\"用于声明常量\",{\"1\":{\"51\":1}}],[\"用于修饰特殊的\",{\"1\":{\"49\":1}}],[\"用var声明的切片\",{\"1\":{\"17\":1}}],[\"个\",{\"1\":{\"286\":1}}],[\"个字节数\",{\"1\":{\"285\":4}}],[\"个字符\",{\"1\":{\"4\":1}}],[\"个保留的关键字\",{\"1\":{\"49\":1}}],[\"添加判断代码判断是否溢出\",{\"1\":{\"292\":1}}],[\"添加数据\",{\"1\":{\"109\":1}}],[\"添加键值\",{\"1\":{\"99\":1}}],[\"添加另一个\",{\"1\":{\"43\":1}}],[\"添加将实体添加到列表中\",{\"1\":{\"36\":1}}],[\"请求类型\",{\"1\":{\"194\":1}}],[\"请求到达路由器后路由器又会指派一个端口给该请求\",{\"1\":{\"176\":1}}],[\"请求的工具函数\",{\"1\":{\"225\":1}}],[\"请求的应答\",{\"1\":{\"173\":1}}],[\"请求的时候会返回\",{\"1\":{\"163\":1}}],[\"请求报文请求解析\",{\"1\":{\"173\":1}}],[\"请求报文\",{\"1\":{\"171\":1}}],[\"请求报文中\",{\"1\":{\"171\":2}}],[\"请求或应答报文中为\",{\"1\":{\"171\":3}}],[\"请求受到影响\",{\"1\":{\"163\":1}}],[\"请求使得服务器在处理大量回应时资源耗尽而达到目的\",{\"1\":{\"163\":1}}],[\"请求\",{\"1\":{\"135\":1,\"163\":2,\"173\":1,\"225\":1}}],[\"请求将会被处理\",{\"1\":{\"132\":1}}],[\"请求成功\",{\"1\":{\"132\":1}}],[\"请求一个指定资源\",{\"1\":{\"131\":1}}],[\"请求方法\",{\"0\":{\"131\":1},\"1\":{\"131\":1}}],[\"请提前赋值\",{\"1\":{\"47\":1}}],[\"请执行此操作\",{\"1\":{\"43\":2}}],[\"请包装错误并返回\",{\"1\":{\"32\":1}}],[\"停止容器\",{\"1\":{\"182\":1}}],[\"停止\",{\"1\":{\"42\":2}}],[\"避免重复拷贝\",{\"1\":{\"293\":1}}],[\"避免内存泄漏\",{\"1\":{\"273\":1}}],[\"避免内网主机直接暴露在公网\",{\"1\":{\"177\":1}}],[\"避免选择不常用的列\",{\"1\":{\"263\":1}}],[\"避免数据重复\",{\"1\":{\"263\":1}}],[\"避免无限制的创建\",{\"1\":{\"42\":1}}],[\"避免使用\",{\"0\":{\"38\":1}}],[\"避免使用内置名称\",{\"0\":{\"37\":1}}],[\"无序的\",{\"1\":{\"301\":1}}],[\"无类型的常量会转化成对应的类型\",{\"1\":{\"277\":1}}],[\"无类型常量\",{\"1\":{\"277\":1}}],[\"无状态\",{\"1\":{\"139\":1}}],[\"无连接\",{\"1\":{\"135\":1,\"139\":1,\"160\":1,\"162\":1}}],[\"无内容\",{\"1\":{\"132\":1}}],[\"无\",{\"1\":{\"129\":2}}],[\"无缓冲区的信道会被阻塞直到数据被接收\",{\"1\":{\"112\":1}}],[\"无缓冲\",{\"1\":{\"112\":1}}],[\"无缓冲信道\",{\"1\":{\"58\":1}}],[\"无符号数包含\",{\"1\":{\"72\":1}}],[\"无符号数\",{\"1\":{\"72\":1}}],[\"无法提供服务\",{\"1\":{\"163\":1}}],[\"无法修改已签名的文件\",{\"1\":{\"137\":1}}],[\"无法修改\",{\"1\":{\"75\":1}}],[\"无法执行\",{\"1\":{\"40\":1}}],[\"无法全部执行\",{\"1\":{\"40\":1}}],[\"无需调用make\",{\"1\":{\"17\":1}}],[\"原生支持\",{\"1\":{\"143\":2}}],[\"原生支持有限\",{\"1\":{\"143\":1}}],[\"原因是\",{\"1\":{\"300\":1}}],[\"原因\",{\"1\":{\"40\":1}}],[\"原子操作\",{\"0\":{\"35\":1}}],[\"主键索引是一种特殊的唯一索引\",{\"1\":{\"251\":1}}],[\"主键索引\",{\"0\":{\"255\":1},\"1\":{\"251\":1}}],[\"主键不能为空\",{\"1\":{\"228\":1}}],[\"主键和唯一键的区别\",{\"1\":{\"228\":1}}],[\"主键是数据列中用来唯一标识的字段\",{\"1\":{\"228\":1}}],[\"主键\",{\"1\":{\"228\":2}}],[\"主机向路由器发送数据\",{\"1\":{\"172\":1}}],[\"主机会尝试获取默认网关\",{\"1\":{\"172\":1}}],[\"主机是否处于同一个网段\",{\"1\":{\"172\":1}}],[\"主机首先会判断\",{\"1\":{\"172\":1}}],[\"主机不在一个局域网下\",{\"1\":{\"172\":1}}],[\"主机和\",{\"1\":{\"172\":1}}],[\"主机发送消息\",{\"1\":{\"172\":1}}],[\"主机在收到回应后即可向\",{\"1\":{\"172\":1}}],[\"主机在收到广播后会回应\",{\"1\":{\"172\":1}}],[\"主机自己的\",{\"1\":{\"172\":1}}],[\"主机的\",{\"1\":{\"172\":5}}],[\"主机名称\",{\"1\":{\"172\":1}}],[\"主机\",{\"1\":{\"167\":2,\"172\":1}}],[\"主域名\",{\"1\":{\"166\":1}}],[\"主程序中\",{\"1\":{\"40\":1}}],[\"主要有两个运算符号\",{\"1\":{\"272\":1}}],[\"主要通过\",{\"1\":{\"269\":1}}],[\"主要保证数据更新的准确\",{\"1\":{\"269\":1}}],[\"主要功能\",{\"0\":{\"225\":1}}],[\"主要解决了\",{\"1\":{\"152\":1}}],[\"主要用户加密电子邮件的传输\",{\"1\":{\"136\":1}}],[\"主要用于\",{\"1\":{\"288\":1}}],[\"主要用于组合索引\",{\"1\":{\"264\":1}}],[\"主要用于查询是否满足子查询返回的数据\",{\"1\":{\"248\":1}}],[\"主要用于给括号添加颜色\",{\"1\":{\"188\":1}}],[\"主要用于广域网的\",{\"1\":{\"175\":1}}],[\"主要用于通过\",{\"1\":{\"170\":1}}],[\"主要用于部分更新\",{\"1\":{\"131\":1}}],[\"主要用于测试或诊断\",{\"1\":{\"131\":1}}],[\"主要用于帮助开发者快速了解\",{\"1\":{\"1\":1}}],[\"主要负责数据格式的转换\",{\"1\":{\"128\":1}}],[\"主要实现相邻节点间比特流的透明传输\",{\"1\":{\"128\":1}}],[\"主要原因是如果嵌入多个类型\",{\"1\":{\"36\":1}}],[\"而深拷贝会改变地址的内存内的数组值\",{\"1\":{\"287\":1}}],[\"而结构体\",{\"1\":{\"280\":1}}],[\"而下面这样就没错\",{\"1\":{\"279\":1}}],[\"而这种字面量是不可寻址的\",{\"1\":{\"279\":1}}],[\"而这时\",{\"1\":{\"269\":1}}],[\"而有类型常量在赋值的时\",{\"1\":{\"277\":1}}],[\"而指针变量存储的是数据的地址\",{\"1\":{\"272\":1}}],[\"而其他连接到路由器的设备都是共用这个广域网的\",{\"1\":{\"175\":1}}],[\"而不需要返回值\",{\"1\":{\"273\":1}}],[\"而不用花费过多精力在工具函数和工具方法的开发上\",{\"1\":{\"224\":1}}],[\"而不用花费过多精力在微服务的开发和维护上\",{\"1\":{\"200\":1,\"205\":1}}],[\"而不用按照顺序一一对应\",{\"1\":{\"135\":1}}],[\"而不立即为连接分配资源\",{\"1\":{\"163\":1}}],[\"而不是复制整个数据\",{\"1\":{\"273\":1}}],[\"而不是新建一个\",{\"1\":{\"263\":1}}],[\"而不是整个局域网上的所有主机\",{\"1\":{\"162\":1}}],[\"而不是在每个函数中处理致命错误\",{\"1\":{\"40\":1}}],[\"而不是使用\",{\"1\":{\"40\":1}}],[\"而不是\",{\"0\":{\"46\":1},\"1\":{\"24\":1,\"25\":1,\"46\":1}}],[\"而不是嵌套代码块\",{\"1\":{\"12\":1}}],[\"而不是net\",{\"1\":{\"9\":1}}],[\"而加密过程是使用了非对称加密实现\",{\"1\":{\"134\":1}}],[\"而是一个副本\",{\"1\":{\"132\":1}}],[\"而\",{\"1\":{\"40\":1,\"44\":1,\"46\":1}}],[\"退出\",{\"0\":{\"43\":1}}],[\"退出了\",{\"1\":{\"42\":1}}],[\"退出程序\",{\"1\":{\"40\":1}}],[\"退出主程序\",{\"0\":{\"40\":1}}],[\"41\",{\"1\":{\"192\":1}}],[\"48位\",{\"1\":{\"170\":1}}],[\"48\",{\"1\":{\"170\":1,\"171\":8}}],[\"48s\",{\"1\":{\"39\":1}}],[\"4s+\",{\"1\":{\"149\":1}}],[\"4s\",{\"1\":{\"149\":1}}],[\"443\",{\"1\":{\"133\":1}}],[\"40字节\",{\"1\":{\"143\":1}}],[\"4020\",{\"1\":{\"141\":1}}],[\"404\",{\"1\":{\"132\":1,\"304\":1}}],[\"403\",{\"1\":{\"132\":1}}],[\"401\",{\"1\":{\"132\":1}}],[\"4000\",{\"1\":{\"141\":1}}],[\"400\",{\"1\":{\"132\":1}}],[\"4xx\",{\"1\":{\"132\":1}}],[\"49\",{\"1\":{\"84\":1}}],[\"4\",{\"1\":{\"39\":2,\"64\":2,\"65\":1,\"66\":1,\"69\":1,\"77\":1,\"78\":1,\"90\":1,\"106\":2,\"108\":2,\"109\":2,\"140\":4,\"152\":3,\"171\":1,\"173\":1,\"192\":2,\"226\":2,\"231\":1,\"232\":3,\"233\":4,\"235\":5,\"236\":4,\"237\":5,\"285\":1}}],[\"<>\",{\"1\":{\"245\":1}}],[\"<project\",{\"1\":{\"194\":1}}],[\"<target\",{\"1\":{\"194\":1}}],[\"<<=\",{\"1\":{\"88\":2}}],[\"<<\",{\"1\":{\"87\":2,\"88\":1,\"90\":1}}],[\"<=\",{\"1\":{\"65\":1,\"85\":2,\"90\":1,\"245\":1,\"263\":1}}],[\"<\",{\"1\":{\"39\":4,\"42\":4,\"43\":2,\"58\":1,\"65\":1,\"66\":1,\"67\":5,\"69\":1,\"78\":1,\"85\":2,\"90\":1,\"113\":4,\"114\":1,\"115\":3,\"116\":1,\"120\":1,\"125\":1,\"126\":1,\"154\":1,\"226\":1,\"245\":1,\"263\":1}}],[\"扩容的次数\",{\"1\":{\"39\":1}}],[\"应用程序\",{\"1\":{\"196\":2}}],[\"应用广泛\",{\"1\":{\"160\":1}}],[\"应用层\",{\"1\":{\"128\":1,\"129\":7}}],[\"应答报文\",{\"1\":{\"171\":1}}],[\"应答\",{\"1\":{\"152\":1,\"171\":1}}],[\"应答机制确保数据包成功送达\",{\"1\":{\"151\":1}}],[\"应尽快传送\",{\"1\":{\"147\":1}}],[\"应重置文档视图\",{\"1\":{\"132\":1}}],[\"应该选择查询频繁的列\",{\"1\":{\"263\":1}}],[\"应该选择区分度高的索引\",{\"1\":{\"263\":1}}],[\"应该优先选择唯一性索引\",{\"1\":{\"263\":1}}],[\"应该注意以下几点\",{\"1\":{\"42\":1}}],[\"应该声明\",{\"1\":{\"41\":1}}],[\"应该使用\",{\"1\":{\"29\":1,\"40\":1}}],[\"应该使用别名\",{\"1\":{\"8\":1}}],[\"应提前给\",{\"1\":{\"39\":1}}],[\"提高索引的查询效率\",{\"1\":{\"263\":1}}],[\"提高索引的利用率\",{\"1\":{\"263\":1}}],[\"提高数据的存储效率\",{\"1\":{\"258\":1}}],[\"提高数据的唯一性\",{\"1\":{\"250\":1}}],[\"提高查询效率\",{\"1\":{\"258\":1,\"263\":1,\"264\":1}}],[\"提高查询速度\",{\"1\":{\"250\":1}}],[\"提高了查询效率\",{\"1\":{\"264\":1,\"267\":1}}],[\"提高了安全性\",{\"1\":{\"181\":1}}],[\"提高了开发效率\",{\"1\":{\"181\":1}}],[\"提高资源利用率\",{\"1\":{\"181\":1}}],[\"提高性能\",{\"1\":{\"39\":1}}],[\"提示\",{\"1\":{\"163\":1,\"171\":1,\"183\":1}}],[\"提交代码步骤\",{\"0\":{\"185\":1}}],[\"提交代码\",{\"1\":{\"184\":1}}],[\"提交更新的信息\",{\"1\":{\"131\":1}}],[\"提交的内容必须是原创\",{\"1\":{\"1\":1}}],[\"提供钩子和拦截器\",{\"1\":{\"210\":1}}],[\"提供额外的防御层\",{\"1\":{\"163\":1}}],[\"提供极大数量的地址\",{\"1\":{\"143\":1}}],[\"提供约43亿个地址\",{\"1\":{\"143\":1}}],[\"提供加密处理\",{\"1\":{\"133\":1}}],[\"提供端对端的接口\",{\"1\":{\"129\":1}}],[\"提供了类似流式处理的函数\",{\"1\":{\"225\":1}}],[\"提供了大量可以直接使用的函数\",{\"1\":{\"224\":1}}],[\"提供了大量的配置选项\",{\"1\":{\"217\":1}}],[\"提供了大量的功能\",{\"1\":{\"217\":1}}],[\"提供了一些常用的数据结构\",{\"1\":{\"225\":1}}],[\"提供了一些常用的算法函数\",{\"1\":{\"225\":1}}],[\"提供了一些常用的工具函数和工具方法\",{\"1\":{\"224\":1}}],[\"提供了一站式的微服务开发解决方案\",{\"1\":{\"200\":1,\"205\":2}}],[\"提供了模板功能\",{\"1\":{\"210\":1}}],[\"提供了详细的使用说明和示例代码\",{\"1\":{\"205\":1}}],[\"提供了接口定义\",{\"1\":{\"201\":1,\"206\":1}}],[\"提供了诸多中间件\",{\"1\":{\"196\":1}}],[\"提供了丰富的中间件\",{\"1\":{\"196\":1}}],[\"提供了丰富的插件和工具\",{\"1\":{\"200\":1}}],[\"提供了丰富的插件\",{\"1\":{\"191\":1}}],[\"提供了丰富的功能和插件\",{\"1\":{\"187\":1}}],[\"提供了多种创建\",{\"1\":{\"93\":1}}],[\"提供了\",{\"1\":{\"92\":1,\"94\":1}}],[\"提前配置\",{\"0\":{\"39\":1}}],[\"对内存占用会多一些\",{\"1\":{\"293\":1}}],[\"对同一字段的多次读取结果都是一致的\",{\"1\":{\"269\":1}}],[\"对比可重复读\",{\"1\":{\"269\":1}}],[\"对比两个指纹α和β\",{\"1\":{\"137\":1}}],[\"对一组特定的主机进行通信\",{\"1\":{\"162\":1}}],[\"对网站\",{\"1\":{\"136\":1}}],[\"对某些预计算方法进行初始化优化\",{\"1\":{\"38\":1}}],[\"对于常见的类型都可以使用值传递\",{\"1\":{\"293\":1}}],[\"对于相同数量的条目\",{\"1\":{\"267\":1}}],[\"对于特定数量的条目\",{\"1\":{\"267\":1}}],[\"对于其他类型\",{\"1\":{\"35\":1}}],[\"对于所有其他案例\",{\"1\":{\"32\":1}}],[\"对于未导出的顶层常量和变量使用\",{\"0\":{\"15\":1}}],[\"时可以触发索引\",{\"1\":{\"263\":1}}],[\"时间字段表示查询最远的日期\",{\"1\":{\"249\":1}}],[\"时间字段表示查询最近的日期\",{\"1\":{\"249\":1}}],[\"时间戳选项\",{\"1\":{\"140\":1}}],[\"时要注意必须有接收数据端\",{\"1\":{\"117\":1}}],[\"时\",{\"1\":{\"38\":1,\"147\":1,\"237\":1}}],[\"时表示一个长度为\",{\"1\":{\"17\":1}}],[\"等索引\",{\"1\":{\"263\":1}}],[\"等搭配使用\",{\"1\":{\"247\":1}}],[\"等同于\",{\"1\":{\"88\":1,\"125\":1,\"233\":1}}],[\"等于\",{\"1\":{\"74\":1,\"245\":1}}],[\"等价于\",{\"1\":{\"72\":2}}],[\"等待调试器连接\",{\"1\":{\"194\":1}}],[\"等待多个通信操作\",{\"1\":{\"67\":1}}],[\"等待\",{\"0\":{\"43\":1}}],[\"等序列化的\",{\"1\":{\"41\":1}}],[\"等\",{\"1\":{\"37\":1,\"128\":1,\"193\":1,\"194\":2,\"196\":1,\"210\":1,\"225\":3}}],[\"移除从列表中移除实体\",{\"1\":{\"36\":1}}],[\"级联失败\",{\"1\":{\"34\":1}}],[\"是线程安全的\",{\"1\":{\"300\":1}}],[\"是线程安全的吗\",{\"0\":{\"300\":1}}],[\"是通过保存数据在某个时间点的快照来实现的\",{\"1\":{\"269\":1}}],[\"是微软推出的开源代码编辑器\",{\"1\":{\"191\":1}}],[\"是基本要求\",{\"1\":{\"183\":1}}],[\"是开源的\",{\"1\":{\"181\":1}}],[\"是未来的主要应用\",{\"1\":{\"178\":1}}],[\"是预留的广播地址\",{\"1\":{\"170\":1}}],[\"是不会报错的\",{\"1\":{\"297\":1}}],[\"是不可寻址的\",{\"1\":{\"279\":1}}],[\"是不可修改的\",{\"1\":{\"170\":1}}],[\"是不是在crl吊销列表里面\",{\"1\":{\"134\":1}}],[\"是无法得知其是否安全完整到达的\",{\"1\":{\"160\":1}}],[\"是osi\",{\"1\":{\"159\":1}}],[\"是指在网络通信中\",{\"1\":{\"152\":1}}],[\"是指数据从发送方传输到接收方并返回所需的时间\",{\"1\":{\"152\":1}}],[\"是全双工协议\",{\"1\":{\"149\":1}}],[\"是因为\",{\"1\":{\"149\":1}}],[\"是安全的\",{\"1\":{\"133\":1}}],[\"是带有安全性的\",{\"1\":{\"133\":1}}],[\"是超文本传输协议\",{\"1\":{\"133\":1}}],[\"是否存在\",{\"0\":{\"101\":1},\"1\":{\"101\":1}}],[\"是否包含目标类型的\",{\"1\":{\"95\":1}}],[\"是一种常用的索引数据结构\",{\"1\":{\"266\":1,\"267\":1}}],[\"是一种面向连接的\",{\"1\":{\"146\":1}}],[\"是一种键值映射表\",{\"1\":{\"79\":1,\"98\":1}}],[\"是一个强大的\",{\"1\":{\"217\":1}}],[\"是一个简单而强大的\",{\"1\":{\"210\":1}}],[\"是一个\",{\"1\":{\"205\":1,\"224\":1}}],[\"是一个集成了各种工程实践的微服务框架\",{\"1\":{\"200\":1}}],[\"是一个轻量级的\",{\"1\":{\"196\":1}}],[\"是一个用\",{\"1\":{\"196\":1}}],[\"是一个非常热门的\",{\"1\":{\"196\":1}}],[\"是一个非常重要的配置文件\",{\"1\":{\"193\":1}}],[\"是一个非常好用的远程开发插件\",{\"1\":{\"192\":1}}],[\"是一个非常好用的\",{\"1\":{\"192\":2}}],[\"是一个非常好用的字符串修改插件\",{\"1\":{\"188\":1}}],[\"是一个非常实用的插件\",{\"1\":{\"188\":1}}],[\"是一个开源的应用容器引擎\",{\"1\":{\"180\":1}}],[\"是一个分布式数据库\",{\"1\":{\"165\":1}}],[\"是一个正的偏移量\",{\"1\":{\"147\":1}}],[\"是一个信道\",{\"1\":{\"111\":1}}],[\"是一个实体列表\",{\"1\":{\"36\":2}}],[\"是一个有效的\",{\"0\":{\"17\":1}}],[\"是异步执行的\",{\"1\":{\"44\":1}}],[\"是\",{\"1\":{\"34\":1,\"119\":1,\"141\":1,\"162\":1,\"170\":1,\"187\":1,\"201\":1,\"206\":1,\"264\":1,\"266\":1,\"283\":2}}],[\"尽量扩展索引而不是新建索引\",{\"1\":{\"263\":1}}],[\"尽量使用前缀索引\",{\"1\":{\"263\":1}}],[\"尽量使用\",{\"1\":{\"46\":1}}],[\"尽量不使用\",{\"0\":{\"34\":1}}],[\"尽量减少变量作用域\",{\"1\":{\"18\":1}}],[\"务必使用\",{\"1\":{\"33\":1,\"34\":1}}],[\"则接下来的数据将会溢出\",{\"1\":{\"292\":1}}],[\"则不会触发索引查询\",{\"1\":{\"263\":1}}],[\"则列值的组合必须唯一\",{\"1\":{\"251\":1}}],[\"则都属于超键\",{\"1\":{\"228\":1}}],[\"则直接从缓存表中获取\",{\"1\":{\"172\":1}}],[\"则根服务器会将顶级服务器的\",{\"1\":{\"166\":1}}],[\"则服务器使用\",{\"1\":{\"163\":1}}],[\"则意味着不允许回信\",{\"1\":{\"161\":1}}],[\"则下一次超时时间为当前值的两倍\",{\"1\":{\"152\":1}}],[\"则tcp头部长度为20字节\",{\"1\":{\"147\":1}}],[\"则需要向根服务器发送查询请求\",{\"1\":{\"166\":1}}],[\"则需要进行分段\",{\"1\":{\"147\":1}}],[\"则需要重新建立连接\",{\"1\":{\"144\":1}}],[\"则需要对数据包进行分片\",{\"1\":{\"141\":1}}],[\"则此报文会被丢弃\",{\"1\":{\"140\":1}}],[\"则证明证书是合法的\",{\"1\":{\"137\":1}}],[\"则信道已经\",{\"1\":{\"114\":1}}],[\"则\",{\"1\":{\"114\":1,\"172\":2,\"229\":1,\"303\":2}}],[\"则结果为\",{\"1\":{\"86\":5}}],[\"则会在网络中发送广播\",{\"1\":{\"172\":1}}],[\"则会进入\",{\"1\":{\"166\":1}}],[\"则会到系统缓存中查询\",{\"1\":{\"166\":1}}],[\"则会执行拥塞避免算法\",{\"1\":{\"156\":1}}],[\"则会重传\",{\"1\":{\"149\":1}}],[\"则会随机选择一个\",{\"1\":{\"115\":1}}],[\"则会随机执行一个\",{\"1\":{\"67\":1}}],[\"则会导致大量公开接口和变量混杂\",{\"1\":{\"36\":1}}],[\"则推荐使用\",{\"1\":{\"35\":1}}],[\"则匹配该错误案例并正常降级\",{\"1\":{\"32\":1}}],[\"则应该明确返回错误可以来源\",{\"1\":{\"32\":1}}],[\"堆栈中更靠上的调用程序将处理其他错误\",{\"1\":{\"32\":1}}],[\"堆栈中更靠上的调用程序将处理该错误\",{\"1\":{\"32\":1}}],[\"堆栈中的调用程序可能会对该错误采取类似的操作\",{\"1\":{\"32\":1}}],[\"但它们之间有一些区别\",{\"1\":{\"282\":1}}],[\"但其实是事务b刚插入进来的\",{\"1\":{\"269\":1}}],[\"但其目的是为了确保数据的可靠传输\",{\"1\":{\"152\":1}}],[\"但不能使用\",{\"1\":{\"263\":1}}],[\"但允许有空值\",{\"1\":{\"251\":1}}],[\"但允许在路径上的其他节点进行一定的选择\",{\"1\":{\"140\":1}}],[\"但路由要求必须分片报文\",{\"1\":{\"140\":1}}],[\"但服务器必须按照接收请求的顺序发送响应\",{\"1\":{\"135\":1}}],[\"但资源只是临时被移动\",{\"1\":{\"132\":1}}],[\"但返回的meta信息不在原始的服务器\",{\"1\":{\"132\":1}}],[\"但是锁会导致性能问题\",{\"1\":{\"269\":1}}],[\"但是还未提交\",{\"1\":{\"269\":1}}],[\"但是如果遇到\",{\"1\":{\"263\":1}}],[\"但是可以同时运行几百上千个容器\",{\"1\":{\"180\":1}}],[\"但是占用资源更少\",{\"1\":{\"180\":1}}],[\"但是这也导致正常的\",{\"1\":{\"163\":1}}],[\"但是服务器处理时内部发生了错误\",{\"1\":{\"132\":1}}],[\"但是只返回响应头\",{\"1\":{\"131\":1}}],[\"但是建议在初始化的时候就配置容量\",{\"1\":{\"60\":1}}],[\"但是由于\",{\"1\":{\"38\":1}}],[\"但是切片建议使用\",{\"1\":{\"6\":1}}],[\"但收效甚微\",{\"1\":{\"32\":1}}],[\"描述文本\",{\"1\":{\"167\":1}}],[\"描述\",{\"1\":{\"32\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"89\":1,\"131\":1,\"132\":1,\"140\":3,\"147\":1,\"161\":1,\"162\":1,\"163\":1,\"167\":1,\"168\":1,\"171\":1,\"182\":1,\"184\":1,\"193\":1,\"194\":1,\"225\":1,\"245\":1,\"251\":1,\"269\":1}}],[\"querydictionarydetails\",{\"1\":{\"214\":1}}],[\"query\",{\"1\":{\"214\":2}}],[\"quit\",{\"1\":{\"67\":6}}],[\"qos\",{\"1\":{\"143\":1}}],[\"q\",{\"1\":{\"31\":2,\"32\":3,\"87\":4}}],[\"匹配错误并适当降级\",{\"1\":{\"32\":1}}],[\"匹配\",{\"1\":{\"31\":1}}],[\"因此元素的地址会不断变化\",{\"1\":{\"301\":1}}],[\"因此可以像链表一样进行顺序访问\",{\"1\":{\"267\":1}}],[\"因此比虚拟机更轻量级\",{\"1\":{\"181\":1}}],[\"因此攻击者通过频繁向服务器的多个端口发送大量\",{\"1\":{\"163\":1}}],[\"因此还需要重传\",{\"1\":{\"152\":1}}],[\"因此超时时间为\",{\"1\":{\"149\":1}}],[\"因此需要两端分别在传输完成后发送断开连接的指令\",{\"1\":{\"149\":1}}],[\"因此\",{\"1\":{\"149\":1}}],[\"因此我们没有必要显式指定\",{\"1\":{\"14\":1}}],[\"因为唯一性索引可以保证数据的唯一性\",{\"1\":{\"263\":1}}],[\"因为没有加密和解密的过程\",{\"1\":{\"133\":1}}],[\"因为数据在传输过程中需要进行加密和解密\",{\"1\":{\"133\":1}}],[\"因为数据在传输过程中会被加密\",{\"1\":{\"133\":1}}],[\"因为数据在传输过程中没有加密\",{\"1\":{\"133\":1}}],[\"因为\",{\"1\":{\"40\":1,\"44\":1,\"46\":1}}],[\"因为我们不想让它成为公共\",{\"1\":{\"31\":1}}],[\"因为我们不想让它成为我们公共\",{\"1\":{\"31\":1}}],[\"导致读取到不存在的数据\",{\"1\":{\"269\":1}}],[\"导致构建的二进制文件变大\",{\"1\":{\"210\":1}}],[\"导致\",{\"1\":{\"173\":1,\"217\":1}}],[\"导致频繁触发\",{\"1\":{\"173\":1}}],[\"导致拒绝服务的攻击\",{\"1\":{\"168\":1}}],[\"导致性能降低和拒绝服务的攻击\",{\"1\":{\"168\":1}}],[\"导致解析器返回错误\",{\"1\":{\"168\":1}}],[\"导致无法使用\",{\"1\":{\"30\":1}}],[\"导出以下两个错误\",{\"1\":{\"31\":1}}],[\"导入本地可以直接使用函数\",{\"1\":{\"53\":1}}],[\"导入命令\",{\"1\":{\"53\":1}}],[\"导入别名\",{\"0\":{\"8\":1}}],[\"导入的包应该进行分组\",{\"1\":{\"7\":1}}],[\"和返回的\",{\"1\":{\"152\":1}}],[\"和服务端\",{\"1\":{\"149\":1}}],[\"和序列号中的值相加表示紧急数据最后一个字节的序列号\",{\"1\":{\"147\":1}}],[\"和所有正数\",{\"1\":{\"72\":1}}],[\"和别名修饰导入的包\",{\"1\":{\"53\":1}}],[\"和\",{\"0\":{\"282\":1,\"288\":1},\"1\":{\"30\":2,\"32\":1,\"125\":1,\"131\":2,\"140\":2,\"143\":1,\"162\":1,\"170\":1,\"172\":1,\"173\":1,\"229\":1,\"237\":1,\"251\":1,\"263\":1,\"267\":1,\"272\":1,\"282\":1}}],[\"注意避免死锁问题\",{\"1\":{\"117\":1}}],[\"注意事项\",{\"0\":{\"117\":1}}],[\"注意协程\",{\"0\":{\"42\":1}}],[\"注意\",{\"1\":{\"30\":1,\"42\":1,\"49\":2,\"69\":1,\"112\":1,\"114\":1,\"125\":1,\"140\":1,\"153\":1,\"162\":1,\"228\":1,\"232\":1,\"237\":1,\"263\":1,\"269\":1}}],[\"我们知道\",{\"1\":{\"177\":1}}],[\"我们知道接收方在收到\",{\"1\":{\"163\":1}}],[\"我们知道切片属于引用类型\",{\"1\":{\"109\":1}}],[\"我们使用\",{\"1\":{\"112\":1,\"245\":1}}],[\"我们还可以使用\",{\"1\":{\"53\":2}}],[\"我们应该使用\",{\"1\":{\"32\":1,\"35\":1}}],[\"我们仍然可以在带有\",{\"1\":{\"31\":1}}],[\"我们可以将数据写入\",{\"1\":{\"299\":1}}],[\"我们可以根据需要分配和释放内存\",{\"1\":{\"273\":1}}],[\"我们可以在运行时动态地分配内存\",{\"1\":{\"273\":1}}],[\"我们可以创建复杂的数据结构\",{\"1\":{\"273\":1}}],[\"我们可以看到\",{\"1\":{\"152\":1}}],[\"我们可以为\",{\"1\":{\"121\":1}}],[\"我们可以等待它退出\",{\"1\":{\"42\":1}}],[\"我们可以通过从中恢复来提供降级但不间断的体验\",{\"1\":{\"32\":1}}],[\"我们可以使用\",{\"1\":{\"30\":1,\"88\":1,\"93\":1,\"114\":1}}],[\"我们可能仍然在带有错误的包内使用它\",{\"1\":{\"31\":1}}],[\"我们会及时审核并发布到本站\",{\"1\":{\"1\":1}}],[\"hutool\",{\"1\":{\"224\":1}}],[\"h\",{\"1\":{\"198\":1}}],[\"hosts\",{\"1\":{\"166\":1}}],[\"hpack\",{\"1\":{\"135\":1}}],[\"height\",{\"1\":{\"280\":4}}],[\"head~1\",{\"1\":{\"184\":1}}],[\"head^\",{\"1\":{\"184\":1}}],[\"header\",{\"1\":{\"135\":1,\"140\":1}}],[\"head\",{\"1\":{\"131\":2}}],[\"hello\",{\"1\":{\"51\":1,\"63\":1,\"64\":1,\"69\":2,\"276\":3}}],[\"hint\",{\"1\":{\"217\":1}}],[\"hi\",{\"1\":{\"75\":1}}],[\"having\",{\"1\":{\"247\":2}}],[\"has\",{\"1\":{\"217\":2}}],[\"hash\",{\"1\":{\"60\":1}}],[\"hard\",{\"1\":{\"184\":1}}],[\"handle\",{\"1\":{\"29\":1}}],[\"https\",{\"0\":{\"133\":1},\"1\":{\"133\":5,\"134\":2,\"192\":4}}],[\"http1\",{\"1\":{\"132\":2}}],[\"http\",{\"0\":{\"130\":1,\"132\":1,\"133\":1,\"135\":1,\"314\":1,\"326\":1},\"1\":{\"8\":1,\"16\":2,\"129\":1,\"131\":3,\"132\":1,\"133\":6,\"135\":4,\"225\":2}}],[\"动态类型\",{\"1\":{\"29\":1}}],[\"错误码生成\",{\"1\":{\"200\":2,\"201\":1,\"205\":2,\"206\":1}}],[\"错误\",{\"1\":{\"173\":1,\"297\":1}}],[\"错误请求表示客户端请求的报文有错误\",{\"1\":{\"132\":1}}],[\"错误处理相关的函数\",{\"1\":{\"225\":1}}],[\"错误处理\",{\"0\":{\"91\":1}}],[\"错误可能导致\",{\"1\":{\"40\":2}}],[\"错误命名\",{\"0\":{\"31\":1}}],[\"错误包装\",{\"0\":{\"30\":1}}],[\"错误匹配\",{\"1\":{\"29\":1}}],[\"错误信息不变\",{\"1\":{\"29\":1}}],[\"错误类型通常有两种\",{\"1\":{\"29\":1}}],[\"错误类型\",{\"0\":{\"29\":1}}],[\"由运行结果得出他们相等\",{\"1\":{\"278\":1}}],[\"由厂商管理并保证不重复\",{\"1\":{\"170\":1}}],[\"由用户自定义\",{\"1\":{\"136\":1}}],[\"由作为代理或网关的服务器使用\",{\"1\":{\"132\":1}}],[\"由无序的键值对组成\",{\"1\":{\"60\":1}}],[\"由\",{\"1\":{\"29\":2,\"170\":1,\"205\":1}}],[\"由于叶子节点之间通过指针连接\",{\"1\":{\"267\":1}}],[\"由于节点只包含索引\",{\"1\":{\"267\":1}}],[\"由于非聚簇索引和数据是分开存储的\",{\"1\":{\"259\":1}}],[\"由于大量使用反射\",{\"1\":{\"217\":1}}],[\"由于udp不需要进行握手或检查数据是否正确到达\",{\"1\":{\"160\":1}}],[\"由于\",{\"1\":{\"14\":1,\"18\":1,\"286\":1}}],[\"静态类型\",{\"1\":{\"29\":1}}],[\"处理元组的工具函数\",{\"1\":{\"225\":1}}],[\"处理字符串的工具函数\",{\"1\":{\"225\":1}}],[\"处理结构体的工具函数\",{\"1\":{\"225\":1}}],[\"处理切片的工具函数\",{\"1\":{\"225\":1}}],[\"处理网络和\",{\"1\":{\"225\":1}}],[\"处理日期和时间的函数\",{\"1\":{\"225\":1}}],[\"处理并发操作的工具函数\",{\"1\":{\"225\":1}}],[\"处理\",{\"0\":{\"28\":1},\"1\":{\"225\":1,\"249\":2}}],[\"进一步说\",{\"1\":{\"280\":1}}],[\"进一步触发更多的重传\",{\"1\":{\"152\":1}}],[\"进入容器\",{\"1\":{\"182\":1}}],[\"进行删除\",{\"0\":{\"297\":1}}],[\"进行数据筛选\",{\"1\":{\"245\":1}}],[\"进行\",{\"1\":{\"217\":1,\"297\":2}}],[\"进行压缩\",{\"1\":{\"135\":1}}],[\"进行控制\",{\"1\":{\"35\":1}}],[\"进行处理\",{\"1\":{\"34\":1}}],[\"进行匹配\",{\"1\":{\"31\":1}}],[\"进行比较\",{\"1\":{\"29\":2}}],[\"进行静态分析\",{\"1\":{\"26\":1}}],[\"进阶\",{\"0\":{\"298\":1},\"1\":{\"1\":1}}],[\"且不可改变\",{\"1\":{\"289\":1}}],[\"且不使用反射\",{\"1\":{\"210\":1}}],[\"且初始化值为零值\",{\"1\":{\"288\":1}}],[\"且数量需大于\",{\"1\":{\"247\":1}}],[\"且年龄为\",{\"1\":{\"246\":1}}],[\"且查询和更新都需要结构体\",{\"1\":{\"217\":1}}],[\"且将请求的来源\",{\"1\":{\"176\":1}}],[\"且最后一个分片的分片偏移字段不为\",{\"1\":{\"140\":1}}],[\"且应该将错误传递到最终的调用者\",{\"1\":{\"40\":1}}],[\"且应该创建顶级错误变量用于判断\",{\"1\":{\"29\":1}}],[\"且表达式不能用单个变量赋值时\",{\"1\":{\"38\":1}}],[\"且无法保证后续的版本不会冲突\",{\"1\":{\"36\":1}}],[\"且相同的变量和函数可能冲突\",{\"1\":{\"36\":1}}],[\"且可以帮助\",{\"1\":{\"26\":1}}],[\"且建议估计\",{\"1\":{\"25\":1}}],[\"若传入数组则是值传递\",{\"1\":{\"293\":1}}],[\"若是值类型的话\",{\"1\":{\"287\":1}}],[\"若只有数量则默认从第\",{\"1\":{\"244\":1}}],[\"若路由器重启会导致所有\",{\"1\":{\"178\":1}}],[\"若超过则不再学习新的表项\",{\"1\":{\"173\":1}}],[\"若超过了阈值则丢弃\",{\"1\":{\"173\":1}}],[\"若不用变量名承接\",{\"1\":{\"279\":1}}],[\"若不在同一个网段\",{\"1\":{\"172\":1}}],[\"若不相等则为\",{\"1\":{\"85\":1}}],[\"若主机不在同一个局域网怎么办\",{\"1\":{\"172\":1}}],[\"若权威域名服务器还是没查询到信息\",{\"1\":{\"166\":1}}],[\"若顶级域名服务器若查询不到记录\",{\"1\":{\"166\":1}}],[\"若域名属于其他顶级域名服务器\",{\"1\":{\"166\":1}}],[\"若本地\",{\"1\":{\"166\":1}}],[\"若还是不存在则会在路由器中查询缓存\",{\"1\":{\"166\":1}}],[\"若浏览器中未缓存有该域名的\",{\"1\":{\"166\":1}}],[\"若没有程序\",{\"1\":{\"163\":1}}],[\"若接收方的响应没得到回复\",{\"1\":{\"163\":1}}],[\"若全为\",{\"1\":{\"161\":1}}],[\"若发送方检测到网络拥塞\",{\"1\":{\"156\":1}}],[\"若重传失败\",{\"1\":{\"152\":1}}],[\"若其他主机需要访问服务器\",{\"1\":{\"144\":1}}],[\"若数据包大于链路层的\",{\"1\":{\"141\":1}}],[\"若多个\",{\"1\":{\"115\":1}}],[\"若\",{\"1\":{\"114\":1,\"152\":2,\"172\":3,\"303\":1}}],[\"若使用\",{\"1\":{\"114\":1}}],[\"若条件为\",{\"1\":{\"86\":1}}],[\"若两边有一边为\",{\"1\":{\"86\":1}}],[\"若两边都为\",{\"1\":{\"86\":2}}],[\"若成立则为\",{\"1\":{\"85\":4}}],[\"若相等则为\",{\"1\":{\"85\":1}}],[\"若希望继续执行下面的语句\",{\"1\":{\"64\":1}}],[\"若能提前知道大概得数据量\",{\"1\":{\"39\":1}}],[\"若在上述两种缓存中都没有查询到对应的数据\",{\"1\":{\"166\":1}}],[\"若在\",{\"0\":{\"26\":1}}],[\"若初始化全为\",{\"0\":{\"23\":1}}],[\"若初始化的字段为默认的\",{\"1\":{\"22\":1}}],[\"31\",{\"1\":{\"175\":1}}],[\"310\",{\"1\":{\"141\":1}}],[\"3xx\",{\"1\":{\"132\":1}}],[\"307\",{\"1\":{\"132\":1}}],[\"305\",{\"1\":{\"132\":1}}],[\"304\",{\"1\":{\"132\":1}}],[\"303\",{\"1\":{\"132\":1}}],[\"302\",{\"1\":{\"132\":1}}],[\"301\",{\"1\":{\"132\":1}}],[\"300\",{\"1\":{\"132\":1}}],[\"30\",{\"1\":{\"84\":1}}],[\"3i\",{\"1\":{\"74\":2}}],[\"32s\",{\"1\":{\"149\":1}}],[\"32位\",{\"1\":{\"143\":1}}],[\"32\",{\"1\":{\"72\":2,\"73\":1,\"74\":1,\"171\":4}}],[\"3\",{\"1\":{\"25\":2,\"64\":1,\"65\":2,\"66\":1,\"74\":1,\"77\":1,\"78\":1,\"90\":1,\"106\":2,\"108\":2,\"109\":2,\"116\":1,\"125\":1,\"126\":1,\"140\":1,\"152\":3,\"170\":1,\"173\":1,\"192\":2,\"226\":2,\"231\":1,\"232\":3,\"233\":5,\"235\":5,\"236\":5,\"237\":5,\"280\":1,\"287\":2,\"290\":3,\"291\":2}}],[\"大于等于\",{\"1\":{\"245\":1}}],[\"大于\",{\"1\":{\"245\":1}}],[\"大于ip数据包的允许程度\",{\"1\":{\"147\":1}}],[\"大大减轻了\",{\"1\":{\"177\":1}}],[\"大量\",{\"1\":{\"163\":1}}],[\"大地址\",{\"1\":{\"140\":1}}],[\"大小\",{\"1\":{\"25\":1,\"161\":1}}],[\"大多数使用命名导入的情况下\",{\"1\":{\"9\":1}}],[\"值传递的优点是函数内对值的修改不会影响原始的变量\",{\"1\":{\"293\":1}}],[\"值传递\",{\"1\":{\"293\":1}}],[\"值类型\",{\"1\":{\"287\":1,\"303\":1}}],[\"值如下\",{\"1\":{\"171\":1}}],[\"值的一半\",{\"1\":{\"156\":1}}],[\"值的结构变量\",{\"0\":{\"23\":1}}],[\"值的字段\",{\"0\":{\"22\":1}}],[\"值\",{\"1\":{\"22\":1,\"87\":1}}],[\"忽略\",{\"0\":{\"22\":1}}],[\"jc\",{\"1\":{\"245\":1}}],[\"jim\",{\"1\":{\"245\":1}}],[\"jinzhu\",{\"1\":{\"219\":1}}],[\"j\",{\"1\":{\"245\":5}}],[\"justin\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"justmycode\",{\"1\":{\"194\":1}}],[\"js\",{\"1\":{\"194\":2}}],[\"json\",{\"0\":{\"193\":1},\"1\":{\"5\":2,\"41\":3,\"193\":3,\"194\":1,\"198\":1}}],[\"ja\",{\"1\":{\"245\":1}}],[\"jamie\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"java\",{\"1\":{\"193\":1,\"194\":4,\"224\":1}}],[\"jacky\",{\"1\":{\"245\":1}}],[\"jack\",{\"1\":{\"75\":1,\"105\":1,\"245\":3,\"246\":2}}],[\"jetbrains\",{\"1\":{\"187\":1}}],[\"joins\",{\"1\":{\"217\":1}}],[\"join\",{\"0\":{\"94\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1},\"1\":{\"94\":3,\"95\":2,\"96\":2,\"230\":1,\"233\":5,\"235\":1,\"236\":1,\"237\":6,\"263\":1}}],[\"john\",{\"1\":{\"21\":2,\"22\":2}}],[\"kratos\",{\"0\":{\"204\":1,\"206\":1,\"207\":1},\"1\":{\"205\":9,\"206\":4,\"207\":3,\"208\":2}}],[\"keytype\",{\"1\":{\"79\":2,\"98\":2}}],[\"key\",{\"0\":{\"101\":1,\"295\":1,\"297\":1,\"303\":2},\"1\":{\"79\":2,\"98\":2,\"99\":18,\"101\":3,\"120\":1,\"228\":5,\"255\":1,\"269\":1,\"295\":1,\"303\":2}}],[\"k++\",{\"1\":{\"39\":2}}],[\"k3\",{\"1\":{\"25\":2}}],[\"k2\",{\"1\":{\"25\":2}}],[\"k1\",{\"1\":{\"25\":2}}],[\"k\",{\"1\":{\"21\":2,\"39\":6}}],[\"来实现隔离级别\",{\"1\":{\"269\":2}}],[\"来接收\",{\"1\":{\"115\":1}}],[\"来判断是否是零值\",{\"1\":{\"114\":1}}],[\"来判断错误类型\",{\"1\":{\"30\":2,\"32\":1}}],[\"来创建\",{\"1\":{\"112\":1}}],[\"来创建错误\",{\"1\":{\"93\":1}}],[\"来修饰导入的包\",{\"1\":{\"53\":1}}],[\"来包装错误\",{\"1\":{\"30\":1}}],[\"来包裹字符串\",{\"1\":{\"19\":1}}],[\"来源\",{\"1\":{\"2\":1}}],[\"`json\",{\"1\":{\"41\":2}}],[\"`init\",{\"1\":{\"38\":1}}],[\"`unknown\",{\"1\":{\"19\":1}}],[\"`\",{\"1\":{\"19\":2,\"38\":1,\"41\":2}}],[\"优缺点\",{\"1\":{\"196\":1,\"200\":1,\"205\":1,\"210\":1,\"217\":1}}],[\"优先级\",{\"1\":{\"90\":1}}],[\"优先使用\",{\"0\":{\"46\":1},\"1\":{\"19\":1}}],[\"优雅地处理错误\",{\"1\":{\"33\":1}}],[\"优点\",{\"1\":{\"16\":1,\"196\":1,\"200\":1,\"205\":1,\"210\":1,\"217\":1,\"250\":1,\"258\":1,\"259\":1}}],[\"所在的路由器会根据目标\",{\"1\":{\"172\":1}}],[\"所颁发\",{\"1\":{\"136\":1}}],[\"所请求的资源必须通过代理访问\",{\"1\":{\"132\":1}}],[\"所请求的资源未修改\",{\"1\":{\"132\":1}}],[\"所需资源更少\",{\"1\":{\"46\":1}}],[\"所有事务按顺序执行互不干扰\",{\"1\":{\"269\":1}}],[\"所有节点都存在于叶子中\",{\"1\":{\"267\":1}}],[\"所有内部节点也存在于叶子中\",{\"1\":{\"267\":1}}],[\"所有内部节点和叶节点都包含数据指针和键\",{\"1\":{\"267\":1}}],[\"所有叶子节点都在同一层\",{\"1\":{\"266\":1,\"267\":2}}],[\"所有网络中的主机都会收到该广播\",{\"1\":{\"172\":1}}],[\"所有的数据\",{\"1\":{\"124\":1}}],[\"所有其他函数应将错误返回到\",{\"1\":{\"40\":1}}],[\"所有字段和方法都显示出来\",{\"1\":{\"16\":1}}],[\"所以遍历是无序的\",{\"1\":{\"301\":1}}],[\"所以改变遍历的变量是不会有影响的\",{\"1\":{\"290\":1}}],[\"所以对于切片来说\",{\"1\":{\"287\":1}}],[\"所以想表示中文只能使用\",{\"1\":{\"286\":1}}],[\"所以\",{\"1\":{\"269\":1}}],[\"所以它能够比tcp更快地传输数据\",{\"1\":{\"160\":1}}],[\"所以它的作用域仅限于\",{\"1\":{\"18\":1}}],[\"所以无法提供给客户端\",{\"1\":{\"132\":1}}],[\"所以为\",{\"1\":{\"95\":1}}],[\"所以尽量避免使用\",{\"1\":{\"38\":1}}],[\"所以在\",{\"1\":{\"38\":1}}],[\"创建索引原则\",{\"0\":{\"263\":1}}],[\"创建指针等\",{\"1\":{\"225\":1}}],[\"创建目录等\",{\"1\":{\"225\":1}}],[\"创建数据\",{\"0\":{\"212\":1,\"219\":1}}],[\"创建一个简单的微服务\",{\"0\":{\"203\":1,\"208\":1}}],[\"创建一个简单的\",{\"0\":{\"198\":1}}],[\"创建一个长度相同的切片\",{\"1\":{\"109\":1}}],[\"创建分支\",{\"1\":{\"184\":1}}],[\"创建派生\",{\"1\":{\"123\":1}}],[\"创建派生节点\",{\"0\":{\"123\":1}}],[\"创建空白\",{\"1\":{\"122\":1}}],[\"创建根节点\",{\"0\":{\"122\":1}}],[\"创建根节点和派生节点\",{\"1\":{\"121\":1}}],[\"创建长度为\",{\"1\":{\"107\":1}}],[\"创建切片\",{\"0\":{\"105\":1}}],[\"创建错误\",{\"0\":{\"93\":1},\"1\":{\"93\":2,\"94\":2,\"95\":2,\"96\":1}}],[\"创建的或者自定义的错误类型\",{\"1\":{\"29\":1}}],[\"创建的错误类型\",{\"1\":{\"29\":1}}],[\"创建\",{\"0\":{\"98\":1,\"112\":1},\"1\":{\"17\":1,\"96\":1}}],[\"0b0001\",{\"1\":{\"278\":2}}],[\"0o25\",{\"1\":{\"278\":2}}],[\"0～192\",{\"1\":{\"175\":1}}],[\"0～172\",{\"1\":{\"175\":1}}],[\"0～10\",{\"1\":{\"175\":1}}],[\"04\",{\"1\":{\"172\":1}}],[\"03\",{\"1\":{\"172\":2}}],[\"0370\",{\"1\":{\"143\":1}}],[\"02\",{\"1\":{\"172\":1}}],[\"0101\",{\"1\":{\"278\":2}}],[\"01\",{\"1\":{\"172\":1}}],[\"0111\",{\"1\":{\"87\":2}}],[\"0110\",{\"1\":{\"87\":2}}],[\"0~15\",{\"1\":{\"147\":1}}],[\"0~65535\",{\"1\":{\"147\":2}}],[\"0db8\",{\"1\":{\"143\":1}}],[\"00\",{\"1\":{\"172\":17}}],[\"0001\",{\"1\":{\"87\":2}}],[\"0000\",{\"1\":{\"87\":2,\"143\":2,\"171\":2}}],[\"0011\",{\"1\":{\"87\":1}}],[\"0+0i\",{\"1\":{\"82\":1}}],[\"0644\",{\"1\":{\"18\":2}}],[\"0\",{\"0\":{\"22\":1,\"23\":1,\"135\":2},\"1\":{\"17\":3,\"22\":1,\"39\":7,\"43\":1,\"51\":1,\"63\":1,\"66\":2,\"67\":3,\"69\":1,\"72\":2,\"78\":2,\"82\":6,\"87\":12,\"106\":1,\"107\":5,\"108\":4,\"109\":3,\"131\":1,\"132\":1,\"135\":2,\"140\":3,\"141\":3,\"142\":2,\"143\":1,\"161\":1,\"170\":2,\"175\":4,\"180\":1,\"192\":2,\"194\":14,\"226\":1,\"244\":2,\"249\":1,\"284\":1,\"287\":6,\"288\":1,\"292\":2,\"295\":1}}],[\"0xc00000a0d8\",{\"1\":{\"288\":1}}],[\"0xc00008a030\",{\"1\":{\"288\":1}}],[\"0xc000086020\",{\"1\":{\"272\":1}}],[\"0x15\",{\"1\":{\"278\":2}}],[\"0x0800\",{\"1\":{\"171\":1}}],[\"0x0806\",{\"1\":{\"171\":1}}],[\"0x0000\",{\"1\":{\"171\":1}}],[\"0x0000ff\",{\"1\":{\"5\":2}}],[\"0x00ff00\",{\"1\":{\"5\":2}}],[\"0xffff\",{\"1\":{\"171\":1}}],[\"0xff0000\",{\"1\":{\"5\":2}}],[\"当无类型的常量被赋值给一个变量的时\",{\"1\":{\"277\":1}}],[\"当发生错误时暂停调试\",{\"1\":{\"194\":1}}],[\"当发送端连续收到三个重复的确认时\",{\"1\":{\"157\":1}}],[\"当发送端收到这个确认码时\",{\"1\":{\"147\":1}}],[\"当发送方收到三个重复的确认报文段后\",{\"1\":{\"152\":1}}],[\"当数据包到达路由器时\",{\"1\":{\"176\":1}}],[\"当服务器返回数据时\",{\"1\":{\"176\":1}}],[\"当域名服务器查询到\",{\"1\":{\"166\":1}}],[\"当报文发送之后\",{\"1\":{\"160\":1}}],[\"当接收端接收到重复的报文段时会将该报文段写入\",{\"1\":{\"152\":1}}],[\"当urg=1时有效\",{\"1\":{\"147\":1}}],[\"当为零的时候会被丢弃\",{\"1\":{\"140\":1}}],[\"当根节点被\",{\"1\":{\"121\":1}}],[\"当导入包需要赋值的过程十分复杂\",{\"1\":{\"38\":1}}],[\"当判断错误类型时\",{\"1\":{\"29\":1}}],[\"当字符串内有转义字符时\",{\"1\":{\"19\":1}}],[\"当返回切片为空时不应该返回一个空切片而是返回\",{\"1\":{\"17\":1}}],[\"当\",{\"1\":{\"17\":1,\"141\":1,\"156\":1}}],[\"有哪些使用场景\",{\"0\":{\"299\":1}}],[\"有什么区别\",{\"0\":{\"282\":1,\"288\":1}}],[\"有类型常量\",{\"1\":{\"277\":1}}],[\"有k个子节点的非叶子节点包含k\",{\"1\":{\"266\":1}}],[\"有了索引下推之后\",{\"1\":{\"264\":1}}],[\"有一定的学习成本\",{\"1\":{\"210\":1}}],[\"有着不错的性能\",{\"1\":{\"210\":1}}],[\"有很多开发者在使用\",{\"1\":{\"200\":1}}],[\"有大量的工具可以使用\",{\"1\":{\"181\":1}}],[\"有大量的镜像可以使用\",{\"1\":{\"181\":1}}],[\"有没有方法可以不需要重传\",{\"1\":{\"152\":1}}],[\"有缓冲区的信道在发送的数据达到缓冲区大小后才会被阻塞\",{\"1\":{\"112\":1}}],[\"有三种方式可以创建切片\",{\"1\":{\"105\":1}}],[\"有符号数包含正数和负数\",{\"1\":{\"72\":1}}],[\"有符号数\",{\"1\":{\"72\":1}}],[\"有\",{\"1\":{\"49\":1,\"162\":2}}],[\"有两种常用的方法可以做到这一点\",{\"1\":{\"43\":1}}],[\"有初始值\",{\"1\":{\"25\":1}}],[\"有用的零值\",{\"1\":{\"16\":1}}],[\"有接收者的函数中的\",{\"1\":{\"11\":1}}],[\"ptr\",{\"1\":{\"272\":3}}],[\"pythonpath\",{\"1\":{\"194\":1}}],[\"python\",{\"1\":{\"193\":1,\"194\":4}}],[\"publisher\",{\"1\":{\"192\":4}}],[\"pushdown\",{\"1\":{\"264\":1}}],[\"push\",{\"1\":{\"184\":3}}],[\"pull\",{\"1\":{\"182\":1,\"184\":1}}],[\"put\",{\"1\":{\"131\":3}}],[\"ps\",{\"1\":{\"182\":2}}],[\"psh\",{\"1\":{\"147\":1}}],[\"ping\",{\"1\":{\"163\":1,\"198\":1}}],[\"pip\",{\"1\":{\"140\":1}}],[\"permanently\",{\"1\":{\"132\":1}}],[\"person\",{\"1\":{\"61\":1}}],[\"point\",{\"1\":{\"217\":2}}],[\"pointer\",{\"0\":{\"81\":1},\"1\":{\"16\":3,\"82\":1,\"225\":1}}],[\"pong\",{\"1\":{\"198\":1}}],[\"powerful\",{\"1\":{\"192\":1}}],[\"postgresql\",{\"1\":{\"210\":1,\"244\":1}}],[\"postdebugtask\",{\"1\":{\"194\":1}}],[\"post\",{\"1\":{\"131\":2}}],[\"ppp\",{\"1\":{\"129\":1}}],[\"p1\",{\"1\":{\"52\":1}}],[\"p\",{\"1\":{\"52\":4,\"87\":4,\"140\":1}}],[\"partial\",{\"1\":{\"132\":1}}],[\"patch\",{\"1\":{\"131\":2}}],[\"path\",{\"1\":{\"31\":2,\"40\":6,\"79\":2,\"98\":2}}],[\"package\",{\"1\":{\"29\":2,\"54\":1,\"64\":1,\"66\":1,\"67\":1,\"69\":2,\"70\":1,\"75\":1,\"78\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"99\":1,\"100\":1,\"101\":1,\"105\":1,\"107\":1,\"108\":1,\"109\":1,\"116\":1,\"123\":1,\"125\":1,\"126\":1,\"198\":1,\"226\":1,\"277\":3,\"287\":2,\"288\":2,\"290\":1,\"291\":1,\"292\":1,\"295\":1,\"296\":1,\"297\":1}}],[\"panic\",{\"1\":{\"16\":3,\"29\":1,\"33\":2,\"34\":3,\"37\":2,\"40\":2,\"114\":1,\"296\":2,\"297\":1}}],[\"preload\",{\"1\":{\"217\":1}}],[\"prelaunchtask\",{\"1\":{\"194\":2}}],[\"product\",{\"1\":{\"229\":1}}],[\"prometheus\",{\"1\":{\"217\":1}}],[\"program\",{\"1\":{\"194\":6}}],[\"protocol\",{\"1\":{\"139\":1,\"146\":1,\"159\":1,\"170\":1}}],[\"protocols\",{\"1\":{\"132\":1}}],[\"proxy\",{\"1\":{\"132\":1,\"172\":1}}],[\"process\",{\"1\":{\"12\":2}}],[\"primary\",{\"1\":{\"228\":1,\"255\":1}}],[\"price\",{\"1\":{\"41\":5}}],[\"print\",{\"1\":{\"37\":2,\"99\":6}}],[\"println\",{\"1\":{\"18\":2,\"37\":2,\"40\":2,\"63\":2,\"64\":11,\"65\":5,\"66\":2,\"67\":2,\"69\":3,\"70\":3,\"78\":1,\"79\":1,\"80\":1,\"93\":1,\"94\":2,\"95\":4,\"96\":1,\"98\":1,\"99\":3,\"100\":2,\"101\":4,\"105\":1,\"106\":1,\"107\":1,\"108\":3,\"109\":2,\"115\":4,\"116\":2,\"123\":4,\"125\":2,\"126\":2,\"226\":1,\"272\":3,\"278\":3,\"279\":2,\"287\":6,\"288\":5,\"290\":1,\"291\":3,\"292\":2,\"295\":1}}],[\"printf\",{\"0\":{\"26\":1},\"1\":{\"12\":2,\"26\":3,\"32\":2,\"75\":1,\"99\":3,\"277\":3,\"285\":1}}],[\"pr\",{\"1\":{\"1\":3}}],[\"指的是两个集合\",{\"1\":{\"229\":1}}],[\"指的是在数据链路层能通过的最大数据包大小\",{\"1\":{\"141\":1}}],[\"指令之前掉线了\",{\"1\":{\"149\":1}}],[\"指令\",{\"1\":{\"149\":2}}],[\"指令断开\",{\"1\":{\"149\":1}}],[\"指向\",{\"1\":{\"113\":1}}],[\"指针和引用传递\",{\"1\":{\"293\":1}}],[\"指针可直接访问和修改内存中的数据\",{\"1\":{\"273\":1}}],[\"指针可在程序运行时动态地分配内存\",{\"1\":{\"273\":1}}],[\"指针可在函数之间传递数据的引用\",{\"1\":{\"273\":1}}],[\"指针可在数据结构中轻松地访问和操作节点之间的关系\",{\"1\":{\"273\":1}}],[\"指针在数据结构中起着重要的作用\",{\"1\":{\"273\":1}}],[\"指针存储的是变量的内存地址\",{\"1\":{\"81\":1}}],[\"指针\",{\"0\":{\"81\":1,\"271\":1},\"1\":{\"89\":1,\"274\":1}}],[\"指针更改零值的有用性\",{\"1\":{\"16\":1}}],[\"指定多个可能值\",{\"1\":{\"245\":1}}],[\"指定不需要调试的文件或文件夹\",{\"1\":{\"194\":1}}],[\"指定在调试结束后运行的任务\",{\"1\":{\"194\":1}}],[\"指定在启动调试前运行的任务\",{\"1\":{\"194\":1}}],[\"指定数据包的传输路径\",{\"1\":{\"140\":2}}],[\"指定\",{\"0\":{\"47\":1}}],[\"指示接收方愿意接收的字节数量\",{\"1\":{\"147\":1}}],[\"指示信息\",{\"1\":{\"132\":1}}],[\"指示\",{\"1\":{\"42\":1}}],[\"指南\",{\"0\":{\"0\":1}}],[\"中所有元素的集合\",{\"1\":{\"229\":1}}],[\"中钩子方法\",{\"1\":{\"217\":1}}],[\"中文文档\",{\"1\":{\"210\":2}}],[\"中间件\",{\"1\":{\"196\":1}}],[\"中定义了调试器的配置信息\",{\"1\":{\"193\":1}}],[\"中打开\",{\"1\":{\"189\":1}}],[\"中重要的协议\",{\"1\":{\"170\":1}}],[\"中不存在缓存\",{\"1\":{\"166\":1}}],[\"中传递数据\",{\"1\":{\"119\":1}}],[\"中的普通索引就是非聚簇索引\",{\"1\":{\"259\":1}}],[\"中的主键索引就是聚簇索引\",{\"1\":{\"258\":1}}],[\"中的\",{\"0\":{\"282\":1},\"1\":{\"224\":1}}],[\"中的上下文信息\",{\"1\":{\"119\":1}}],[\"中的整数类型\",{\"1\":{\"72\":1}}],[\"中十分重要的接口\",{\"1\":{\"119\":1}}],[\"中第一个符合目标类型的错误赋值到目标对象\",{\"1\":{\"96\":1}}],[\"中断当前\",{\"1\":{\"65\":1}}],[\"中使用\",{\"0\":{\"44\":1}}],[\"中调用其中一个\",{\"1\":{\"40\":1}}],[\"中\",{\"1\":{\"16\":1,\"72\":1,\"193\":1,\"229\":1,\"269\":1,\"277\":1}}],[\"并赋值给当前的\",{\"1\":{\"303\":1}}],[\"并不是很常用\",{\"1\":{\"288\":1}}],[\"并不是客户端的请求出错\",{\"1\":{\"132\":1}}],[\"并返回该类型的指针\",{\"1\":{\"288\":1}}],[\"并在不需要时释放内存\",{\"1\":{\"273\":1}}],[\"并在相邻节点的链路上传送帧\",{\"1\":{\"128\":1}}],[\"并提高程序的执行效率\",{\"1\":{\"273\":1}}],[\"并没有减少太多工作量\",{\"1\":{\"217\":1}}],[\"并遵循以下原则\",{\"1\":{\"210\":1}}],[\"并生成大量临时表项\",{\"1\":{\"173\":1}}],[\"并更新自己的缓存表\",{\"1\":{\"172\":1}}],[\"并保护关键基础设施\",{\"1\":{\"163\":1}}],[\"并重新发送该数据\",{\"1\":{\"152\":1}}],[\"并包含一个自己当前的序列号x+2\",{\"1\":{\"149\":1}}],[\"并指明客户端的初始序列号isn\",{\"1\":{\"149\":1}}],[\"并由接收端进行验证\",{\"1\":{\"147\":1}}],[\"并要求释放运输连接\",{\"1\":{\"147\":1}}],[\"并通过偏移量进行排序\",{\"1\":{\"142\":1}}],[\"并有助于确保互联网的安全性\",{\"1\":{\"136\":1}}],[\"并能让网络用户和接收者知道其所输入的数据将前往受信任的来源\",{\"1\":{\"136\":1}}],[\"并发安全吗\",{\"0\":{\"302\":1}}],[\"并发送缓慢的随机数据包流\",{\"1\":{\"168\":1}}],[\"并发\",{\"0\":{\"103\":1}}],[\"并设置容量\",{\"1\":{\"98\":1}}],[\"并初始化\",{\"1\":{\"56\":1}}],[\"并且每次都会创建新值\",{\"1\":{\"280\":1}}],[\"并且在事务a提交之前先提交了\",{\"1\":{\"269\":1}}],[\"并且有很多插件和工具可以使用\",{\"1\":{\"200\":1}}],[\"并且失败是可恢复的\",{\"1\":{\"32\":1}}],[\"并且这个错误没有被导出\",{\"1\":{\"31\":1}}],[\"并且委托工作到内部类型的\",{\"1\":{\"16\":1}}],[\"并允许用户控制有关\",{\"1\":{\"16\":1}}],[\"在自动扩容时又会重新计算哈希值\",{\"1\":{\"301\":1}}],[\"在内部使用哈希算法放置元素\",{\"1\":{\"301\":1}}],[\"在内连接的查询中\",{\"1\":{\"237\":1}}],[\"在不同协程间传递数据\",{\"1\":{\"299\":1}}],[\"在超时后自动终止协程\",{\"1\":{\"299\":1}}],[\"在超时之后\",{\"1\":{\"149\":1}}],[\"在执行\",{\"1\":{\"290\":1}}],[\"在函数参数传递时数据是值传递\",{\"1\":{\"289\":1}}],[\"在创建的时候就已经确定\",{\"1\":{\"289\":1}}],[\"在每一次拷贝后都会新申请一块空间存储值\",{\"1\":{\"287\":1}}],[\"在每次发送数据包的时候都会启动一个定时器\",{\"1\":{\"152\":1}}],[\"在事务a中查询\",{\"1\":{\"269\":1}}],[\"在同样的块大小下\",{\"1\":{\"267\":1}}],[\"在没有索引下推之前\",{\"1\":{\"264\":1}}],[\"在没有容器之前\",{\"1\":{\"181\":1}}],[\"在选择索引列时\",{\"1\":{\"263\":1}}],[\"在选择索引时\",{\"1\":{\"263\":2}}],[\"在某个范围内\",{\"1\":{\"245\":1}}],[\"在外连接中如左连接会返回驱动表不匹配的数据\",{\"1\":{\"237\":1}}],[\"在外层提供用于特定目的\",{\"1\":{\"16\":1}}],[\"在例子中\",{\"1\":{\"232\":1}}],[\"在使用数字类型时如果数据达到最大值\",{\"1\":{\"292\":1}}],[\"在使用连接后支持两种过滤条件\",{\"1\":{\"237\":1}}],[\"在使用时与直接写原生\",{\"1\":{\"217\":1}}],[\"在使用协程时\",{\"1\":{\"42\":1}}],[\"在堆栈跟踪中显示异步调用的信息\",{\"1\":{\"194\":1}}],[\"在启动后会在入口处停止\",{\"1\":{\"194\":1}}],[\"在主机a发送请求数据包时会随机分配一个端口号如\",{\"1\":{\"176\":1}}],[\"在主程序中\",{\"1\":{\"40\":1}}],[\"在第一次收到\",{\"1\":{\"173\":1}}],[\"在网关部署arp报文限速功能\",{\"1\":{\"173\":1}}],[\"在网络设备中设置规则\",{\"1\":{\"163\":1}}],[\"在支持\",{\"1\":{\"172\":1}}],[\"在慢开始阶段\",{\"1\":{\"155\":1}}],[\"在快速重传的机制下\",{\"1\":{\"152\":1}}],[\"在快速重传机制下\",{\"1\":{\"152\":1}}],[\"在数据包丢失后\",{\"1\":{\"152\":1}}],[\"在数据包中插入时间戳信息\",{\"1\":{\"140\":1}}],[\"在服务器返回\",{\"1\":{\"149\":1}}],[\"在多个\",{\"1\":{\"119\":1}}],[\"在并发操作下\",{\"1\":{\"103\":1}}],[\"在并发编程中\",{\"1\":{\"35\":1}}],[\"在字典中删除键值需要使用\",{\"1\":{\"100\":1}}],[\"在变量前使用\",{\"1\":{\"81\":1}}],[\"在程序后台执行动作\",{\"1\":{\"70\":1}}],[\"在进行字符串转换时\",{\"1\":{\"46\":1}}],[\"在序列化的结构体中\",{\"1\":{\"41\":1}}],[\"在序列化的结构体中需声明\",{\"0\":{\"41\":1}}],[\"在一个时刻只有一个\",{\"1\":{\"35\":1}}],[\"在生产环境中尽量不要使用\",{\"1\":{\"34\":1}}],[\"在我们需要类型断言的时候\",{\"1\":{\"33\":1}}],[\"在处理错误时\",{\"1\":{\"32\":1}}],[\"在\",{\"1\":{\"30\":1,\"43\":1,\"44\":1,\"69\":1,\"94\":1,\"113\":1,\"141\":1,\"152\":1,\"171\":2,\"189\":1,\"193\":2,\"196\":1,\"237\":1,\"258\":1,\"259\":1,\"269\":1,\"282\":1}}],[\"在通常情况下不推荐使用别名\",{\"1\":{\"8\":1}}],[\"white\",{\"1\":{\"280\":1}}],[\"where\",{\"0\":{\"245\":1},\"1\":{\"214\":2,\"237\":4,\"245\":8,\"246\":3,\"248\":2}}],[\"workspacefolder\",{\"1\":{\"194\":8}}],[\"world\",{\"1\":{\"63\":1,\"64\":2,\"69\":2,\"276\":3}}],[\"with\",{\"1\":{\"217\":1}}],[\"within\",{\"1\":{\"192\":1}}],[\"withcancel\",{\"0\":{\"126\":1},\"1\":{\"126\":2}}],[\"withtimeout\",{\"0\":{\"125\":1},\"1\":{\"125\":3}}],[\"withdeadline\",{\"0\":{\"125\":1},\"1\":{\"125\":2}}],[\"withvalue\",{\"0\":{\"124\":1},\"1\":{\"123\":11,\"124\":1}}],[\"withxxx\",{\"1\":{\"123\":1}}],[\"websocket\",{\"1\":{\"196\":3}}],[\"web\",{\"0\":{\"198\":1},\"1\":{\"196\":6}}],[\"wednesday\",{\"1\":{\"64\":1}}],[\"weights\",{\"1\":{\"11\":2}}],[\"w可确保它们可以将错误与errors\",{\"1\":{\"32\":1}}],[\"wrap\",{\"1\":{\"30\":1}}],[\"writefile\",{\"1\":{\"18\":2}}],[\"writecloser\",{\"1\":{\"16\":2}}],[\"write\",{\"1\":{\"16\":6,\"32\":1,\"59\":1}}],[\"wait\",{\"1\":{\"42\":1,\"43\":3}}],[\"waitgroup\",{\"1\":{\"16\":2,\"43\":2}}],[\"wanterror\",{\"1\":{\"19\":2}}],[\"wg\",{\"1\":{\"16\":1,\"43\":4}}],[\"w\",{\"1\":{\"16\":3,\"30\":2,\"32\":2}}],[\"的内存会被释放吗\",{\"0\":{\"303\":1}}],[\"的内部细节\",{\"1\":{\"16\":1}}],[\"的操作会发生什么\",{\"0\":{\"297\":1}}],[\"的别名类型\",{\"1\":{\"283\":2}}],[\"的条件判断每一行是否满足条件\",{\"1\":{\"264\":1}}],[\"的字段\",{\"1\":{\"263\":2}}],[\"的效果是一致的\",{\"1\":{\"237\":1}}],[\"的笛卡尔积为\",{\"1\":{\"229\":1}}],[\"的所有元素分别乘以\",{\"1\":{\"229\":1}}],[\"的工具函数\",{\"1\":{\"225\":1}}],[\"的作用和\",{\"1\":{\"224\":1}}],[\"的预加载\",{\"1\":{\"217\":1}}],[\"的设计目标是提供一些常用的工具函数和工具方法\",{\"1\":{\"224\":1}}],[\"的设计目标是提供一种简单\",{\"1\":{\"200\":2,\"205\":2}}],[\"的设计思想和\",{\"1\":{\"210\":1}}],[\"的生态相对不完善\",{\"1\":{\"205\":1}}],[\"的生态完善\",{\"1\":{\"200\":1}}],[\"的文档完善\",{\"1\":{\"205\":1}}],[\"的文档相对不够完善\",{\"1\":{\"200\":1}}],[\"的命令行工具\",{\"1\":{\"201\":1,\"206\":1}}],[\"的社区相对小\",{\"1\":{\"200\":1,\"205\":1}}],[\"的社区活跃\",{\"1\":{\"200\":1}}],[\"的功能相对复杂\",{\"1\":{\"200\":1}}],[\"的功能相对简单\",{\"1\":{\"196\":1}}],[\"的性能较低\",{\"1\":{\"217\":1}}],[\"的性能优秀\",{\"1\":{\"200\":1}}],[\"的性能非常好\",{\"1\":{\"196\":1}}],[\"的包即可\",{\"1\":{\"189\":1}}],[\"的包中使用它\",{\"1\":{\"31\":1}}],[\"的优势\",{\"1\":{\"181\":1}}],[\"的优点\",{\"0\":{\"177\":1}}],[\"的出现解决了这些问题\",{\"1\":{\"181\":1}}],[\"的缺点\",{\"0\":{\"178\":1},\"1\":{\"178\":1}}],[\"的地址是有限的\",{\"1\":{\"177\":1}}],[\"的不同网段的子设备能够解析\",{\"1\":{\"172\":1}}],[\"的动态分配不同\",{\"1\":{\"170\":1}}],[\"的动作\",{\"1\":{\"64\":1}}],[\"的大小\",{\"1\":{\"157\":1}}],[\"的值将会重置为\",{\"1\":{\"156\":1}}],[\"的增长从翻倍增长变为每经过一个传播轮次就加\",{\"1\":{\"156\":1}}],[\"的时候实际遍历的是变量的副本\",{\"1\":{\"290\":1}}],[\"的时候利用索引可以减少回表次数\",{\"1\":{\"237\":1}}],[\"的时候会将当前可用的窗口大小写入\",{\"1\":{\"153\":1}}],[\"的时间\",{\"1\":{\"152\":1}}],[\"的标志位\",{\"1\":{\"152\":1}}],[\"的报文段返回的都是\",{\"1\":{\"152\":1}}],[\"的监督下确保交易达成后不能否认未进行交易\",{\"1\":{\"137\":1}}],[\"的例子\",{\"1\":{\"137\":1}}],[\"的长度\",{\"1\":{\"102\":1}}],[\"的方法\",{\"1\":{\"93\":1}}],[\"的数据列被返回了\",{\"1\":{\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"的数据包\",{\"1\":{\"152\":1}}],[\"的数据段\",{\"1\":{\"144\":1}}],[\"的数据并打印\",{\"1\":{\"115\":1}}],[\"的数据\",{\"1\":{\"115\":3,\"264\":2}}],[\"的数据到\",{\"1\":{\"109\":1}}],[\"的数据类型\",{\"1\":{\"79\":2,\"98\":2}}],[\"的数量应该受限制\",{\"1\":{\"42\":1}}],[\"的声明方式\",{\"1\":{\"79\":1,\"98\":1}}],[\"的\",{\"0\":{\"303\":1},\"1\":{\"60\":1,\"114\":1,\"152\":1,\"166\":1,\"172\":1,\"176\":1,\"196\":3,\"217\":2,\"303\":1}}],[\"的执行顺序是什么\",{\"0\":{\"291\":1}}],[\"的执行顺序是后进先出\",{\"1\":{\"69\":1}}],[\"的执行\",{\"1\":{\"43\":1}}],[\"的使用示例\",{\"0\":{\"197\":1,\"211\":1,\"218\":1}}],[\"的使用\",{\"0\":{\"42\":1,\"201\":1,\"206\":1}}],[\"的话会导致难以控制程序流\",{\"1\":{\"40\":1}}],[\"的容量\",{\"0\":{\"39\":1,\"47\":1}}],[\"的主要原因\",{\"1\":{\"34\":1}}],[\"的一部分\",{\"1\":{\"31\":2}}],[\"的切片\",{\"1\":{\"17\":1,\"107\":1}}],[\"的类型\",{\"1\":{\"14\":1}}],[\"会员专属\",{\"1\":{\"303\":1}}],[\"会被内存回收\",{\"1\":{\"303\":1}}],[\"会被定义为\",{\"1\":{\"14\":1}}],[\"会触发\",{\"1\":{\"296\":1}}],[\"会拷贝一份\",{\"1\":{\"293\":1}}],[\"会无限执行吗\",{\"0\":{\"290\":1}}],[\"会根据添加的数据自动扩容\",{\"1\":{\"289\":1}}],[\"会出现错误\",{\"1\":{\"279\":1}}],[\"会出现灯泡\",{\"1\":{\"189\":1}}],[\"会先使用索引\",{\"1\":{\"264\":2}}],[\"会占用一定的空间\",{\"1\":{\"210\":1}}],[\"会进行重试\",{\"1\":{\"163\":1}}],[\"会立即重传缺失的报文段\",{\"1\":{\"152\":1}}],[\"会话层\",{\"1\":{\"128\":1,\"129\":1}}],[\"会产生大量半连接\",{\"1\":{\"163\":1}}],[\"会产生\",{\"1\":{\"114\":1}}],[\"会发现好像刚刚的更改对于某些数据未起作用\",{\"1\":{\"269\":1}}],[\"会发现\",{\"1\":{\"109\":1}}],[\"会阻塞直到一个\",{\"1\":{\"67\":1}}],[\"会自动补上切片的容量和长度\",{\"1\":{\"280\":1}}],[\"会自动跳出\",{\"1\":{\"64\":1}}],[\"会自动扩容\",{\"1\":{\"60\":1}}],[\"会正常退出程序\",{\"1\":{\"40\":1}}],[\"会丢失错误类型信息\",{\"1\":{\"30\":1}}],[\"会和其他嵌入式类型混合在一起\",{\"1\":{\"16\":1}}],[\"会导致服务器无法响应请求\",{\"1\":{\"163\":1}}],[\"会导致服务器的入站网络突然增加\",{\"1\":{\"163\":1}}],[\"会导致网络性能下降\",{\"1\":{\"163\":1}}],[\"会导致程序的初始化变得复杂\",{\"1\":{\"44\":1}}],[\"会导致程序崩溃\",{\"1\":{\"40\":1}}],[\"会导致\",{\"1\":{\"33\":1}}],[\"会导致调用的不确定性\",{\"1\":{\"16\":1}}],[\"会导致方法调用的不确定性\",{\"1\":{\"16\":1}}],[\"会导入嵌入式方法的特殊零值\",{\"1\":{\"16\":1}}],[\"会暴露嵌入式类型的所有字段和方法\",{\"1\":{\"16\":1}}],[\"可由三种字面量表示\",{\"1\":{\"278\":1}}],[\"可重复读指的是在一个事务内\",{\"1\":{\"269\":1}}],[\"可重复读\",{\"1\":{\"269\":1}}],[\"可移植性\",{\"1\":{\"181\":1}}],[\"可靠传输\",{\"1\":{\"162\":1}}],[\"可靠的微服务开发框架\",{\"1\":{\"200\":2,\"205\":2}}],[\"可靠的\",{\"1\":{\"146\":1}}],[\"可能已丢失\",{\"1\":{\"152\":1}}],[\"可能会受到其他事务的影响\",{\"1\":{\"269\":1}}],[\"可能会遇到一些问题无法解决\",{\"1\":{\"200\":1,\"205\":1}}],[\"可能会降低效率\",{\"1\":{\"152\":1}}],[\"可能会丢包\",{\"1\":{\"139\":1}}],[\"可能会被第三方获取\",{\"1\":{\"133\":1}}],[\"可能会导致数据存储不连续\",{\"1\":{\"258\":1,\"259\":1}}],[\"可能会导致程序的初始化顺序变得不确定\",{\"1\":{\"44\":1}}],[\"可能会导致外部包访问到未导出的字段和方法\",{\"1\":{\"16\":1}}],[\"可划分为\",{\"1\":{\"140\":1}}],[\"可被多个用户共享\",{\"1\":{\"136\":1}}],[\"可通过此返回码清除浏览器的表单域\",{\"1\":{\"132\":1}}],[\"可通过\",{\"1\":{\"80\":1}}],[\"可通过下标获取数据\",{\"1\":{\"77\":1}}],[\"可根据数据自动调整容量大小\",{\"1\":{\"78\":1}}],[\"可嵌套使用\",{\"1\":{\"63\":1}}],[\"可立即使用\",{\"1\":{\"17\":1}}],[\"可以的\",{\"1\":{\"295\":1}}],[\"可以读取\",{\"0\":{\"295\":1}}],[\"可以存储任意\",{\"1\":{\"284\":1}}],[\"可以支持范围查询\",{\"1\":{\"267\":1}}],[\"可以减少回表查询数据\",{\"1\":{\"264\":1}}],[\"可以看到不只有满足\",{\"1\":{\"235\":1,\"236\":1,\"237\":1}}],[\"可以看到只有满足\",{\"1\":{\"233\":1}}],[\"可以有多个唯一键\",{\"1\":{\"228\":1}}],[\"可以根据需求进行配置\",{\"1\":{\"217\":1}}],[\"可以根据需求快速增加或减少容器\",{\"1\":{\"181\":1}}],[\"可以是\",{\"1\":{\"194\":2}}],[\"可以是数组或者字符串\",{\"1\":{\"194\":1}}],[\"可以是文件路径或者目录路径\",{\"1\":{\"194\":1}}],[\"可以实现以下功能\",{\"1\":{\"193\":1}}],[\"可以实现接口\",{\"1\":{\"16\":1}}],[\"可以帮助你更好地调试代码\",{\"1\":{\"193\":1}}],[\"可以帮助你更好地管理远程代码\",{\"1\":{\"192\":1}}],[\"可以帮助你更好地管理代码版本\",{\"1\":{\"192\":1}}],[\"可以帮助开发者提高开发效率\",{\"1\":{\"187\":1,\"191\":1}}],[\"可以让你更容易地看到代码的缩进层级\",{\"1\":{\"192\":1}}],[\"可以让开发者打包他们的应用以及依赖包到一个可移植的容器中\",{\"1\":{\"180\":1}}],[\"可以方便地设置超时时间\",{\"1\":{\"299\":1}}],[\"可以方便地调用\",{\"1\":{\"224\":1}}],[\"可以方便地修改所选字符串\",{\"1\":{\"188\":1}}],[\"可以方便地配置协程的终止时间\",{\"1\":{\"119\":1}}],[\"可以快速构建微服务应用程序\",{\"1\":{\"200\":1}}],[\"可以快速构建\",{\"1\":{\"196\":2}}],[\"可以快速扩展\",{\"1\":{\"181\":1}}],[\"可以快速部署\",{\"1\":{\"181\":2}}],[\"可以与持续集成工具结合\",{\"1\":{\"181\":1}}],[\"可以保证开发环境\",{\"1\":{\"181\":1}}],[\"可以保证基本类型如\",{\"1\":{\"35\":1}}],[\"可以统计一段时间内的\",{\"1\":{\"173\":1}}],[\"可以通过限制\",{\"1\":{\"163\":1}}],[\"可以更快地释放分配给半开连接的资源\",{\"1\":{\"163\":1}}],[\"可以创建手动终止的\",{\"1\":{\"126\":1}}],[\"可以批量管理多个协程的终止\",{\"1\":{\"119\":1}}],[\"可以同时接收多个\",{\"1\":{\"115\":1}}],[\"可以获得零值\",{\"1\":{\"114\":1}}],[\"可以截取切片\",{\"1\":{\"106\":1}}],[\"可以跳到指定位置继续执行动作\",{\"1\":{\"66\":1}}],[\"可以在任何平台上运行\",{\"1\":{\"181\":1}}],[\"可以在一台主机上运行多个容器\",{\"1\":{\"181\":1}}],[\"可以在一个连接中并发多个请求或回应\",{\"1\":{\"135\":1}}],[\"可以在几秒或者几十秒内启动或停止容器\",{\"1\":{\"181\":1}}],[\"可以在开发环境\",{\"1\":{\"180\":1}}],[\"可以在创建时直接将数据初始化\",{\"1\":{\"105\":1}}],[\"可以在执行完对应\",{\"1\":{\"64\":1}}],[\"可以在导入时设置别名\",{\"1\":{\"53\":1}}],[\"可以省略\",{\"1\":{\"51\":1}}],[\"可以省略字段名\",{\"1\":{\"22\":1}}],[\"可以用来创建带有超时控制的\",{\"1\":{\"125\":1}}],[\"可以用于创建派生节点并添加键值数据\",{\"1\":{\"124\":1}}],[\"可以用\",{\"1\":{\"42\":1}}],[\"可以访问\",{\"1\":{\"35\":1}}],[\"可以使用前缀索引\",{\"1\":{\"263\":1}}],[\"可以使用覆盖索引\",{\"1\":{\"259\":1}}],[\"可以使用官方的\",{\"1\":{\"103\":1}}],[\"可以使用括号提高优先级\",{\"1\":{\"90\":1}}],[\"可以使用\",{\"1\":{\"30\":1,\"109\":1,\"274\":1}}],[\"可以使代码更直观简洁\",{\"1\":{\"12\":1}}],[\"可以直接访问嵌入类型的方法和字段\",{\"1\":{\"16\":1}}],[\"缺点是并发操作时数据修改会影响到原始的数据\",{\"1\":{\"293\":1}}],[\"缺点是值传递会复制一份对应变量的副本\",{\"1\":{\"293\":1}}],[\"缺点\",{\"1\":{\"16\":1,\"196\":1,\"200\":1,\"205\":1,\"210\":1,\"217\":1,\"250\":1,\"258\":1,\"259\":1}}],[\"duke\",{\"1\":{\"226\":1}}],[\"duplicate\",{\"1\":{\"152\":1}}],[\"db\",{\"1\":{\"219\":1,\"220\":1,\"221\":1,\"222\":1}}],[\"dryrun\",{\"1\":{\"217\":1}}],[\"distinct\",{\"1\":{\"242\":1}}],[\"dictionary\",{\"1\":{\"212\":1,\"213\":1,\"214\":4,\"215\":1}}],[\"diff\",{\"1\":{\"184\":1}}],[\"dll>\",{\"1\":{\"194\":1}}],[\"d2\",{\"1\":{\"172\":1}}],[\"dd\",{\"1\":{\"172\":1}}],[\"ddos\",{\"1\":{\"163\":1}}],[\"d\",{\"1\":{\"152\":4,\"172\":9,\"184\":1,\"285\":2}}],[\"dhcpv6\",{\"1\":{\"143\":1}}],[\"dhcp\",{\"1\":{\"143\":1}}],[\"df\",{\"1\":{\"140\":1,\"141\":1,\"142\":1}}],[\"dscp\",{\"1\":{\"140\":1}}],[\"ds\",{\"1\":{\"140\":1}}],[\"dns\",{\"0\":{\"164\":1,\"166\":1,\"167\":1,\"168\":1},\"1\":{\"129\":1,\"165\":3,\"166\":5,\"168\":8}}],[\"datetime\",{\"1\":{\"225\":1}}],[\"datastructure\",{\"1\":{\"225\":1}}],[\"dataslice2\",{\"1\":{\"105\":2}}],[\"dataslice1\",{\"1\":{\"105\":3}}],[\"dataslice\",{\"1\":{\"105\":2}}],[\"datagram\",{\"1\":{\"159\":1}}],[\"data2\",{\"1\":{\"108\":2}}],[\"data1\",{\"1\":{\"108\":2,\"109\":7}}],[\"datamap\",{\"1\":{\"99\":9,\"100\":9,\"101\":7,\"102\":1}}],[\"database\",{\"0\":{\"332\":1,\"337\":1},\"1\":{\"38\":1,\"217\":1}}],[\"data\",{\"1\":{\"12\":2,\"18\":6,\"39\":6,\"77\":1,\"78\":4,\"106\":2,\"107\":4,\"108\":4,\"109\":6,\"214\":1}}],[\"day\",{\"1\":{\"64\":1}}],[\"dayofweek\",{\"1\":{\"64\":2}}],[\"docker\",{\"0\":{\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"310\":1,\"322\":1},\"1\":{\"180\":2,\"181\":13,\"182\":18}}],[\"dos\",{\"1\":{\"173\":1}}],[\"domain\",{\"1\":{\"165\":1}}],[\"don\",{\"1\":{\"140\":1}}],[\"done\",{\"1\":{\"42\":4,\"43\":4,\"120\":1,\"125\":1,\"126\":1}}],[\"doesn\",{\"1\":{\"32\":1}}],[\"doe\",{\"1\":{\"21\":2,\"22\":2}}],[\"details\",{\"1\":{\"214\":1}}],[\"desc\",{\"1\":{\"212\":1}}],[\"description\",{\"1\":{\"32\":1,\"192\":4}}],[\"demo\",{\"1\":{\"208\":1}}],[\"debug\",{\"1\":{\"194\":3}}],[\"devtools\",{\"0\":{\"311\":1,\"323\":1}}],[\"dev\",{\"1\":{\"184\":8}}],[\"devgit\",{\"1\":{\"184\":4}}],[\"denial\",{\"1\":{\"173\":1}}],[\"deadline\",{\"1\":{\"120\":3}}],[\"delay\",{\"1\":{\"42\":2}}],[\"deleteoneid\",{\"1\":{\"215\":1}}],[\"delete\",{\"1\":{\"37\":2,\"100\":2,\"131\":2,\"184\":1,\"217\":1,\"222\":1,\"297\":3}}],[\"defergo\",{\"1\":{\"49\":1}}],[\"defer\",{\"0\":{\"291\":1},\"1\":{\"40\":1,\"42\":2,\"43\":2,\"69\":6,\"291\":3}}],[\"default\",{\"1\":{\"64\":3,\"115\":3,\"125\":1,\"126\":1,\"198\":1}}],[\"defaultuser\",{\"1\":{\"15\":2}}],[\"defaultport\",{\"1\":{\"15\":2}}],[\"decode\",{\"1\":{\"18\":2}}],[\"以引用类型的切片\",{\"1\":{\"287\":1}}],[\"以满足程序的需求\",{\"1\":{\"273\":1}}],[\"以\",{\"1\":{\"228\":2}}],[\"以图结构建模数据库模式\",{\"1\":{\"210\":1}}],[\"以对象形式提供程序运行时的环境变量\",{\"1\":{\"194\":1}}],[\"以太网源\",{\"1\":{\"171\":2}}],[\"以太网目标\",{\"1\":{\"171\":2}}],[\"以太网首部\",{\"1\":{\"171\":1}}],[\"以保证数据的正确送达\",{\"1\":{\"170\":1}}],[\"以应对网络中的丢包\",{\"1\":{\"152\":1}}],[\"以确保在网络延迟较高或不稳定的情况下也能够成功重传数据\",{\"1\":{\"152\":1}}],[\"以及此时的堆栈信息\",{\"1\":{\"193\":1}}],[\"以及有助于识别并验证网站所有者\",{\"1\":{\"136\":1}}],[\"以及在较大的窗口中查看多个文件\",{\"1\":{\"4\":1}}],[\"以二进制数据形式在物理媒介上传输数据\",{\"1\":{\"129\":1}}],[\"以下三种写法相同\",{\"1\":{\"233\":1}}],[\"以下注释的代码会报错\",{\"1\":{\"75\":1}}],[\"以下定义是错误的\",{\"1\":{\"14\":1}}],[\"以避免不必要的内存分配和自动扩容\",{\"1\":{\"47\":1}}],[\"以便诊断网络问题或跟踪数据包的路径\",{\"1\":{\"140\":1}}],[\"以便序列化和反序列化时能够正确的解析数据\",{\"1\":{\"41\":1}}],[\"以便这个包的用户可以将它与\",{\"1\":{\"31\":1}}],[\"以便此包的用户可以将它们与\",{\"1\":{\"31\":1}}],[\"为例来讲讲深拷贝和浅拷贝\",{\"1\":{\"287\":1}}],[\"为了减少\",{\"1\":{\"259\":1}}],[\"为了确认服务器端的syn\",{\"1\":{\"149\":1}}],[\"为了确认客户端的syn\",{\"1\":{\"149\":1}}],[\"为了确认接收端确实收到了发送端发送的数据包数据\",{\"1\":{\"147\":1}}],[\"为被驱动表\",{\"1\":{\"232\":1}}],[\"为驱动表\",{\"1\":{\"232\":1}}],[\"为什么使用指针\",{\"0\":{\"273\":1}}],[\"为什么使用\",{\"0\":{\"181\":1}}],[\"为什么要四次挥手\",{\"1\":{\"149\":1}}],[\"为什么要三次握手\",{\"1\":{\"149\":1}}],[\"为攻击者提供有价值的干扰\",{\"1\":{\"163\":1}}],[\"为0表示无效\",{\"1\":{\"147\":1}}],[\"为数据包选择路由\",{\"1\":{\"129\":1}}],[\"为数据类型\",{\"1\":{\"51\":1,\"112\":1}}],[\"为应用程序提供交互服务\",{\"1\":{\"128\":1}}],[\"为树形结构\",{\"1\":{\"121\":1}}],[\"为类型\",{\"1\":{\"52\":1}}],[\"为参数\",{\"1\":{\"52\":1}}],[\"为\",{\"1\":{\"14\":1,\"17\":1,\"79\":2,\"98\":2,\"114\":1,\"141\":1,\"303\":1}}],[\"left\",{\"0\":{\"235\":1},\"1\":{\"235\":1}}],[\"len\",{\"1\":{\"16\":1,\"17\":2,\"37\":2,\"102\":2,\"107\":2,\"109\":1}}],[\"lucky\",{\"1\":{\"80\":1}}],[\"l\",{\"1\":{\"36\":4,\"212\":1,\"213\":1,\"214\":2,\"215\":1}}],[\"lancet\",{\"0\":{\"223\":1},\"1\":{\"224\":3,\"226\":1}}],[\"language\",{\"1\":{\"188\":2,\"192\":1}}],[\"latest\",{\"1\":{\"202\":1,\"207\":1}}],[\"later\",{\"1\":{\"16\":2}}],[\"lauch\",{\"1\":{\"193\":1}}],[\"launch\",{\"0\":{\"193\":1},\"1\":{\"193\":2,\"194\":12}}],[\"lastname\",{\"1\":{\"21\":1,\"22\":2}}],[\"loose\",{\"1\":{\"140\":1}}],[\"load\",{\"1\":{\"35\":1}}],[\"lock\",{\"1\":{\"16\":1,\"35\":1,\"269\":1}}],[\"logger\",{\"1\":{\"217\":1}}],[\"logs\",{\"1\":{\"182\":1}}],[\"log\",{\"1\":{\"12\":2,\"32\":2,\"40\":6,\"184\":1}}],[\"like\",{\"1\":{\"245\":5,\"263\":1}}],[\"limit\",{\"0\":{\"244\":1},\"1\":{\"244\":4}}],[\"linux\",{\"1\":{\"149\":1,\"180\":1}}],[\"link\",{\"1\":{\"31\":1,\"192\":4}}],[\"library\",{\"0\":{\"315\":1,\"327\":1}}],[\"lib\",{\"1\":{\"9\":1,\"53\":3}}],[\"list\",{\"1\":{\"6\":4,\"36\":3,\"52\":1}}],[\"开始\",{\"1\":{\"244\":1,\"292\":1}}],[\"开始翻倍增长\",{\"1\":{\"149\":1}}],[\"开源\",{\"1\":{\"181\":1,\"205\":1}}],[\"开放系统互联\",{\"1\":{\"159\":1}}],[\"开头为无符号数\",{\"1\":{\"72\":1}}],[\"开头为有符号数\",{\"1\":{\"72\":1}}],[\"开头\",{\"1\":{\"31\":1,\"245\":2}}],[\"开头的函数应放在前面\",{\"1\":{\"11\":1}}],[\"开发者可以很快上手\",{\"1\":{\"217\":1}}],[\"开发者友好\",{\"1\":{\"217\":1}}],[\"开发环境和生产环境不一致等\",{\"1\":{\"181\":1}}],[\"开发人员在开发环境中编写代码\",{\"1\":{\"181\":1}}],[\"开发原则\",{\"0\":{\"27\":1}}],[\"开发规范\",{\"0\":{\"2\":1}}],[\"开发相关的知识点\",{\"1\":{\"1\":1}}],[\"开发相关的指南\",{\"1\":{\"1\":1}}],[\"同理\",{\"1\":{\"141\":1}}],[\"同样的\",{\"1\":{\"280\":1}}],[\"同样数量的数据\",{\"1\":{\"267\":1}}],[\"同样指明自己的isn\",{\"1\":{\"149\":1}}],[\"同样是空白\",{\"1\":{\"122\":1}}],[\"同样\",{\"1\":{\"31\":1}}],[\"同时添加数据\",{\"0\":{\"290\":1}}],[\"同时添加额外的上下文信息\",{\"1\":{\"30\":1}}],[\"同时未匹配的其他数据也会返回\",{\"1\":{\"237\":1}}],[\"同时被驱动表未匹配的其他数据也会返回\",{\"1\":{\"236\":1}}],[\"同时驱动表未匹配的其他数据也会返回\",{\"1\":{\"235\":1}}],[\"同时广播大量\",{\"1\":{\"173\":1}}],[\"同时通过\",{\"1\":{\"151\":1}}],[\"同时还包含一个ack=y+1表示确认对方最近一次发过来的数据\",{\"1\":{\"149\":1}}],[\"同时还有两个等价类型\",{\"1\":{\"72\":1}}],[\"同时\",{\"1\":{\"137\":1,\"156\":1}}],[\"同时保留父级\",{\"1\":{\"124\":1}}],[\"同时发送过来数据\",{\"1\":{\"115\":1}}],[\"同时提供面试题供开发者学习和求职\",{\"1\":{\"1\":1}}],[\"同一个文件中函数应放在\",{\"1\":{\"11\":1}}],[\"这种常量只有值\",{\"1\":{\"276\":1}}],[\"这种方式存在很多问题\",{\"1\":{\"181\":1}}],[\"这不能避免幻读\",{\"1\":{\"269\":1}}],[\"这就叫幻读\",{\"1\":{\"269\":1}}],[\"这就是脏读\",{\"1\":{\"269\":1}}],[\"这是最基本的索引\",{\"1\":{\"251\":1}}],[\"这是一个强制性的字段\",{\"1\":{\"147\":1}}],[\"这是一个递归的过程\",{\"1\":{\"134\":1}}],[\"这三类网段为私有网段\",{\"1\":{\"175\":1}}],[\"这时候\",{\"1\":{\"228\":1}}],[\"这时候就需要使用\",{\"1\":{\"175\":1}}],[\"这时上层的应用程序会被告知另一端发起了关闭操作\",{\"1\":{\"149\":1}}],[\"这些关键字用于控制程序运行流程\",{\"1\":{\"49\":1}}],[\"这些关键字用于声明一些特殊的复合类型\",{\"1\":{\"49\":1}}],[\"这些关键字用于声明代码中的各种元素\",{\"1\":{\"49\":1}}],[\"这些关键字不能用作程序标识符\",{\"1\":{\"49\":1}}],[\"这些是不好的\",{\"1\":{\"9\":1}}],[\"这个确认号是期望收到对方下一个报文段的数据的第一个字节的序列号\",{\"1\":{\"147\":1}}],[\"这个序列号记录每个数据包的序列号\",{\"1\":{\"147\":1}}],[\"这个3位字段用于控制和识别分片\",{\"1\":{\"140\":1}}],[\"这个状态代码必须和www\",{\"1\":{\"132\":1}}],[\"这个\",{\"1\":{\"42\":1}}],[\"这个错误被导出\",{\"1\":{\"31\":1}}],[\"这个错误没有被导出\",{\"1\":{\"31\":1}}],[\"这将一直运行到应用程序退出\",{\"1\":{\"42\":1}}],[\"这样会增加一次\",{\"1\":{\"259\":1}}],[\"这样发送方可以看到未成功传输的数据包\",{\"1\":{\"152\":1}}],[\"这样\",{\"1\":{\"149\":1}}],[\"这样只会执行导入包的初始化函数\",{\"1\":{\"53\":1}}],[\"这样做会在应用程序日志中造成大量噪音\",{\"1\":{\"32\":1}}],[\"这样可以节省内存空间\",{\"1\":{\"273\":1}}],[\"这样可以保证事务在执行过程中看到的数据是一致的\",{\"1\":{\"269\":1}}],[\"这样可以保留原始错误信息\",{\"1\":{\"30\":1}}],[\"这样可以使用\",{\"1\":{\"30\":1}}],[\"这样可以避免重复定义格式化字符串\",{\"1\":{\"26\":1}}],[\"这样可以避免因为结构体字段的变化导致初始化错误\",{\"1\":{\"21\":1}}],[\"这样可以避免在\",{\"1\":{\"18\":1}}],[\"这有助于在较小的窗口中查看多个文件\",{\"1\":{\"4\":1}}],[\"或在高速网络环境下用作窗口调节因子时使用\",{\"1\":{\"147\":1}}],[\"或超时终止时\",{\"1\":{\"121\":1}}],[\"或者进行显式的转换\",{\"1\":{\"277\":1}}],[\"或者伪装成其他主机和服务器建立连接\",{\"1\":{\"144\":1}}],[\"或者因超时而被丢弃\",{\"1\":{\"139\":1}}],[\"或者\",{\"1\":{\"29\":1,\"30\":1,\"40\":1}}],[\"或者导入包名太长时可以使用导入别名\",{\"1\":{\"8\":1}}],[\"或\",{\"0\":{\"40\":1},\"1\":{\"9\":1,\"11\":1,\"35\":1,\"40\":2,\"41\":1,\"72\":1,\"76\":1,\"143\":1,\"182\":1,\"184\":1,\"194\":2,\"245\":1,\"246\":1,\"249\":1}}],[\"upsert\",{\"1\":{\"217\":1}}],[\"updateoneid\",{\"1\":{\"213\":1}}],[\"update\",{\"1\":{\"189\":3,\"217\":1,\"220\":1}}],[\"urg=1表示紧急指针字段有效\",{\"1\":{\"147\":1}}],[\"urg=1表示存在紧急数据\",{\"1\":{\"147\":1}}],[\"urg\",{\"1\":{\"147\":1}}],[\"urls\",{\"1\":{\"9\":1}}],[\"url\",{\"1\":{\"9\":1,\"16\":5,\"132\":1,\"225\":1}}],[\"udp用户数据报的长度\",{\"1\":{\"161\":1}}],[\"udp用来支持那些需要在计算机之间传输数据的网络应用\",{\"1\":{\"160\":1}}],[\"udp在传输数据前不需要在客户和服务器之间建立一个连接\",{\"1\":{\"160\":1}}],[\"udp\",{\"0\":{\"145\":1,\"159\":1,\"163\":1},\"1\":{\"129\":1,\"140\":1,\"159\":1,\"161\":1,\"162\":3,\"163\":3}}],[\"uint64\",{\"1\":{\"37\":1,\"82\":1}}],[\"uint32\",{\"1\":{\"37\":1,\"82\":1}}],[\"uint16\",{\"1\":{\"37\":1,\"82\":1}}],[\"uint8\",{\"1\":{\"37\":1,\"72\":1,\"82\":1,\"212\":1,\"213\":1,\"283\":1,\"292\":1}}],[\"uintptr\",{\"1\":{\"37\":3,\"82\":1}}],[\"uint\",{\"1\":{\"37\":3,\"72\":1,\"82\":1,\"292\":2}}],[\"utc\",{\"1\":{\"32\":2}}],[\"util\",{\"0\":{\"318\":1,\"330\":1},\"1\":{\"9\":1}}],[\"use\",{\"1\":{\"32\":1,\"132\":1,\"277\":1}}],[\"users\",{\"1\":{\"245\":7,\"246\":3,\"247\":1,\"248\":2}}],[\"user\",{\"1\":{\"15\":2,\"21\":2,\"22\":4,\"23\":4,\"32\":4,\"159\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1}}],[\"u\",{\"1\":{\"32\":2,\"207\":1}}],[\"unsafe\",{\"1\":{\"285\":3}}],[\"unsigned\",{\"1\":{\"72\":1}}],[\"uncommitted\",{\"1\":{\"269\":1}}],[\"unique\",{\"1\":{\"228\":1,\"254\":1}}],[\"unit\",{\"1\":{\"141\":1}}],[\"unicode\",{\"1\":{\"72\":1,\"284\":3}}],[\"unavailable\",{\"1\":{\"132\":1}}],[\"unauthorized\",{\"1\":{\"132\":1}}],[\"unexpected\",{\"1\":{\"26\":2}}],[\"unknown\",{\"1\":{\"19\":1,\"29\":1}}],[\"unlock\",{\"1\":{\"16\":1}}],[\"uber\",{\"1\":{\"2\":1,\"7\":2,\"41\":2}}],[\"包响应不可达的信息\",{\"1\":{\"163\":1}}],[\"包时会发生以下操作\",{\"1\":{\"163\":1}}],[\"包括协程\",{\"1\":{\"225\":1}}],[\"包括接口定义\",{\"1\":{\"200\":2,\"205\":2}}],[\"包括网络视频会议系统在内的众多的客户\",{\"1\":{\"160\":1}}],[\"包括流标签和流优先级\",{\"1\":{\"143\":1}}],[\"包括但不限于\",{\"1\":{\"1\":1}}],[\"包含了多个配置项\",{\"1\":{\"194\":1}}],[\"包含了一切运行所需的东西\",{\"1\":{\"180\":1}}],[\"包含\",{\"1\":{\"95\":1,\"106\":1}}],[\"包转换速度更快\",{\"1\":{\"46\":1}}],[\"包是比较轻的\",{\"1\":{\"46\":1}}],[\"包是比较重的\",{\"1\":{\"46\":1}}],[\"包\",{\"1\":{\"46\":2}}],[\"包提供的原子操作来保证并发安全\",{\"1\":{\"35\":1}}],[\"包名尽量简单而有含义\",{\"1\":{\"9\":1}}],[\"包名\",{\"0\":{\"9\":1}}],[\"x=\",{\"1\":{\"229\":1}}],[\"xerror\",{\"1\":{\"225\":1}}],[\"xxxx\",{\"1\":{\"184\":1}}],[\"x+y\",{\"1\":{\"67\":1}}],[\"xml\",{\"1\":{\"41\":1}}],[\"x\",{\"1\":{\"7\":2,\"17\":2,\"67\":3,\"137\":2,\"229\":3}}],[\"o\",{\"1\":{\"250\":1,\"258\":1,\"259\":3}}],[\"on\",{\"1\":{\"233\":1,\"235\":1,\"236\":1,\"237\":4,\"253\":1,\"254\":1,\"256\":1,\"261\":1,\"262\":1}}],[\"one\",{\"1\":{\"217\":1}}],[\"oderwat\",{\"1\":{\"192\":2}}],[\"offset\",{\"1\":{\"244\":1}}],[\"of\",{\"1\":{\"173\":1,\"279\":1}}],[\"optimizer\",{\"1\":{\"217\":1}}],[\"option\",{\"1\":{\"140\":2,\"152\":1}}],[\"options\",{\"1\":{\"131\":2,\"140\":1}}],[\"openonfirstsessionstart\",{\"1\":{\"194\":1}}],[\"openonsessionstart\",{\"1\":{\"194\":1}}],[\"open\",{\"1\":{\"29\":3,\"31\":1,\"40\":2}}],[\"operation\",{\"1\":{\"5\":4}}],[\"outer\",{\"0\":{\"234\":1,\"237\":1},\"1\":{\"237\":1}}],[\"output\",{\"1\":{\"226\":1}}],[\"outfiles\",{\"1\":{\"194\":1}}],[\"out\",{\"1\":{\"125\":2}}],[\"order\",{\"0\":{\"243\":1},\"1\":{\"226\":1,\"243\":1}}],[\"orm\",{\"0\":{\"317\":1,\"329\":1},\"1\":{\"217\":2}}],[\"origin\",{\"1\":{\"184\":4}}],[\"or\",{\"0\":{\"246\":1},\"1\":{\"17\":1,\"246\":2}}],[\"org\",{\"1\":{\"7\":4}}],[\"ok\",{\"1\":{\"16\":3,\"33\":3,\"101\":4,\"114\":2,\"120\":1,\"132\":1}}],[\"other\",{\"1\":{\"16\":2,\"120\":1,\"132\":1}}],[\"ospf\",{\"1\":{\"129\":1}}],[\"osi\",{\"1\":{\"128\":1}}],[\"osi七层模型\",{\"0\":{\"128\":1},\"1\":{\"129\":1}}],[\"os\",{\"1\":{\"7\":2,\"18\":4,\"40\":7}}],[\"分组\",{\"0\":{\"247\":1}}],[\"分组规范\",{\"0\":{\"7\":1}}],[\"分配\",{\"1\":{\"172\":1}}],[\"分钟\",{\"1\":{\"172\":1}}],[\"分片偏移字段不为\",{\"1\":{\"142\":1}}],[\"分片偏移量\",{\"1\":{\"141\":1}}],[\"分片后的每一个数据分片都会放到独立的\",{\"1\":{\"141\":1}}],[\"分片过程\",{\"1\":{\"141\":1}}],[\"分片的长度需小于等于\",{\"1\":{\"141\":1}}],[\"分片\",{\"0\":{\"141\":1}}],[\"分片时每产生一个数报文该字段就加1\",{\"1\":{\"140\":1}}],[\"分三组\",{\"1\":{\"7\":1}}],[\"分两组\",{\"1\":{\"7\":1}}],[\"常见的聚合函数\",{\"0\":{\"249\":1}}],[\"常见的重传机制\",{\"1\":{\"152\":1}}],[\"常见的\",{\"0\":{\"163\":1,\"168\":1,\"173\":1},\"1\":{\"140\":1}}],[\"常见的协议有\",{\"1\":{\"128\":1}}],[\"常见状态码\",{\"1\":{\"132\":1}}],[\"常用\",{\"0\":{\"182\":1}}],[\"常用于以下几种情况\",{\"1\":{\"119\":1}}],[\"常用于\",{\"1\":{\"111\":1}}],[\"常用分组规则\",{\"1\":{\"7\":1}}],[\"常量分为有类型常量和无类型常量\",{\"1\":{\"277\":1}}],[\"常量一经声明就不能被更改\",{\"1\":{\"51\":1}}],[\"常量\",{\"1\":{\"5\":1,\"26\":1,\"274\":1}}],[\">>=\",{\"1\":{\"88\":2}}],[\">>\",{\"1\":{\"87\":2,\"88\":1,\"90\":1}}],[\">=\",{\"1\":{\"65\":1,\"85\":2,\"90\":1,\"245\":1,\"263\":1}}],[\">\",{\"1\":{\"6\":2,\"63\":1,\"85\":2,\"90\":1,\"154\":1,\"226\":1,\"245\":2,\"247\":1,\"248\":1,\"263\":1}}],[\"rogers\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"romero\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"rollback\",{\"1\":{\"217\":1}}],[\"round\",{\"1\":{\"152\":1}}],[\"routing\",{\"1\":{\"140\":2}}],[\"route\",{\"1\":{\"140\":1}}],[\"right\",{\"0\":{\"236\":1},\"1\":{\"236\":1}}],[\"rich\",{\"1\":{\"192\":2}}],[\"rip\",{\"1\":{\"129\":1}}],[\"r\",{\"1\":{\"184\":1,\"198\":3}}],[\"rmi\",{\"1\":{\"182\":1}}],[\"rm\",{\"1\":{\"182\":1}}],[\"rfc\",{\"1\":{\"152\":2,\"159\":1}}],[\"rto\",{\"1\":{\"152\":3}}],[\"rto的计算方法可以根据具体的网络协议或实现而有所不同\",{\"1\":{\"152\":1}}],[\"rto的计算通常基于rtt的测量\",{\"1\":{\"152\":1}}],[\"rto的值会比rtt大一些\",{\"1\":{\"152\":1}}],[\"rto代表重传超时时间\",{\"1\":{\"152\":1}}],[\"rtt用于衡量网络延迟\",{\"1\":{\"152\":1}}],[\"rtt代表往返时间\",{\"1\":{\"152\":1}}],[\"rsp=1表示重建连接\",{\"1\":{\"147\":1}}],[\"rst\",{\"1\":{\"144\":1,\"147\":1}}],[\"rpc\",{\"1\":{\"128\":1}}],[\"runtimeexecutable\",{\"1\":{\"194\":1}}],[\"run\",{\"1\":{\"182\":1,\"194\":2,\"198\":1,\"279\":5}}],[\"rune\",{\"0\":{\"285\":1},\"1\":{\"37\":2,\"72\":1,\"82\":1,\"282\":1,\"283\":1,\"284\":2,\"285\":1,\"286\":1}}],[\"running\",{\"1\":{\"35\":8,\"125\":4,\"126\":4}}],[\"random\",{\"1\":{\"225\":1}}],[\"range\",{\"0\":{\"301\":1},\"1\":{\"6\":2,\"12\":2,\"65\":1,\"99\":7,\"114\":1,\"290\":2}}],[\"rainbow\",{\"1\":{\"188\":3,\"192\":4}}],[\"rarp\",{\"1\":{\"129\":1,\"172\":2}}],[\"race\",{\"1\":{\"35\":1}}],[\"repeatable\",{\"1\":{\"269\":2}}],[\"repositories\",{\"1\":{\"192\":1}}],[\"reyes\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"require\",{\"1\":{\"189\":1}}],[\"request\",{\"1\":{\"5\":2,\"132\":1,\"194\":7}}],[\"rebase\",{\"1\":{\"184\":2}}],[\"revert\",{\"1\":{\"184\":1}}],[\"reverse\",{\"1\":{\"172\":1}}],[\"remote\",{\"1\":{\"184\":1,\"192\":6}}],[\"remove\",{\"1\":{\"36\":2}}],[\"received定时器时间\",{\"1\":{\"163\":1}}],[\"record\",{\"1\":{\"140\":1}}],[\"recover\",{\"1\":{\"34\":1,\"37\":2}}],[\"retry\",{\"1\":{\"225\":1}}],[\"retransmission\",{\"1\":{\"152\":2}}],[\"return\",{\"1\":{\"11\":4,\"12\":2,\"14\":6,\"16\":1,\"17\":4,\"18\":8,\"29\":1,\"30\":1,\"31\":2,\"32\":3,\"35\":4,\"40\":4,\"42\":1,\"67\":1,\"69\":4,\"96\":1,\"125\":1,\"126\":1,\"226\":3,\"279\":2}}],[\"restart\",{\"1\":{\"182\":1}}],[\"resolution\",{\"1\":{\"170\":1}}],[\"resolver\",{\"1\":{\"217\":1}}],[\"resolve\",{\"1\":{\"31\":1}}],[\"resolveerror\",{\"1\":{\"31\":2}}],[\"reset\",{\"1\":{\"132\":1,\"184\":3}}],[\"rename\",{\"1\":{\"41\":1}}],[\"real\",{\"1\":{\"37\":2}}],[\"readall\",{\"1\":{\"40\":2}}],[\"readfile\",{\"1\":{\"18\":2,\"40\":4}}],[\"read\",{\"1\":{\"16\":2,\"59\":1,\"192\":1,\"269\":4}}],[\"readwriter\",{\"1\":{\"16\":1}}],[\"reduce\",{\"1\":{\"225\":1}}],[\"redirect\",{\"1\":{\"132\":1}}],[\"red\",{\"1\":{\"5\":2,\"277\":1,\"280\":2}}],[\"声明对象\",{\"1\":{\"280\":1}}],[\"声明和属性赋值\",{\"1\":{\"280\":1}}],[\"声明多个相同类型的变量\",{\"1\":{\"56\":2}}],[\"声明多个\",{\"1\":{\"51\":1}}],[\"声明常量必须指定初始值\",{\"1\":{\"51\":1}}],[\"声明类型关键字\",{\"0\":{\"50\":1}}],[\"声明变量的时候应避免使用内置的名称\",{\"1\":{\"37\":1}}],[\"声明\",{\"1\":{\"6\":1,\"49\":1,\"79\":1,\"98\":1}}],[\"声明不规范\",{\"1\":{\"5\":1}}],[\"单表的索引数量不要太多\",{\"1\":{\"263\":1}}],[\"单表继承\",{\"1\":{\"217\":1}}],[\"单列索引是基于单个列的值创建的索引\",{\"1\":{\"251\":1}}],[\"单列索引\",{\"0\":{\"261\":1},\"1\":{\"251\":1}}],[\"单播地址\",{\"1\":{\"170\":1}}],[\"单播\",{\"1\":{\"162\":1}}],[\"单位32位\",{\"1\":{\"147\":1}}],[\"单位\",{\"1\":{\"141\":1}}],[\"单位为\",{\"1\":{\"140\":1}}],[\"单个字符\",{\"1\":{\"245\":1}}],[\"单个条件\",{\"1\":{\"65\":1}}],[\"单个导入\",{\"1\":{\"53\":1}}],[\"单个变量声明规范\",{\"0\":{\"6\":1}}],[\"单独使用\",{\"1\":{\"5\":1}}],[\"elaine\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"else\",{\"0\":{\"13\":1},\"1\":{\"12\":2,\"13\":1,\"18\":2,\"29\":1,\"32\":1,\"63\":1,\"101\":2,\"226\":1}}],[\"eamodio\",{\"1\":{\"192\":1}}],[\"easier\",{\"1\":{\"192\":1}}],[\"eat\",{\"1\":{\"55\":1}}],[\"e2\",{\"1\":{\"172\":1}}],[\"ee\",{\"1\":{\"172\":1}}],[\"ecn\",{\"1\":{\"140\":1}}],[\"entry\",{\"1\":{\"296\":1}}],[\"ent通过代码生成所有类型都是静态类型\",{\"1\":{\"210\":1}}],[\"ent通过代码生成生成了大量\",{\"1\":{\"210\":1}}],[\"ent\",{\"0\":{\"209\":1,\"210\":1,\"211\":1},\"1\":{\"210\":10}}],[\"entity\",{\"1\":{\"36\":2}}],[\"endindex\",{\"1\":{\"106\":2}}],[\"end\",{\"1\":{\"66\":5}}],[\"env\",{\"1\":{\"5\":2,\"194\":2}}],[\"envvar\",{\"1\":{\"5\":3}}],[\"externalconsole\",{\"1\":{\"194\":1}}],[\"explorer\",{\"1\":{\"192\":5}}],[\"explore\",{\"1\":{\"192\":1}}],[\"exec\",{\"1\":{\"182\":1,\"194\":1,\"212\":1,\"213\":1,\"215\":1}}],[\"exchange\",{\"1\":{\"167\":1}}],[\"exit\",{\"0\":{\"40\":1},\"1\":{\"40\":3,\"42\":1}}],[\"exists\",{\"0\":{\"248\":1},\"1\":{\"101\":2,\"248\":2}}],[\"exist\",{\"1\":{\"32\":1}}],[\"example\",{\"1\":{\"8\":2}}],[\"emit\",{\"1\":{\"32\":1}}],[\"emitmetrics\",{\"1\":{\"32\":1}}],[\"e\",{\"1\":{\"14\":4,\"31\":4,\"36\":4,\"96\":2,\"172\":1}}],[\"err4\",{\"1\":{\"96\":3}}],[\"err3\",{\"1\":{\"94\":2,\"95\":4,\"96\":2}}],[\"err2\",{\"1\":{\"93\":2,\"94\":3,\"95\":4,\"96\":2}}],[\"err1\",{\"1\":{\"93\":2,\"94\":3,\"95\":6,\"96\":2}}],[\"errusernotfound\",{\"1\":{\"32\":1}}],[\"errnotfound\",{\"1\":{\"31\":1}}],[\"errbrokenlink\",{\"1\":{\"31\":1}}],[\"errcouldnotopen\",{\"1\":{\"29\":3,\"31\":1}}],[\"errgroup\",{\"1\":{\"7\":2}}],[\"errorf\",{\"1\":{\"29\":1,\"30\":3,\"32\":2,\"93\":2,\"94\":1,\"95\":1}}],[\"errors\",{\"0\":{\"94\":1,\"95\":1,\"96\":1},\"1\":{\"29\":5,\"30\":5,\"31\":6,\"32\":3,\"93\":3,\"94\":4,\"95\":7,\"96\":5}}],[\"error\",{\"0\":{\"28\":1},\"1\":{\"5\":2,\"14\":6,\"16\":1,\"19\":1,\"29\":3,\"31\":3,\"37\":1,\"40\":1,\"92\":5,\"93\":3,\"94\":8,\"95\":9,\"96\":6,\"120\":1}}],[\"err\",{\"1\":{\"5\":2,\"12\":6,\"18\":19,\"29\":3,\"30\":3,\"31\":1,\"32\":14,\"40\":15,\"41\":2,\"120\":1,\"214\":2}}],[\"54\",{\"1\":{\"140\":1}}],[\"5xx\",{\"1\":{\"132\":1}}],[\"51\",{\"1\":{\"84\":1}}],[\"509\",{\"1\":{\"137\":2}}],[\"504\",{\"1\":{\"132\":1}}],[\"503\",{\"1\":{\"132\":1}}],[\"502\",{\"1\":{\"132\":1}}],[\"501\",{\"1\":{\"132\":1}}],[\"50\",{\"1\":{\"84\":1,\"85\":1,\"172\":7,\"176\":4}}],[\"5\",{\"1\":{\"5\":2,\"64\":1,\"65\":1,\"66\":1,\"70\":1,\"74\":3,\"77\":2,\"78\":1,\"90\":1,\"106\":1,\"107\":3,\"108\":2,\"109\":2,\"125\":1,\"126\":1,\"140\":2,\"149\":1,\"152\":3,\"157\":1,\"226\":2,\"232\":3,\"233\":1,\"235\":3,\"236\":1,\"237\":3,\"264\":1}}],[\"take\",{\"1\":{\"279\":1}}],[\"tamp\",{\"1\":{\"272\":2}}],[\"table\",{\"1\":{\"255\":1}}],[\"tag\",{\"0\":{\"41\":1},\"1\":{\"41\":1}}],[\"txt\",{\"1\":{\"167\":1}}],[\"turner\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"tuple\",{\"1\":{\"225\":1}}],[\"tunnels\",{\"1\":{\"192\":1}}],[\"tuba\",{\"1\":{\"140\":1}}],[\"tuesday\",{\"1\":{\"64\":1}}],[\"tp\",{\"1\":{\"140\":1}}],[\"ttl\",{\"1\":{\"140\":1,\"172\":2}}],[\"tls\",{\"1\":{\"133\":1,\"136\":1}}],[\"tftp\",{\"1\":{\"129\":1}}],[\"text\",{\"1\":{\"251\":1}}],[\"teacher\",{\"1\":{\"228\":3}}],[\"team\",{\"1\":{\"192\":1}}],[\"temporary\",{\"1\":{\"132\":1}}],[\"telnet\",{\"1\":{\"129\":1}}],[\"test\",{\"1\":{\"19\":2,\"40\":1,\"52\":3,\"194\":7}}],[\"tcp头部字段\",{\"1\":{\"147\":1}}],[\"tcp\",{\"0\":{\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"163\":1},\"1\":{\"129\":4,\"135\":2,\"139\":2,\"140\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":5,\"150\":1,\"151\":1,\"152\":3,\"153\":2,\"158\":1,\"162\":3,\"163\":1,\"168\":1,\"172\":1,\"178\":1}}],[\"tcp和ip模型\",{\"0\":{\"129\":1}}],[\"third\",{\"1\":{\"99\":6,\"100\":6,\"101\":2}}],[\"thursday\",{\"1\":{\"64\":2}}],[\"the\",{\"1\":{\"29\":1,\"32\":1,\"35\":2,\"43\":1,\"279\":1}}],[\"t5\",{\"1\":{\"52\":1}}],[\"t4\",{\"1\":{\"52\":1}}],[\"t3\",{\"1\":{\"52\":1}}],[\"title\",{\"1\":{\"212\":1,\"231\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"tiger\",{\"1\":{\"55\":1}}],[\"tick\",{\"1\":{\"42\":1}}],[\"ticker\",{\"1\":{\"42\":2}}],[\"timestamp\",{\"1\":{\"140\":1}}],[\"time\",{\"1\":{\"5\":2,\"32\":1,\"42\":2,\"70\":3,\"116\":3,\"120\":2,\"125\":11,\"126\":7,\"152\":1}}],[\"timeout\",{\"1\":{\"5\":2,\"132\":1,\"152\":2}}],[\"tz\",{\"1\":{\"32\":2}}],[\"tony\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"tools\",{\"1\":{\"202\":1}}],[\"todo\",{\"1\":{\"122\":2}}],[\"to\",{\"1\":{\"32\":1,\"41\":2,\"42\":1,\"43\":4,\"192\":1,\"217\":3,\"296\":1}}],[\"t2\",{\"1\":{\"25\":4,\"52\":1}}],[\"t1\",{\"1\":{\"25\":4,\"52\":2}}],[\"t\",{\"1\":{\"24\":2,\"32\":1,\"33\":2,\"49\":1,\"51\":2,\"52\":4,\"56\":4,\"58\":8,\"96\":3,\"112\":3,\"116\":2,\"140\":1,\"277\":9,\"279\":2}}],[\"trip\",{\"1\":{\"152\":1}}],[\"translation\",{\"1\":{\"175\":1}}],[\"transmission\",{\"1\":{\"141\":1,\"146\":1}}],[\"trace\",{\"1\":{\"8\":2,\"131\":2}}],[\"true\",{\"1\":{\"21\":2,\"35\":1,\"37\":2,\"51\":1,\"76\":2,\"85\":9,\"86\":8,\"95\":2,\"194\":6,\"249\":1}}],[\"type\",{\"1\":{\"5\":5,\"11\":2,\"14\":2,\"16\":8,\"31\":2,\"35\":2,\"36\":2,\"41\":2,\"55\":5,\"59\":1,\"61\":1,\"80\":1,\"92\":1,\"96\":1,\"120\":1,\"123\":7,\"194\":7,\"226\":1,\"277\":3,\"280\":2}}],[\"nb\",{\"1\":{\"285\":1}}],[\"null\",{\"1\":{\"263\":1}}],[\"numbers\",{\"1\":{\"149\":1,\"226\":3}}],[\"num\",{\"1\":{\"55\":2,\"69\":3,\"81\":2,\"272\":3}}],[\"nums\",{\"1\":{\"17\":11}}],[\"navigate\",{\"1\":{\"192\":1}}],[\"nationality\",{\"1\":{\"280\":4}}],[\"nat协议可以将外部请求重定向到内部不同的主机\",{\"1\":{\"177\":1}}],[\"nat协议将内网所有网络设备共享统一的\",{\"1\":{\"177\":1}}],[\"nat转换表\",{\"1\":{\"176\":1}}],[\"nat\",{\"0\":{\"174\":1,\"177\":1,\"178\":1},\"1\":{\"175\":2,\"177\":1,\"178\":2}}],[\"nameeq\",{\"1\":{\"214\":1}}],[\"namecontains\",{\"1\":{\"214\":1}}],[\"name2\",{\"1\":{\"56\":4}}],[\"name1\",{\"1\":{\"56\":4}}],[\"name\",{\"1\":{\"5\":2,\"18\":4,\"19\":1,\"24\":2,\"41\":6,\"55\":1,\"56\":2,\"61\":1,\"80\":3,\"165\":1,\"167\":2,\"192\":4,\"194\":8,\"212\":1,\"214\":1,\"219\":1,\"228\":4,\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"245\":4,\"246\":1}}],[\"nxdomain\",{\"1\":{\"168\":1}}],[\"ns\",{\"1\":{\"167\":1}}],[\"node\",{\"1\":{\"194\":4}}],[\"non\",{\"1\":{\"132\":1}}],[\"now\",{\"1\":{\"125\":1}}],[\"normalerr\",{\"1\":{\"96\":4}}],[\"no\",{\"1\":{\"70\":4,\"132\":1}}],[\"notfounderror\",{\"1\":{\"31\":2}}],[\"not\",{\"0\":{\"246\":1},\"1\":{\"29\":1,\"31\":3,\"32\":3,\"101\":2,\"132\":3,\"246\":1,\"304\":1}}],[\"n++\",{\"1\":{\"39\":2}}],[\"nil\",{\"0\":{\"17\":1},\"1\":{\"12\":2,\"16\":3,\"17\":5,\"18\":8,\"29\":1,\"30\":1,\"32\":4,\"37\":2,\"40\":6,\"82\":6,\"296\":1,\"303\":1}}],[\"n\",{\"1\":{\"11\":2,\"26\":2,\"39\":6,\"43\":1,\"81\":2,\"99\":3,\"276\":1,\"277\":1,\"288\":3,\"290\":5,\"292\":3}}],[\"next\",{\"1\":{\"269\":1}}],[\"neveropen\",{\"1\":{\"194\":1}}],[\"netutil\",{\"1\":{\"225\":1}}],[\"network\",{\"0\":{\"309\":1,\"321\":1},\"1\":{\"175\":1}}],[\"net\",{\"1\":{\"8\":1,\"194\":1}}],[\"newticker\",{\"1\":{\"42\":1,\"116\":1}}],[\"newsomething\",{\"1\":{\"11\":2}}],[\"new\",{\"1\":{\"5\":6,\"11\":2,\"24\":2,\"29\":2,\"30\":2,\"31\":3,\"37\":2,\"93\":3,\"94\":2,\"95\":2,\"96\":2,\"184\":1,\"203\":1,\"208\":1,\"288\":4}}],[\"cryptor\",{\"1\":{\"225\":1}}],[\"crud\",{\"1\":{\"217\":1}}],[\"create\",{\"1\":{\"212\":1,\"217\":2,\"219\":1,\"253\":1,\"254\":1,\"256\":1,\"261\":1,\"262\":1}}],[\"created\",{\"1\":{\"132\":1}}],[\"cmd\",{\"1\":{\"207\":1}}],[\"current\",{\"1\":{\"194\":1}}],[\"cwd\",{\"1\":{\"194\":6}}],[\"cwnd\",{\"1\":{\"154\":4,\"155\":2,\"156\":4,\"157\":1}}],[\"c类\",{\"1\":{\"175\":1}}],[\"cpu\",{\"1\":{\"173\":1,\"250\":1}}],[\"cpe\",{\"1\":{\"168\":2}}],[\"c2\",{\"1\":{\"172\":1}}],[\"cc\",{\"1\":{\"172\":1}}],[\"cname\",{\"1\":{\"167\":1}}],[\"cslip\",{\"1\":{\"129\":1}}],[\"ctx3val\",{\"1\":{\"123\":2}}],[\"ctx3\",{\"1\":{\"123\":3}}],[\"ctx1val\",{\"1\":{\"123\":2}}],[\"ctx1\",{\"1\":{\"123\":3,\"125\":2,\"126\":2}}],[\"ctx2val\",{\"1\":{\"123\":2}}],[\"ctx2\",{\"1\":{\"122\":1,\"123\":3}}],[\"ctx\",{\"1\":{\"122\":1,\"123\":5,\"125\":2,\"126\":2,\"212\":1,\"213\":1,\"214\":2,\"215\":1}}],[\"chinese\",{\"1\":{\"280\":1}}],[\"china\",{\"1\":{\"280\":2}}],[\"char\",{\"1\":{\"251\":1}}],[\"chan<\",{\"1\":{\"58\":1}}],[\"chaninterfacemapstruct\",{\"1\":{\"49\":1}}],[\"chan\",{\"1\":{\"42\":2,\"43\":2,\"58\":5,\"67\":3,\"82\":1,\"112\":2,\"120\":1}}],[\"channel\",{\"0\":{\"112\":1,\"114\":1,\"300\":1},\"1\":{\"35\":1,\"58\":1,\"111\":1,\"112\":1,\"113\":3,\"114\":4,\"115\":4,\"116\":1,\"117\":1,\"300\":2}}],[\"checkout\",{\"1\":{\"184\":2}}],[\"choices\",{\"1\":{\"132\":1}}],[\"ch3\",{\"1\":{\"115\":3}}],[\"ch2\",{\"1\":{\"112\":1,\"115\":3}}],[\"ch1\",{\"1\":{\"112\":1,\"115\":3}}],[\"ch\",{\"1\":{\"58\":2,\"113\":2,\"114\":2}}],[\"clifford\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"client再次发起https的请求\",{\"1\":{\"134\":1}}],[\"client使用对称密钥解密响应的密文\",{\"1\":{\"134\":1}}],[\"client使用伪随机数生成器生成加密所使用的对称密钥\",{\"1\":{\"134\":1}}],[\"client和server双方都持有了相同的对称密钥\",{\"1\":{\"134\":1}}],[\"client验证公钥证书\",{\"1\":{\"134\":1}}],[\"client发起一个https的请求\",{\"1\":{\"134\":1}}],[\"client\",{\"1\":{\"5\":2,\"8\":2,\"16\":6,\"149\":1,\"212\":1,\"213\":1,\"214\":2,\"215\":1}}],[\"clone\",{\"1\":{\"184\":1}}],[\"close\",{\"1\":{\"37\":2,\"42\":3,\"43\":1,\"59\":1,\"114\":5}}],[\"cartesian\",{\"1\":{\"229\":1}}],[\"card\",{\"1\":{\"228\":2}}],[\"carries\",{\"1\":{\"120\":1}}],[\"cannot\",{\"1\":{\"277\":1,\"279\":1}}],[\"candidate\",{\"1\":{\"228\":1}}],[\"canonical\",{\"1\":{\"167\":1}}],[\"canceled\",{\"1\":{\"126\":2}}],[\"cancelation\",{\"1\":{\"120\":1}}],[\"cancel\",{\"1\":{\"119\":1,\"121\":1,\"126\":3,\"299\":1}}],[\"ca\",{\"1\":{\"136\":1,\"137\":1}}],[\"case\",{\"1\":{\"42\":2,\"64\":13,\"67\":4,\"115\":3,\"125\":1,\"126\":1}}],[\"capacity\",{\"1\":{\"289\":1}}],[\"cap\",{\"1\":{\"37\":2,\"107\":2}}],[\"called\",{\"1\":{\"120\":1}}],[\"caller\",{\"1\":{\"5\":2}}],[\"call\",{\"1\":{\"12\":2}}],[\"calccost\",{\"1\":{\"11\":4}}],[\"cfg\",{\"1\":{\"18\":4}}],[\"c\",{\"1\":{\"5\":4,\"42\":1,\"51\":2,\"67\":5,\"75\":1,\"88\":1,\"116\":1,\"172\":1,\"184\":1,\"194\":1,\"198\":2,\"226\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":3,\"263\":4}}],[\"colours\",{\"1\":{\"280\":1}}],[\"colour\",{\"1\":{\"277\":1}}],[\"color\",{\"1\":{\"5\":6}}],[\"cook\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"cookies\",{\"1\":{\"163\":1}}],[\"coreclr\",{\"1\":{\"194\":1}}],[\"core\",{\"1\":{\"194\":1}}],[\"codelens\",{\"1\":{\"192\":1}}],[\"code\",{\"1\":{\"192\":3}}],[\"copy\",{\"1\":{\"37\":2,\"109\":2,\"287\":2}}],[\"course\",{\"0\":{\"231\":1},\"1\":{\"232\":2,\"233\":4,\"235\":4,\"236\":4,\"237\":4}}],[\"could\",{\"1\":{\"29\":1,\"31\":1,\"32\":2}}],[\"count\",{\"1\":{\"16\":2,\"247\":3,\"249\":3}}],[\"countingwritecloser\",{\"1\":{\"16\":2}}],[\"connie\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"connection\",{\"1\":{\"149\":1}}],[\"connect\",{\"1\":{\"131\":2}}],[\"convertor\",{\"1\":{\"225\":1}}],[\"condition\",{\"1\":{\"225\":1,\"264\":1}}],[\"concepts\",{\"0\":{\"308\":1,\"320\":1}}],[\"concurrency\",{\"1\":{\"225\":1}}],[\"concretelist\",{\"1\":{\"36\":6}}],[\"console\",{\"1\":{\"194\":4}}],[\"constfuncimportpackagetypevar\",{\"1\":{\"49\":1}}],[\"const\",{\"0\":{\"26\":1},\"1\":{\"5\":6,\"11\":1,\"15\":2,\"26\":2,\"51\":6,\"277\":5}}],[\"configurations\",{\"1\":{\"194\":7}}],[\"container\",{\"1\":{\"180\":1}}],[\"control\",{\"1\":{\"146\":1,\"170\":1}}],[\"content\",{\"1\":{\"132\":3}}],[\"context\",{\"0\":{\"118\":1,\"120\":1},\"1\":{\"119\":2,\"120\":3,\"121\":2,\"122\":4,\"123\":12,\"124\":2,\"125\":8,\"126\":6,\"198\":1,\"217\":2,\"299\":2}}],[\"continue\",{\"1\":{\"12\":1,\"65\":3,\"132\":1}}],[\"cost\",{\"1\":{\"11\":2}}],[\"comparator\",{\"1\":{\"226\":2}}],[\"compare\",{\"1\":{\"225\":1,\"226\":1}}],[\"comparison\",{\"1\":{\"192\":1}}],[\"complexdata2\",{\"1\":{\"74\":1}}],[\"complexdata\",{\"1\":{\"74\":1}}],[\"complex128\",{\"1\":{\"74\":1,\"82\":1}}],[\"complex64complex128\",{\"1\":{\"276\":1}}],[\"complex64\",{\"1\":{\"74\":2,\"82\":1}}],[\"complex\",{\"0\":{\"74\":1},\"1\":{\"37\":2,\"74\":1}}],[\"comment\",{\"1\":{\"217\":1}}],[\"commands\",{\"1\":{\"192\":1}}],[\"committed\",{\"1\":{\"269\":1}}],[\"commit\",{\"1\":{\"184\":4}}],[\"common\",{\"1\":{\"9\":1}}],[\"com\",{\"1\":{\"8\":2,\"192\":4,\"198\":1,\"202\":1,\"207\":1,\"226\":1}}],[\"函数参数使用值还是指针\",{\"0\":{\"293\":1}}],[\"函数返回的一个字符串的文本值\",{\"1\":{\"279\":1}}],[\"函数可以直接修改原始数据\",{\"1\":{\"273\":1}}],[\"函数追加数据\",{\"1\":{\"108\":1}}],[\"函数是在程序启动时执行的\",{\"1\":{\"44\":1}}],[\"函数是在包被导入的时候自动执行的\",{\"1\":{\"38\":1}}],[\"函数中使用\",{\"1\":{\"44\":1}}],[\"函数中初始化的变量可能会导致不确定的结果\",{\"1\":{\"38\":1}}],[\"函数\",{\"0\":{\"38\":1},\"1\":{\"38\":1,\"249\":1,\"274\":1}}],[\"函数的执行顺序是不确定的\",{\"1\":{\"38\":1}}],[\"函数的定义应该尽量按照调用顺序排序\",{\"1\":{\"11\":1}}],[\"函数的排序应遵循以下规范\",{\"1\":{\"11\":1}}],[\"函数的排序\",{\"0\":{\"11\":1}}],[\"函数名应该尽可能的描述函数的功能\",{\"1\":{\"10\":1}}],[\"函数名使用驼峰命名法\",{\"1\":{\"10\":1}}],[\"函数名\",{\"0\":{\"10\":1}}],[\"函数内也可分组放在一起\",{\"1\":{\"5\":1}}],[\"函数等\",{\"1\":{\"5\":1}}],[\"group\",{\"0\":{\"247\":1},\"1\":{\"247\":2}}],[\"griffin\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"gremlin\",{\"1\":{\"210\":1}}],[\"greet\",{\"1\":{\"203\":1}}],[\"green\",{\"1\":{\"5\":2}}],[\"glenn\",{\"1\":{\"232\":2,\"233\":1,\"235\":2,\"236\":1,\"237\":2}}],[\"glance\",{\"1\":{\"192\":1}}],[\"geography\",{\"1\":{\"231\":1,\"233\":2,\"235\":2,\"236\":2,\"237\":2}}],[\"get\",{\"1\":{\"32\":3,\"131\":3,\"198\":1,\"207\":1}}],[\"getusertimezone\",{\"1\":{\"32\":1}}],[\"getuser\",{\"1\":{\"32\":2}}],[\"gin\",{\"0\":{\"195\":1,\"197\":1},\"1\":{\"196\":12,\"198\":5}}],[\"github\",{\"1\":{\"196\":1,\"198\":1,\"202\":1,\"207\":1,\"226\":1}}],[\"gitkraken\",{\"1\":{\"192\":1}}],[\"gitlens\",{\"1\":{\"192\":5}}],[\"git\",{\"0\":{\"183\":1,\"184\":1,\"312\":1,\"324\":1},\"1\":{\"183\":1,\"184\":22,\"192\":5,\"226\":1}}],[\"garcia\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"gain\",{\"1\":{\"192\":1}}],[\"gateway\",{\"1\":{\"132\":2}}],[\"gorm\",{\"0\":{\"216\":1,\"217\":1,\"218\":1},\"1\":{\"217\":6}}],[\"goroutines\",{\"0\":{\"43\":1},\"1\":{\"120\":1}}],[\"goroutine\",{\"0\":{\"42\":1},\"1\":{\"35\":1,\"42\":9,\"43\":6,\"44\":2,\"67\":1,\"70\":3,\"111\":1,\"119\":2}}],[\"go111module=on\",{\"1\":{\"202\":1,\"207\":1}}],[\"goctl\",{\"0\":{\"202\":1},\"1\":{\"201\":2,\"202\":1,\"203\":1}}],[\"gonic\",{\"1\":{\"198\":1}}],[\"google\",{\"1\":{\"192\":1}}],[\"good\",{\"1\":{\"15\":1,\"16\":2,\"18\":1,\"21\":1,\"26\":1,\"40\":1,\"42\":1}}],[\"goland\",{\"0\":{\"186\":1,\"187\":1},\"1\":{\"187\":2,\"189\":1}}],[\"golang中的深拷贝和浅拷贝是什么\",{\"0\":{\"287\":1}}],[\"golang\",{\"0\":{\"2\":1,\"307\":1,\"319\":1,\"334\":1,\"339\":1},\"1\":{\"1\":7,\"7\":2,\"49\":1,\"72\":2,\"92\":1,\"93\":1,\"119\":1,\"192\":1,\"194\":1,\"277\":1}}],[\"goto\",{\"1\":{\"66\":2}}],[\"go\",{\"0\":{\"199\":1,\"201\":1,\"282\":1},\"1\":{\"2\":1,\"4\":1,\"7\":2,\"8\":1,\"15\":2,\"26\":1,\"30\":1,\"42\":2,\"43\":2,\"67\":1,\"70\":3,\"94\":1,\"125\":1,\"126\":1,\"180\":1,\"187\":1,\"189\":1,\"192\":8,\"193\":1,\"194\":4,\"196\":1,\"200\":14,\"201\":2,\"202\":2,\"205\":1,\"207\":2,\"210\":3,\"224\":1,\"279\":1,\"282\":1}}],[\"skipfiles\",{\"1\":{\"194\":1}}],[\"smartstep\",{\"1\":{\"194\":1}}],[\"smtp\",{\"1\":{\"129\":1}}],[\"ssh\",{\"1\":{\"192\":1}}],[\"ssthresh\",{\"1\":{\"154\":4,\"155\":1,\"156\":2,\"157\":2}}],[\"ssl证书有两种用途\",{\"1\":{\"136\":1}}],[\"ssl\",{\"1\":{\"133\":1}}],[\"so\",{\"1\":{\"192\":1}}],[\"soft\",{\"1\":{\"184\":2}}],[\"sourcemappathoverrides\",{\"1\":{\"194\":1}}],[\"sourcemaps\",{\"1\":{\"194\":1}}],[\"source\",{\"1\":{\"140\":2}}],[\"something\",{\"1\":{\"11\":10}}],[\"snhp\",{\"1\":{\"129\":1}}],[\"su\",{\"1\":{\"280\":4}}],[\"sum\",{\"1\":{\"249\":1}}],[\"super\",{\"1\":{\"228\":1}}],[\"supercharge\",{\"1\":{\"192\":1}}],[\"supercharged\",{\"1\":{\"192\":1}}],[\"support\",{\"1\":{\"192\":1}}],[\"sunday\",{\"1\":{\"64\":1}}],[\"subtract\",{\"1\":{\"5\":2}}],[\"sanchez\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"saved\",{\"1\":{\"217\":1}}],[\"save\",{\"1\":{\"217\":2}}],[\"sack\",{\"1\":{\"152\":9}}],[\"saturday\",{\"1\":{\"64\":2}}],[\"safe\",{\"1\":{\"41\":1}}],[\"switching\",{\"1\":{\"132\":1}}],[\"switch\",{\"1\":{\"64\":3,\"184\":2}}],[\"swap\",{\"1\":{\"35\":1}}],[\"swapint32\",{\"1\":{\"35\":1}}],[\"sip\",{\"1\":{\"140\":1}}],[\"simultaneously\",{\"1\":{\"120\":1}}],[\"signature\",{\"1\":{\"137\":1}}],[\"signal\",{\"1\":{\"120\":1}}],[\"signed\",{\"1\":{\"72\":1}}],[\"sin\",{\"1\":{\"53\":3}}],[\"sizeof\",{\"1\":{\"285\":2}}],[\"size\",{\"1\":{\"39\":3}}],[\"slip\",{\"1\":{\"129\":1}}],[\"slice2\",{\"1\":{\"287\":11}}],[\"slice1\",{\"1\":{\"287\":11}}],[\"slicemapchannelsinterfacesfunctions\",{\"1\":{\"287\":1}}],[\"slicesmapchannel\",{\"1\":{\"288\":1}}],[\"slices\",{\"0\":{\"78\":1}}],[\"slice\",{\"0\":{\"17\":1,\"39\":1,\"47\":1},\"1\":{\"17\":1,\"39\":2,\"82\":1,\"225\":1,\"287\":1}}],[\"sleep\",{\"1\":{\"42\":1,\"70\":1,\"125\":2,\"126\":3}}],[\"system\",{\"1\":{\"165\":1,\"225\":1}}],[\"syn缓存\",{\"1\":{\"163\":1}}],[\"syn=1表示这是一个连接请求或连接接受报文\",{\"1\":{\"147\":1}}],[\"syn\",{\"1\":{\"147\":1,\"149\":5,\"163\":18}}],[\"synchronize\",{\"1\":{\"149\":1}}],[\"sync\",{\"1\":{\"7\":2,\"16\":5,\"35\":1,\"43\":2,\"103\":1,\"302\":1}}],[\"symbol\",{\"1\":{\"41\":1}}],[\"sqlite\",{\"1\":{\"210\":1}}],[\"sql\",{\"0\":{\"331\":1,\"336\":1},\"1\":{\"38\":1,\"217\":3,\"230\":1}}],[\"showasyncstacks\",{\"1\":{\"194\":1}}],[\"should\",{\"1\":{\"32\":1}}],[\"sha256md5\",{\"1\":{\"137\":1}}],[\"shared\",{\"1\":{\"9\":1}}],[\"sport\",{\"1\":{\"231\":1,\"236\":1,\"237\":1}}],[\"sprintf\",{\"1\":{\"31\":2}}],[\"sptr\",{\"1\":{\"24\":3}}],[\"serializable\",{\"1\":{\"269\":1}}],[\"server\",{\"1\":{\"167\":1}}],[\"server使用对称密钥加密明文内容a\",{\"1\":{\"134\":1}}],[\"server使用自己的私钥解密这个消息\",{\"1\":{\"134\":1}}],[\"server把事先配置好的公钥证书返回给客户端\",{\"1\":{\"134\":1}}],[\"service\",{\"1\":{\"132\":1,\"149\":1,\"173\":1}}],[\"setdesc\",{\"1\":{\"212\":1}}],[\"setstatus\",{\"1\":{\"212\":1,\"213\":1}}],[\"setname\",{\"1\":{\"212\":1}}],[\"settitle\",{\"1\":{\"212\":1}}],[\"session\",{\"1\":{\"196\":2}}],[\"seamlessly\",{\"1\":{\"192\":1}}],[\"sequence\",{\"1\":{\"149\":1}}],[\"seq=y+1\",{\"1\":{\"149\":1}}],[\"security\",{\"1\":{\"140\":1}}],[\"second\",{\"1\":{\"5\":2,\"70\":1,\"93\":1,\"94\":3,\"95\":3,\"96\":2,\"99\":6,\"100\":6,\"101\":2,\"116\":1,\"125\":5,\"126\":3}}],[\"selective\",{\"1\":{\"152\":1}}],[\"select\",{\"0\":{\"115\":1,\"239\":1},\"1\":{\"42\":1,\"67\":3,\"115\":3,\"125\":1,\"126\":1,\"233\":4,\"235\":1,\"236\":1,\"237\":1,\"239\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":4,\"245\":7,\"246\":3,\"247\":1,\"248\":2}}],[\"see\",{\"1\":{\"32\":1,\"132\":1}}],[\"send\",{\"1\":{\"12\":2}}],[\"student\",{\"0\":{\"232\":1},\"1\":{\"228\":11,\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"studio\",{\"1\":{\"192\":1}}],[\"standard\",{\"0\":{\"305\":1,\"306\":1}}],[\"star\",{\"1\":{\"196\":1}}],[\"start\",{\"1\":{\"35\":4,\"70\":2,\"116\":1,\"182\":1}}],[\"status\",{\"1\":{\"184\":1,\"212\":1,\"213\":1}}],[\"stateful\",{\"1\":{\"148\":1}}],[\"st\",{\"1\":{\"140\":2}}],[\"stock\",{\"1\":{\"41\":4}}],[\"store\",{\"1\":{\"30\":2}}],[\"stopatentry\",{\"1\":{\"194\":1}}],[\"stoponerror\",{\"1\":{\"194\":1}}],[\"stoponentry\",{\"1\":{\"194\":2}}],[\"stop\",{\"1\":{\"11\":2,\"42\":5,\"182\":1}}],[\"strutil\",{\"1\":{\"225\":1}}],[\"structs\",{\"1\":{\"225\":1}}],[\"struct\",{\"0\":{\"80\":1},\"1\":{\"11\":3,\"14\":2,\"16\":8,\"31\":2,\"35\":2,\"36\":2,\"41\":2,\"42\":2,\"43\":2,\"55\":1,\"61\":2,\"80\":1,\"82\":1,\"96\":1,\"120\":1,\"226\":1,\"280\":2}}],[\"stream\",{\"1\":{\"225\":1}}],[\"strict\",{\"1\":{\"140\":1}}],[\"stringarrayintstructfloatbool\",{\"1\":{\"287\":1}}],[\"string\",{\"0\":{\"75\":1},\"1\":{\"5\":2,\"14\":5,\"16\":2,\"17\":2,\"31\":4,\"33\":2,\"37\":2,\"40\":6,\"41\":2,\"55\":1,\"60\":4,\"61\":1,\"75\":2,\"79\":2,\"80\":1,\"82\":1,\"92\":1,\"96\":2,\"98\":3,\"99\":6,\"100\":6,\"101\":4,\"105\":4,\"123\":7,\"188\":3,\"276\":1,\"277\":1,\"279\":2,\"280\":5,\"288\":2}}],[\"str\",{\"1\":{\"75\":3}}],[\"strconv\",{\"0\":{\"46\":1},\"1\":{\"46\":3}}],[\"s\",{\"1\":{\"6\":2,\"11\":6,\"14\":3,\"17\":6,\"30\":1,\"75\":1,\"93\":1,\"94\":1,\"95\":1,\"99\":4,\"120\":1,\"233\":3,\"235\":3,\"236\":3,\"237\":3,\"276\":1,\"280\":1,\"288\":3}}],[\"fulltext\",{\"1\":{\"256\":1}}],[\"full\",{\"0\":{\"237\":1},\"1\":{\"237\":1}}],[\"function\",{\"1\":{\"49\":1,\"194\":2,\"225\":1}}],[\"func\",{\"1\":{\"5\":4,\"6\":2,\"11\":8,\"14\":6,\"16\":1,\"17\":2,\"29\":1,\"31\":2,\"35\":4,\"36\":2,\"40\":4,\"42\":2,\"43\":2,\"52\":4,\"64\":1,\"66\":1,\"67\":3,\"69\":3,\"70\":3,\"75\":1,\"78\":1,\"82\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":2,\"99\":1,\"100\":1,\"101\":1,\"105\":1,\"107\":1,\"108\":1,\"109\":1,\"116\":1,\"123\":1,\"125\":2,\"126\":2,\"198\":2,\"226\":2,\"277\":3,\"278\":1,\"279\":4,\"280\":2,\"287\":2,\"288\":2,\"290\":1,\"291\":4,\"292\":1,\"295\":1,\"296\":1,\"297\":1}}],[\"feature\",{\"1\":{\"184\":1}}],[\"feat\",{\"1\":{\"184\":1}}],[\"female\",{\"1\":{\"51\":1}}],[\"ffff\",{\"1\":{\"171\":2}}],[\"ff\",{\"1\":{\"170\":6}}],[\"from\",{\"1\":{\"233\":4,\"235\":1,\"236\":1,\"237\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":4,\"245\":7,\"246\":3,\"247\":1,\"248\":2}}],[\"francisco\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"framework>\",{\"1\":{\"194\":1}}],[\"fragment\",{\"1\":{\"140\":2}}],[\"free\",{\"1\":{\"173\":1}}],[\"friday\",{\"1\":{\"64\":2}}],[\"ftp\",{\"1\":{\"129\":1}}],[\"flood\",{\"1\":{\"163\":9}}],[\"float\",{\"0\":{\"73\":1}}],[\"float32float64\",{\"1\":{\"276\":1}}],[\"float32\",{\"1\":{\"37\":2,\"73\":1,\"82\":1}}],[\"float64\",{\"1\":{\"5\":4,\"37\":2,\"73\":1,\"82\":1}}],[\"flags\",{\"1\":{\"140\":1}}],[\"flag\",{\"1\":{\"53\":2}}],[\"flush\",{\"1\":{\"42\":2}}],[\"fast\",{\"1\":{\"279\":2}}],[\"fallthrough\",{\"1\":{\"64\":7}}],[\"false\",{\"1\":{\"22\":1,\"37\":2,\"76\":2,\"82\":1,\"85\":9,\"86\":8,\"95\":1,\"114\":1,\"194\":3,\"249\":1}}],[\"fatal\",{\"0\":{\"40\":1},\"1\":{\"40\":9}}],[\"failure\",{\"1\":{\"32\":1}}],[\"findinbatches\",{\"1\":{\"217\":1}}],[\"find\",{\"1\":{\"217\":2}}],[\"fin=1\",{\"1\":{\"149\":1}}],[\"fin=1表示此报文段的发送端的数据已发送完毕\",{\"1\":{\"147\":1}}],[\"fin\",{\"1\":{\"147\":1}}],[\"finish\",{\"1\":{\"43\":2,\"116\":1}}],[\"first\",{\"1\":{\"93\":1,\"94\":3,\"95\":3,\"96\":1,\"99\":6,\"100\":5,\"101\":3,\"221\":1}}],[\"firstname\",{\"1\":{\"21\":1,\"22\":2}}],[\"fibonacci\",{\"1\":{\"67\":2}}],[\"filter\",{\"1\":{\"225\":1}}],[\"filtered\",{\"1\":{\"6\":6}}],[\"fileutil\",{\"1\":{\"225\":1}}],[\"file\",{\"1\":{\"31\":3,\"59\":1,\"194\":4}}],[\"fields\",{\"1\":{\"16\":2}}],[\"f1\",{\"1\":{\"12\":2}}],[\"fmt\",{\"0\":{\"46\":1},\"1\":{\"7\":2,\"18\":2,\"26\":2,\"29\":1,\"30\":3,\"31\":2,\"32\":2,\"40\":2,\"46\":2,\"53\":1,\"63\":2,\"64\":12,\"65\":5,\"66\":3,\"67\":3,\"69\":5,\"70\":4,\"75\":2,\"78\":2,\"79\":1,\"80\":1,\"93\":5,\"94\":5,\"95\":7,\"96\":2,\"98\":1,\"99\":7,\"100\":3,\"101\":5,\"105\":2,\"106\":1,\"107\":2,\"108\":4,\"109\":3,\"115\":4,\"116\":3,\"123\":5,\"125\":3,\"126\":3,\"226\":2,\"272\":3,\"277\":6,\"278\":4,\"279\":2,\"285\":1,\"287\":8,\"288\":7,\"290\":2,\"291\":4,\"292\":3,\"295\":2}}],[\"fourth\",{\"1\":{\"101\":1}}],[\"found\",{\"1\":{\"31\":2,\"132\":2,\"304\":1}}],[\"foreign\",{\"1\":{\"228\":1}}],[\"forbidden\",{\"1\":{\"132\":1}}],[\"for\",{\"1\":{\"6\":2,\"12\":2,\"39\":4,\"42\":3,\"43\":3,\"65\":8,\"66\":1,\"67\":2,\"69\":1,\"78\":1,\"99\":3,\"125\":1,\"126\":1,\"192\":2,\"290\":2}}],[\"formatter\",{\"1\":{\"225\":1}}],[\"format\",{\"0\":{\"26\":1},\"1\":{\"5\":2}}],[\"foo\",{\"1\":{\"6\":2,\"15\":2,\"29\":3,\"35\":8}}],[\"f\",{\"1\":{\"5\":2,\"6\":2,\"14\":9,\"35\":8,\"40\":4,\"182\":1,\"184\":1}}],[\"mvcc\",{\"1\":{\"269\":3}}],[\"message\",{\"1\":{\"198\":1}}],[\"merge\",{\"1\":{\"184\":1}}],[\"media\",{\"1\":{\"170\":1}}],[\"methods\",{\"1\":{\"120\":1}}],[\"metrics\",{\"1\":{\"32\":2}}],[\"mx\",{\"1\":{\"167\":1}}],[\"ms\",{\"1\":{\"192\":1}}],[\"mss\",{\"1\":{\"147\":1}}],[\"msg\",{\"1\":{\"26\":4}}],[\"mf\",{\"1\":{\"140\":2,\"141\":2}}],[\"morris\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"more\",{\"1\":{\"140\":1,\"192\":1}}],[\"model\",{\"1\":{\"220\":1}}],[\"mode\",{\"1\":{\"194\":3}}],[\"mod\",{\"1\":{\"189\":1}}],[\"modified\",{\"1\":{\"132\":1}}],[\"moved\",{\"1\":{\"132\":1}}],[\"monday\",{\"1\":{\"64\":1}}],[\"mtu\",{\"1\":{\"129\":1,\"141\":6}}],[\"mtx\",{\"1\":{\"16\":1}}],[\"micro\",{\"0\":{\"316\":1,\"328\":1}}],[\"microsoft\",{\"1\":{\"192\":1}}],[\"min\",{\"1\":{\"249\":1}}],[\"miss消息限速\",{\"1\":{\"173\":1}}],[\"miss\",{\"1\":{\"173\":2}}],[\"mike\",{\"1\":{\"105\":1}}],[\"middlename\",{\"1\":{\"22\":1}}],[\"m\",{\"1\":{\"25\":7,\"53\":2,\"60\":2,\"79\":4,\"98\":5,\"184\":1,\"266\":3,\"280\":1,\"288\":2,\"292\":3,\"295\":2,\"296\":2,\"297\":2}}],[\"maxuint8\",{\"1\":{\"292\":1}}],[\"maxint8\",{\"1\":{\"292\":1}}],[\"maximum\",{\"1\":{\"141\":1}}],[\"max\",{\"1\":{\"249\":1}}],[\"man\",{\"1\":{\"280\":4}}],[\"many\",{\"1\":{\"217\":3}}],[\"manipulation\",{\"1\":{\"188\":2}}],[\"marketplace\",{\"1\":{\"192\":8}}],[\"marshal\",{\"1\":{\"41\":2}}],[\"machines\",{\"1\":{\"192\":1}}],[\"mac地址\",{\"1\":{\"172\":2}}],[\"mac\",{\"1\":{\"170\":7,\"171\":9,\"172\":9,\"173\":1}}],[\"mail\",{\"1\":{\"167\":1}}],[\"mainclass\",{\"1\":{\"194\":1}}],[\"main\",{\"1\":{\"40\":3,\"64\":2,\"66\":2,\"67\":2,\"69\":4,\"70\":2,\"75\":2,\"78\":2,\"93\":2,\"94\":2,\"95\":2,\"96\":2,\"99\":2,\"100\":2,\"101\":2,\"105\":2,\"107\":2,\"108\":2,\"109\":2,\"116\":2,\"123\":2,\"125\":2,\"126\":2,\"198\":2,\"226\":2,\"277\":6,\"278\":1,\"279\":3,\"280\":2,\"287\":4,\"288\":4,\"290\":2,\"291\":2,\"292\":2,\"295\":2,\"296\":2,\"297\":2}}],[\"may\",{\"1\":{\"120\":1}}],[\"mathutil\",{\"1\":{\"225\":1}}],[\"math\",{\"1\":{\"53\":4,\"231\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"280\":1,\"292\":3}}],[\"male\",{\"1\":{\"51\":1}}],[\"mapsliceschan\",{\"1\":{\"303\":1}}],[\"map不能保证并发安全\",{\"1\":{\"302\":1}}],[\"map用组合字面量方式的定义和初始化如下\",{\"1\":{\"280\":1}}],[\"maputil\",{\"1\":{\"225\":1}}],[\"map\",{\"0\":{\"25\":1,\"47\":1,\"79\":2,\"97\":1,\"98\":1,\"99\":1,\"102\":1,\"294\":1,\"295\":1,\"296\":1,\"297\":1,\"301\":1,\"302\":1,\"303\":1},\"1\":{\"25\":7,\"60\":7,\"79\":7,\"82\":1,\"98\":9,\"99\":5,\"100\":6,\"101\":3,\"102\":1,\"103\":2,\"217\":1,\"225\":4,\"274\":2,\"280\":1,\"288\":2,\"295\":2,\"296\":2,\"297\":3,\"301\":2,\"302\":1,\"303\":5}}],[\"makes\",{\"1\":{\"192\":1}}],[\"makefile\",{\"1\":{\"188\":4}}],[\"make\",{\"1\":{\"17\":1,\"25\":5,\"37\":2,\"39\":2,\"42\":2,\"43\":1,\"58\":2,\"60\":2,\"67\":2,\"79\":2,\"98\":4,\"99\":1,\"100\":1,\"101\":1,\"105\":2,\"107\":1,\"109\":1,\"112\":3,\"188\":1,\"287\":2,\"288\":2,\"295\":1}}],[\"murphy\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"music\",{\"1\":{\"231\":1,\"233\":2,\"235\":2,\"236\":2,\"237\":2}}],[\"much\",{\"1\":{\"192\":1}}],[\"multiple\",{\"1\":{\"120\":1,\"132\":1}}],[\"multiply\",{\"1\":{\"5\":2}}],[\"mutex\",{\"1\":{\"16\":3}}],[\"mysql\",{\"1\":{\"210\":1,\"244\":1,\"258\":1,\"259\":1,\"263\":1,\"264\":3,\"269\":2}}],[\"myerror\",{\"1\":{\"14\":9}}],[\"my\",{\"1\":{\"5\":2}}],[\"+∞\",{\"1\":{\"72\":2}}],[\"++\",{\"1\":{\"66\":1,\"69\":1,\"78\":1,\"84\":1}}],[\"+=\",{\"1\":{\"16\":1,\"69\":1,\"88\":2,\"292\":2}}],[\"+\",{\"1\":{\"5\":2,\"65\":1,\"74\":4,\"84\":2,\"88\":2,\"90\":1,\"149\":3,\"163\":1}}],[\"ibd\",{\"1\":{\"258\":1,\"259\":1}}],[\"iris\",{\"1\":{\"196\":1}}],[\"ieee\",{\"1\":{\"170\":2}}],[\"ieee802\",{\"1\":{\"129\":2}}],[\"ietf\",{\"1\":{\"159\":1}}],[\"ix\",{\"1\":{\"140\":1}}],[\"ii\",{\"1\":{\"140\":1}}],[\"icmp\",{\"1\":{\"163\":2}}],[\"icmf\",{\"1\":{\"129\":1}}],[\"ichp\",{\"1\":{\"129\":1}}],[\"ip地址\",{\"1\":{\"172\":1}}],[\"ipsec\",{\"1\":{\"143\":2}}],[\"ipv7\",{\"1\":{\"140\":1}}],[\"ipv6\",{\"0\":{\"143\":1},\"1\":{\"140\":1,\"143\":3,\"167\":1,\"178\":1}}],[\"ipv4\",{\"1\":{\"140\":3,\"143\":2,\"170\":1,\"177\":2}}],[\"ip协议族\",{\"1\":{\"129\":1}}],[\"ip\",{\"0\":{\"138\":1,\"139\":1,\"144\":1},\"1\":{\"129\":3,\"139\":6,\"140\":6,\"141\":3,\"144\":2,\"163\":1,\"165\":3,\"166\":6,\"167\":1,\"168\":1,\"170\":2,\"171\":5,\"172\":10,\"173\":4,\"175\":4,\"176\":2,\"177\":2}}],[\"i++\",{\"1\":{\"43\":1,\"65\":1,\"67\":1}}],[\"itemname=ms\",{\"1\":{\"192\":1}}],[\"itemname=eamodio\",{\"1\":{\"192\":1}}],[\"itemname=oderwat\",{\"1\":{\"192\":1}}],[\"itemname=golang\",{\"1\":{\"192\":1}}],[\"items\",{\"1\":{\"192\":4}}],[\"it\",{\"1\":{\"42\":1,\"182\":2}}],[\"implemented\",{\"1\":{\"132\":1}}],[\"import\",{\"0\":{\"7\":1},\"1\":{\"5\":3,\"7\":3,\"8\":1,\"53\":7,\"64\":1,\"66\":1,\"67\":1,\"69\":2,\"70\":1,\"75\":1,\"78\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"99\":1,\"100\":1,\"101\":1,\"105\":1,\"107\":1,\"108\":1,\"109\":1,\"116\":1,\"123\":1,\"125\":1,\"126\":1,\"198\":1,\"226\":1,\"277\":3,\"278\":1,\"285\":1,\"287\":2,\"288\":2,\"290\":1,\"291\":1,\"292\":1,\"295\":1}}],[\"images\",{\"1\":{\"182\":1}}],[\"imag\",{\"1\":{\"37\":2}}],[\"i\",{\"1\":{\"33\":2,\"43\":2,\"65\":15,\"66\":5,\"67\":2,\"69\":4,\"78\":4,\"250\":1,\"258\":1,\"259\":3}}],[\"id=c\",{\"1\":{\"233\":2,\"235\":2,\"236\":2,\"237\":2}}],[\"idstudent\",{\"1\":{\"228\":1}}],[\"idteacher\",{\"1\":{\"228\":1}}],[\"identify\",{\"1\":{\"228\":2}}],[\"identifier2\",{\"1\":{\"51\":1}}],[\"identifier1\",{\"1\":{\"51\":1}}],[\"identifier\",{\"1\":{\"51\":1}}],[\"ide\",{\"0\":{\"313\":1,\"325\":1},\"1\":{\"187\":1}}],[\"id\",{\"1\":{\"32\":6,\"184\":3,\"192\":4,\"213\":1,\"215\":1,\"228\":7,\"231\":1,\"232\":2,\"233\":5,\"235\":5,\"236\":5,\"237\":5}}],[\"isp\",{\"1\":{\"166\":2}}],[\"is02110\",{\"1\":{\"129\":1}}],[\"isnumber\",{\"1\":{\"76\":3}}],[\"isrunning\",{\"1\":{\"35\":2}}],[\"is或errors\",{\"1\":{\"32\":1}}],[\"is\",{\"0\":{\"95\":1},\"1\":{\"29\":2,\"30\":2,\"31\":2,\"32\":2,\"95\":4}}],[\"isempty\",{\"1\":{\"17\":2}}],[\"io\",{\"1\":{\"16\":2}}],[\"iota\",{\"1\":{\"5\":3,\"37\":2,\"51\":2}}],[\"inner\",{\"0\":{\"233\":1},\"1\":{\"233\":3,\"237\":4}}],[\"index\",{\"1\":{\"217\":1,\"253\":1,\"254\":1,\"256\":1,\"261\":1,\"262\":1,\"264\":1}}],[\"indentation\",{\"1\":{\"192\":1}}],[\"indent\",{\"1\":{\"192\":4}}],[\"in\",{\"1\":{\"212\":4,\"213\":2,\"214\":1,\"215\":1,\"245\":2,\"277\":1,\"296\":1}}],[\"install\",{\"1\":{\"202\":1}}],[\"insights\",{\"1\":{\"192\":1}}],[\"inline\",{\"1\":{\"194\":1}}],[\"info\",{\"1\":{\"182\":1}}],[\"information\",{\"1\":{\"132\":1}}],[\"init\",{\"1\":{\"38\":4,\"44\":2,\"53\":1}}],[\"invalid\",{\"1\":{\"12\":2,\"64\":1}}],[\"intcomparator\",{\"1\":{\"226\":3}}],[\"intuintfloat32stringstruct\",{\"1\":{\"303\":1}}],[\"intuint\",{\"1\":{\"72\":1}}],[\"integratedterminal\",{\"1\":{\"194\":1}}],[\"integers\",{\"1\":{\"72\":2}}],[\"interview\",{\"0\":{\"335\":1,\"340\":1}}],[\"internalconsole\",{\"1\":{\"194\":2}}],[\"internalconsoleoptions\",{\"1\":{\"194\":1}}],[\"internet\",{\"1\":{\"139\":1}}],[\"interface\",{\"1\":{\"55\":1,\"59\":2,\"82\":1,\"92\":1,\"120\":3}}],[\"int16uint16\",{\"1\":{\"72\":1}}],[\"int16\",{\"1\":{\"37\":1,\"82\":1,\"277\":7}}],[\"int8uint8int16uint16int32uint32int64uint64intuintuintptr\",{\"1\":{\"276\":1}}],[\"int8uint8\",{\"1\":{\"72\":1}}],[\"int8\",{\"1\":{\"37\":1,\"82\":1,\"277\":3,\"292\":1}}],[\"int64uint64\",{\"1\":{\"72\":1}}],[\"int64\",{\"1\":{\"35\":1,\"37\":1,\"82\":1}}],[\"int32uint32\",{\"1\":{\"72\":1}}],[\"int32\",{\"1\":{\"35\":2,\"37\":1,\"55\":2,\"72\":1,\"82\":1,\"283\":1}}],[\"int\",{\"0\":{\"72\":1},\"1\":{\"5\":2,\"6\":4,\"11\":4,\"13\":1,\"16\":4,\"17\":4,\"37\":2,\"39\":2,\"41\":2,\"64\":1,\"65\":1,\"67\":3,\"72\":1,\"77\":1,\"78\":1,\"79\":2,\"81\":1,\"82\":1,\"98\":3,\"106\":1,\"107\":1,\"108\":1,\"109\":2,\"226\":4,\"280\":3,\"287\":4,\"288\":2,\"290\":1,\"292\":1,\"295\":2,\"296\":2,\"297\":2}}],[\"ifelse\",{\"1\":{\"63\":1}}],[\"if\",{\"1\":{\"6\":2,\"12\":4,\"13\":2,\"17\":6,\"18\":8,\"29\":2,\"30\":1,\"32\":5,\"33\":1,\"35\":2,\"40\":5,\"63\":1,\"65\":2,\"66\":1,\"101\":2,\"226\":2}}],[\"view\",{\"1\":{\"192\":1}}],[\"via\",{\"1\":{\"192\":2}}],[\"visualizations\",{\"1\":{\"192\":1}}],[\"visualize\",{\"1\":{\"192\":1}}],[\"visualstudio\",{\"1\":{\"192\":4}}],[\"visual\",{\"1\":{\"192\":1}}],[\"voip\",{\"1\":{\"160\":1}}],[\"volume\",{\"1\":{\"5\":2}}],[\"v4\",{\"1\":{\"140\":1}}],[\"vscode\",{\"0\":{\"190\":1,\"191\":1},\"1\":{\"187\":1,\"191\":2,\"192\":2,\"193\":1}}],[\"vs\",{\"0\":{\"133\":1,\"135\":2},\"1\":{\"192\":5}}],[\"validator\",{\"1\":{\"225\":1}}],[\"valuable\",{\"1\":{\"192\":1}}],[\"valuer\",{\"1\":{\"217\":1}}],[\"valuetype\",{\"1\":{\"79\":2,\"98\":2}}],[\"value2\",{\"1\":{\"51\":1}}],[\"value1\",{\"1\":{\"51\":1}}],[\"value\",{\"1\":{\"51\":1,\"79\":2,\"98\":2,\"99\":23,\"100\":8,\"101\":3,\"120\":1,\"303\":3}}],[\"values\",{\"1\":{\"26\":2,\"120\":1}}],[\"val\",{\"1\":{\"99\":4,\"101\":4,\"114\":1,\"115\":1,\"123\":7}}],[\"val2\",{\"1\":{\"56\":4,\"226\":3}}],[\"val1\",{\"1\":{\"56\":4,\"226\":3}}],[\"varchar\",{\"1\":{\"251\":1}}],[\"var\",{\"1\":{\"5\":7,\"6\":3,\"11\":1,\"13\":1,\"14\":4,\"16\":2,\"17\":1,\"23\":1,\"29\":1,\"31\":1,\"42\":1,\"43\":1,\"56\":7,\"64\":1,\"74\":1,\"75\":1,\"76\":1,\"78\":1,\"79\":1,\"81\":1,\"96\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"105\":1,\"277\":3,\"280\":1,\"284\":2,\"285\":2,\"287\":4,\"292\":2,\"295\":1,\"296\":1,\"297\":1}}],[\"vet\",{\"1\":{\"26\":1}}],[\"version\",{\"1\":{\"16\":2,\"182\":1,\"192\":4,\"194\":7}}],[\"v3\",{\"1\":{\"25\":2}}],[\"v1\",{\"1\":{\"25\":2,\"226\":2}}],[\"v2\",{\"1\":{\"8\":1,\"25\":2,\"207\":1,\"226\":3}}],[\"v\",{\"1\":{\"6\":6,\"12\":18,\"26\":4,\"30\":1,\"32\":2,\"65\":6,\"184\":1,\"290\":2}}],[\"2^8=256\",{\"1\":{\"286\":1}}],[\"2进制\",{\"1\":{\"278\":1}}],[\"21\",{\"1\":{\"278\":5}}],[\"21s\",{\"1\":{\"39\":1}}],[\"28字节\",{\"1\":{\"171\":1}}],[\"2883\",{\"1\":{\"152\":1}}],[\"24位\",{\"1\":{\"170\":1}}],[\"24\",{\"1\":{\"170\":2}}],[\"2480\",{\"1\":{\"141\":2}}],[\"2s\",{\"1\":{\"149\":2}}],[\"2xx\",{\"1\":{\"132\":1}}],[\"20字节\",{\"1\":{\"143\":1,\"162\":1}}],[\"206\",{\"1\":{\"132\":1}}],[\"205\",{\"1\":{\"132\":1}}],[\"2049\",{\"1\":{\"137\":1}}],[\"204\",{\"1\":{\"132\":1}}],[\"203\",{\"1\":{\"132\":1}}],[\"202\",{\"1\":{\"132\":1}}],[\"2018\",{\"1\":{\"152\":1}}],[\"201\",{\"1\":{\"132\":1}}],[\"2001\",{\"1\":{\"143\":1}}],[\"200\",{\"1\":{\"132\":1,\"198\":1}}],[\"20\",{\"1\":{\"58\":1,\"84\":1,\"85\":1,\"94\":1,\"140\":1,\"141\":3,\"172\":1,\"220\":1}}],[\"255\",{\"1\":{\"175\":7,\"284\":1}}],[\"2500\",{\"1\":{\"141\":2}}],[\"25\",{\"1\":{\"49\":1}}],[\"2\",{\"0\":{\"135\":1},\"1\":{\"5\":4,\"17\":2,\"26\":2,\"39\":1,\"64\":3,\"65\":3,\"66\":1,\"70\":2,\"75\":1,\"77\":1,\"78\":1,\"84\":1,\"87\":4,\"88\":10,\"90\":1,\"106\":3,\"108\":4,\"109\":3,\"112\":1,\"129\":1,\"135\":1,\"140\":1,\"171\":1,\"173\":3,\"176\":4,\"194\":7,\"226\":2,\"229\":3,\"231\":1,\"232\":3,\"233\":5,\"235\":5,\"236\":5,\"237\":5,\"248\":1,\"264\":3,\"266\":1,\"290\":3,\"291\":2,\"292\":1}}],[\"1个键值\",{\"1\":{\"266\":1}}],[\"127\",{\"1\":{\"292\":1}}],[\"123\",{\"1\":{\"276\":1}}],[\"12\",{\"1\":{\"232\":7,\"233\":4,\"235\":7,\"236\":4,\"237\":7,\"245\":6,\"246\":6}}],[\"128位\",{\"1\":{\"143\":1}}],[\"180\",{\"1\":{\"280\":2}}],[\"18\",{\"1\":{\"219\":1,\"245\":4,\"246\":2}}],[\"11\",{\"1\":{\"232\":5,\"233\":3,\"235\":5,\"236\":3,\"237\":5}}],[\"110\",{\"1\":{\"176\":5}}],[\"111\",{\"1\":{\"176\":5}}],[\"112\",{\"1\":{\"176\":5}}],[\"113\",{\"1\":{\"176\":5}}],[\"172\",{\"1\":{\"175\":1}}],[\"1s\",{\"1\":{\"149\":3}}],[\"192\",{\"1\":{\"143\":1,\"172\":7,\"175\":1,\"176\":4}}],[\"14字节\",{\"1\":{\"171\":1}}],[\"14\",{\"1\":{\"140\":1,\"192\":1,\"279\":1}}],[\"1520\",{\"1\":{\"141\":1}}],[\"1540\",{\"1\":{\"141\":1}}],[\"154\",{\"1\":{\"140\":1}}],[\"15\",{\"1\":{\"140\":2,\"231\":1,\"236\":1,\"237\":1,\"244\":1,\"245\":2}}],[\"1xx\",{\"1\":{\"132\":1}}],[\"1序列划分为具有意义的数据帧传送给另一端\",{\"1\":{\"128\":1}}],[\"16进制\",{\"1\":{\"278\":1}}],[\"16位\",{\"1\":{\"161\":4}}],[\"16s\",{\"1\":{\"149\":2}}],[\"160位\",{\"1\":{\"147\":1}}],[\"168\",{\"1\":{\"143\":1,\"172\":7,\"175\":2,\"176\":4}}],[\"16\",{\"1\":{\"72\":1,\"171\":8,\"175\":1}}],[\"133\",{\"1\":{\"176\":4}}],[\"137\",{\"1\":{\"41\":2}}],[\"13\",{\"1\":{\"30\":1,\"232\":1,\"235\":1,\"237\":1}}],[\"10进制\",{\"1\":{\"278\":1}}],[\"101\",{\"1\":{\"132\":1}}],[\"1010\",{\"1\":{\"87\":2}}],[\"1011\",{\"1\":{\"87\":2}}],[\"1000\",{\"1\":{\"84\":1,\"87\":1}}],[\"100000000\",{\"1\":{\"39\":2}}],[\"100\",{\"1\":{\"13\":2,\"51\":1,\"132\":1}}],[\"10\",{\"1\":{\"6\":2,\"13\":2,\"60\":2,\"65\":1,\"66\":1,\"67\":1,\"78\":1,\"81\":1,\"84\":1,\"98\":1,\"105\":1,\"113\":1,\"140\":1,\"172\":5,\"175\":1,\"232\":2,\"233\":1,\"235\":2,\"236\":1,\"237\":2,\"244\":3,\"247\":2,\"276\":2,\"279\":1,\"288\":1}}],[\"1\",{\"0\":{\"135\":3},\"1\":{\"5\":6,\"12\":2,\"17\":2,\"26\":2,\"30\":1,\"35\":3,\"43\":1,\"51\":1,\"64\":2,\"65\":2,\"66\":1,\"67\":1,\"69\":1,\"70\":2,\"77\":1,\"78\":1,\"87\":10,\"90\":1,\"94\":1,\"106\":1,\"108\":4,\"109\":3,\"125\":2,\"131\":3,\"132\":1,\"135\":3,\"140\":3,\"141\":1,\"143\":1,\"155\":1,\"156\":2,\"170\":2,\"171\":2,\"173\":3,\"192\":2,\"221\":1,\"226\":4,\"229\":3,\"231\":1,\"232\":2,\"233\":4,\"235\":4,\"236\":4,\"237\":4,\"249\":2,\"264\":3,\"285\":1,\"290\":3,\"291\":2,\"292\":1,\"295\":1,\"296\":2,\"297\":1}}],[\"=range\",{\"1\":{\"65\":3}}],[\"=0\",{\"1\":{\"65\":1}}],[\"==\",{\"1\":{\"12\":2,\"17\":5,\"18\":1,\"29\":1,\"35\":2,\"65\":1,\"66\":1,\"85\":2,\"90\":1,\"278\":3}}],[\"=\",{\"1\":{\"5\":24,\"6\":8,\"12\":8,\"13\":4,\"14\":4,\"15\":4,\"17\":7,\"18\":11,\"19\":2,\"21\":2,\"22\":2,\"23\":1,\"24\":3,\"25\":8,\"26\":2,\"29\":3,\"30\":2,\"31\":3,\"32\":9,\"33\":2,\"39\":8,\"40\":11,\"41\":2,\"42\":3,\"43\":2,\"51\":6,\"55\":1,\"56\":4,\"58\":2,\"60\":2,\"64\":2,\"65\":2,\"66\":1,\"67\":5,\"69\":2,\"74\":2,\"75\":2,\"76\":2,\"77\":1,\"78\":2,\"79\":2,\"80\":1,\"81\":2,\"85\":2,\"86\":2,\"88\":22,\"90\":1,\"93\":2,\"94\":3,\"95\":3,\"96\":3,\"98\":3,\"99\":8,\"100\":5,\"101\":6,\"105\":3,\"106\":1,\"107\":1,\"108\":3,\"109\":3,\"112\":2,\"114\":1,\"115\":1,\"116\":1,\"122\":2,\"123\":4,\"125\":1,\"126\":1,\"140\":2,\"149\":1,\"154\":1,\"198\":1,\"214\":2,\"226\":4,\"245\":2,\"246\":5,\"264\":6,\"272\":3,\"276\":2,\"277\":8,\"279\":1,\"280\":6,\"284\":2,\"285\":2,\"287\":10,\"288\":3,\"290\":3,\"292\":2,\"296\":1}}],[\"b树和b+树的区别\",{\"1\":{\"267\":1}}],[\"b+tree\",{\"1\":{\"267\":1}}],[\"b+\",{\"0\":{\"267\":1},\"1\":{\"267\":7}}],[\"btree\",{\"1\":{\"266\":1}}],[\"burns\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"bubblesort\",{\"1\":{\"226\":1}}],[\"build\",{\"1\":{\"194\":1}}],[\"buf\",{\"1\":{\"16\":1}}],[\"buffer\",{\"1\":{\"16\":3,\"59\":2}}],[\"black\",{\"1\":{\"280\":2}}],[\"blame\",{\"1\":{\"192\":1}}],[\"blue\",{\"1\":{\"5\":2}}],[\"bilibili\",{\"1\":{\"205\":1}}],[\"bin\",{\"1\":{\"182\":1,\"194\":1}}],[\"bit\",{\"1\":{\"140\":1}}],[\"b类\",{\"1\":{\"175\":1}}],[\"b2\",{\"1\":{\"172\":1}}],[\"bb\",{\"1\":{\"172\":1}}],[\"bcp\",{\"1\":{\"129\":1}}],[\"by\",{\"0\":{\"247\":1},\"1\":{\"120\":1,\"243\":1,\"247\":2}}],[\"bytes\",{\"1\":{\"16\":3,\"41\":2}}],[\"byte\",{\"0\":{\"285\":1},\"1\":{\"16\":1,\"37\":2,\"72\":1,\"82\":1,\"140\":1,\"282\":1,\"283\":1,\"284\":2,\"285\":1,\"286\":1}}],[\"between\",{\"1\":{\"245\":2,\"263\":1}}],[\"beverly\",{\"1\":{\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1}}],[\"belongs\",{\"1\":{\"217\":1}}],[\"beego\",{\"1\":{\"196\":1}}],[\"be\",{\"1\":{\"120\":1}}],[\"beginindex\",{\"1\":{\"106\":2}}],[\"benchmarkgood\",{\"1\":{\"39\":1}}],[\"benchmarkbad\",{\"1\":{\"39\":1}}],[\"bobby\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"both\",{\"1\":{\"194\":1}}],[\"boundaries\",{\"1\":{\"120\":1}}],[\"body\",{\"1\":{\"40\":4}}],[\"bool\",{\"0\":{\"76\":1},\"1\":{\"17\":2,\"35\":3,\"37\":2,\"59\":2,\"76\":2,\"82\":1,\"120\":1,\"276\":1}}],[\"book\",{\"1\":{\"16\":4}}],[\"brackets\",{\"1\":{\"188\":3}}],[\"branch\",{\"1\":{\"184\":4}}],[\"breakcasecontinuedefaultelsefallthroughforgotoifrangereturnselectswitch\",{\"1\":{\"49\":1}}],[\"break\",{\"1\":{\"32\":1,\"64\":1,\"65\":3}}],[\"broken\",{\"1\":{\"31\":1}}],[\"basic\",{\"0\":{\"333\":1,\"338\":1}}],[\"bash\",{\"1\":{\"182\":1}}],[\"baseval\",{\"1\":{\"123\":5}}],[\"base\",{\"1\":{\"123\":1}}],[\"background\",{\"1\":{\"122\":1,\"123\":5,\"125\":1,\"126\":1}}],[\"bar\",{\"1\":{\"24\":2,\"29\":1}}],[\"bad\",{\"1\":{\"15\":1,\"16\":2,\"18\":1,\"21\":1,\"26\":1,\"32\":1,\"40\":1,\"42\":1,\"132\":2}}],[\"bs\",{\"1\":{\"16\":3}}],[\"b\",{\"0\":{\"266\":1},\"1\":{\"5\":6,\"13\":2,\"16\":8,\"39\":2,\"40\":4,\"51\":2,\"59\":2,\"84\":6,\"85\":7,\"86\":3,\"87\":4,\"88\":11,\"172\":1,\"184\":1,\"228\":2,\"229\":3,\"233\":3,\"237\":2,\"263\":7,\"264\":6,\"266\":3,\"267\":7,\"284\":1,\"285\":3,\"287\":2}}],[\"a索引上扩展\",{\"1\":{\"263\":1}}],[\"avg\",{\"1\":{\"247\":1,\"249\":1}}],[\"age\",{\"1\":{\"219\":1,\"220\":1,\"228\":3,\"232\":1,\"233\":1,\"235\":1,\"236\":1,\"237\":1,\"245\":3,\"246\":4,\"247\":4,\"248\":3}}],[\"attach\",{\"1\":{\"194\":1}}],[\"at\",{\"1\":{\"192\":2}}],[\"atomic\",{\"0\":{\"35\":1},\"1\":{\"7\":2,\"35\":4}}],[\"a类\",{\"1\":{\"175\":1}}],[\"a2\",{\"1\":{\"172\":1}}],[\"aa\",{\"1\":{\"172\":1}}],[\"aaaa\",{\"1\":{\"167\":1}}],[\"authorship\",{\"1\":{\"192\":1}}],[\"authoritative\",{\"1\":{\"132\":1}}],[\"authenticate报头域一起使用\",{\"1\":{\"132\":1}}],[\"access\",{\"1\":{\"170\":1}}],[\"accepted\",{\"1\":{\"132\":1}}],[\"acknowledgment\",{\"1\":{\"152\":1}}],[\"ack=2\",{\"1\":{\"152\":1}}],[\"ack=y+2\",{\"1\":{\"149\":1}}],[\"ack=1表示确认号字段中的值是有效的\",{\"1\":{\"147\":1}}],[\"ack\",{\"1\":{\"147\":1,\"149\":2,\"151\":1,\"152\":6,\"153\":1,\"163\":5}}],[\"across\",{\"1\":{\"120\":1}}],[\"a++\",{\"1\":{\"84\":1}}],[\"art\",{\"1\":{\"231\":1,\"233\":2,\"235\":2,\"236\":2,\"237\":2}}],[\"args\",{\"1\":{\"194\":5}}],[\"arp欺骗攻击\",{\"1\":{\"173\":1}}],[\"arp表项固化\",{\"1\":{\"173\":1}}],[\"arp表项限制\",{\"1\":{\"173\":1}}],[\"arp表项严格学习功能是指设备仅学习自己发送的\",{\"1\":{\"173\":1}}],[\"arp表项严格学习\",{\"1\":{\"173\":1}}],[\"arp报文限速\",{\"1\":{\"173\":1}}],[\"arp泛洪攻击\",{\"1\":{\"173\":1}}],[\"arp请求\",{\"1\":{\"171\":1}}],[\"arp\",{\"0\":{\"169\":1,\"171\":1,\"173\":1},\"1\":{\"129\":1,\"170\":1,\"171\":7,\"172\":7,\"173\":20}}],[\"arr\",{\"1\":{\"106\":1}}],[\"array\",{\"0\":{\"77\":1},\"1\":{\"65\":4}}],[\"area\",{\"1\":{\"5\":2}}],[\"any\",{\"1\":{\"226\":2}}],[\"annotations\",{\"1\":{\"192\":1}}],[\"animal\",{\"1\":{\"55\":1,\"80\":2,\"214\":1}}],[\"and\",{\"0\":{\"246\":1},\"1\":{\"16\":1,\"42\":1,\"99\":2,\"120\":1,\"192\":5,\"245\":1,\"264\":2}}],[\"alter\",{\"1\":{\"255\":1}}],[\"alan\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"algorithm\",{\"1\":{\"225\":1,\"226\":2}}],[\"alias\",{\"1\":{\"167\":2}}],[\"all\",{\"1\":{\"43\":1,\"214\":2}}],[\"already\",{\"1\":{\"35\":2}}],[\"abstractlist\",{\"1\":{\"36\":2}}],[\"apache2\",{\"1\":{\"180\":1}}],[\"application\",{\"1\":{\"32\":1}}],[\"append\",{\"1\":{\"6\":2,\"17\":4,\"37\":2,\"39\":2,\"78\":1,\"108\":3,\"109\":1,\"290\":1}}],[\"api\",{\"1\":{\"31\":2,\"120\":1,\"196\":3,\"200\":2,\"201\":1,\"203\":1,\"205\":2,\"206\":1,\"210\":3,\"217\":3}}],[\"assignment\",{\"1\":{\"277\":1,\"296\":1}}],[\"asc|desc\",{\"1\":{\"243\":1}}],[\"ascending\",{\"1\":{\"226\":1}}],[\"ascii\",{\"1\":{\"72\":1,\"284\":2}}],[\"as相匹配\",{\"1\":{\"32\":1}}],[\"as\",{\"0\":{\"96\":1},\"1\":{\"29\":1,\"30\":2,\"31\":2,\"32\":1,\"96\":2,\"277\":1}}],[\"adams\",{\"1\":{\"232\":1,\"235\":1,\"237\":1}}],[\"adsp\",{\"1\":{\"128\":1}}],[\"admin\",{\"1\":{\"21\":1,\"22\":1}}],[\"address\",{\"1\":{\"170\":2,\"175\":1,\"279\":1}}],[\"add2\",{\"1\":{\"17\":2}}],[\"add1\",{\"1\":{\"17\":2}}],[\"add\",{\"1\":{\"5\":2,\"36\":2,\"43\":1,\"125\":1,\"184\":2,\"255\":1}}],[\"a\",{\"1\":{\"5\":6,\"13\":5,\"14\":2,\"16\":4,\"51\":2,\"63\":1,\"64\":2,\"80\":2,\"84\":7,\"85\":7,\"86\":4,\"87\":6,\"88\":31,\"120\":3,\"167\":1,\"172\":12,\"176\":1,\"182\":1,\"192\":1,\"228\":2,\"229\":3,\"233\":3,\"237\":2,\"263\":7,\"264\":6,\"277\":8,\"284\":1,\"285\":4,\"287\":2}}],[\"如什么是拷贝提问里易知\",{\"1\":{\"287\":1}}],[\"如下\",{\"1\":{\"287\":2}}],[\"如下十进制的数值\",{\"1\":{\"278\":1}}],[\"如下字符串都是字符串字面量\",{\"1\":{\"276\":1}}],[\"如链表\",{\"1\":{\"273\":1}}],[\"如链式查询\",{\"1\":{\"217\":2}}],[\"如环境变量\",{\"1\":{\"193\":1}}],[\"如环境不一致\",{\"1\":{\"181\":1}}],[\"如代码\",{\"1\":{\"180\":1}}],[\"如上图所示\",{\"1\":{\"176\":1}}],[\"如网卡\",{\"1\":{\"170\":1}}],[\"如网线的类型等\",{\"1\":{\"128\":1}}],[\"如何操作\",{\"1\":{\"303\":1}}],[\"如何避免\",{\"1\":{\"292\":1}}],[\"如何防范\",{\"1\":{\"173\":1}}],[\"如何缓解\",{\"1\":{\"163\":2}}],[\"如何检测\",{\"1\":{\"163\":1}}],[\"如何保证传输的可靠性\",{\"0\":{\"150\":1}}],[\"如何判断数据已被分片\",{\"1\":{\"142\":1}}],[\"如\",{\"1\":{\"37\":1,\"51\":1,\"88\":1,\"113\":2,\"132\":1,\"137\":1,\"176\":1,\"193\":1,\"210\":1,\"228\":1,\"245\":2,\"276\":1,\"292\":1}}],[\"如果对未初始化的\",{\"0\":{\"296\":1,\"297\":1}}],[\"如果传入的结构体非常大\",{\"1\":{\"293\":1}}],[\"如果我们想强制回收\",{\"1\":{\"303\":1}}],[\"如果我们有一个组合索引\",{\"1\":{\"264\":1}}],[\"如果我们需要一个\",{\"1\":{\"263\":1}}],[\"如果我们已经有一个\",{\"1\":{\"263\":1}}],[\"如果我们希望\",{\"1\":{\"14\":1}}],[\"如果索引字段的长度较长\",{\"1\":{\"263\":1}}],[\"如果创建了一个组合索引\",{\"1\":{\"263\":1}}],[\"如果插入数据是无序的\",{\"1\":{\"258\":1}}],[\"如果有多个表连接如\",{\"1\":{\"237\":1}}],[\"如果有丢失的情况\",{\"1\":{\"149\":1}}],[\"如果需要使用\",{\"1\":{\"196\":1}}],[\"如果设置为\",{\"1\":{\"194\":6}}],[\"如果是组合索引\",{\"1\":{\"251\":1}}],[\"如果是云端开发则推荐使用\",{\"1\":{\"187\":1,\"191\":1}}],[\"如果是本地开发首选\",{\"1\":{\"187\":1}}],[\"如果主机\",{\"1\":{\"176\":1}}],[\"如果udp数据报在传输过程中丢失\",{\"1\":{\"160\":1}}],[\"如果定时器到期则会触发重传\",{\"1\":{\"152\":1}}],[\"如果发送方在rto时间内未收到确认\",{\"1\":{\"152\":1}}],[\"如果连接时\",{\"1\":{\"149\":1,\"163\":1}}],[\"如果接收到rst位时\",{\"1\":{\"147\":1}}],[\"如果选项字段为空\",{\"1\":{\"147\":1}}],[\"如果tcp数据过大\",{\"1\":{\"147\":1}}],[\"如果df标志位被设置为1\",{\"1\":{\"140\":1}}],[\"如果相同\",{\"1\":{\"137\":1}}],[\"如果相关\",{\"1\":{\"32\":1}}],[\"如果验证通过则继续\",{\"1\":{\"134\":1}}],[\"如果往一个已经\",{\"1\":{\"114\":1}}],[\"如果想创建两个相同数据的切片\",{\"1\":{\"109\":1}}],[\"如果将一个切片赋值给另一个变量\",{\"1\":{\"109\":1}}],[\"如果同时多个通道收到数据\",{\"1\":{\"67\":1}}],[\"如果提前知道大概容量吗\",{\"1\":{\"47\":1}}],[\"如果只有一个\",{\"1\":{\"43\":1}}],[\"如果您要等待多个\",{\"1\":{\"43\":1}}],[\"如果遇到错误\",{\"1\":{\"40\":1}}],[\"如果必须使用\",{\"1\":{\"34\":1}}],[\"如果被调用者在其约定中定义了一个特定的错误\",{\"1\":{\"32\":1}}],[\"如果操作不是绝对必要的\",{\"1\":{\"32\":1}}],[\"如果错误无法处理\",{\"1\":{\"32\":1}}],[\"如果使用\",{\"1\":{\"30\":1}}],[\"如果在\",{\"1\":{\"26\":1}}],[\"如果没有初始值\",{\"1\":{\"25\":1}}],[\"如果\",{\"0\":{\"290\":1},\"1\":{\"25\":1,\"172\":1}}],[\"如果初始化\",{\"1\":{\"25\":1}}],[\"如果嵌入的类型有相同的方法\",{\"1\":{\"16\":1}}],[\"如果导入的包名与导入路径中的最后一个单词不一致\",{\"1\":{\"8\":1}}],[\"如果单个变量赋值\",{\"1\":{\"6\":1}}],[\"如果大家有好的\",{\"1\":{\"1\":1}}],[\"如导入\",{\"1\":{\"5\":1}}],[\"不变\",{\"1\":{\"287\":1}}],[\"不同字面量可能同值吗\",{\"0\":{\"278\":1}}],[\"不同的时刻读到的同一批数据可能是不一样的\",{\"1\":{\"269\":1}}],[\"不同的就是\",{\"1\":{\"251\":1}}],[\"不为\",{\"1\":{\"263\":1}}],[\"不允许有空值\",{\"1\":{\"251\":1}}],[\"不允许为空\",{\"1\":{\"228\":1}}],[\"不等于\",{\"1\":{\"245\":1}}],[\"不太便捷\",{\"1\":{\"217\":1}}],[\"不如\",{\"1\":{\"196\":1}}],[\"不提供太多复杂的功能\",{\"1\":{\"196\":1}}],[\"不提供任何功能性好处\",{\"1\":{\"16\":1}}],[\"不会被内存回收\",{\"1\":{\"303\":1}}],[\"不会\",{\"1\":{\"290\":1}}],[\"不会出现数据类型无法转换的情况\",{\"1\":{\"210\":1}}],[\"不会引入过多的依赖\",{\"1\":{\"196\":1}}],[\"不会返回任何资源\",{\"1\":{\"132\":1}}],[\"不接受其他设备发送的\",{\"1\":{\"173\":1}}],[\"不保存\",{\"1\":{\"162\":1}}],[\"不保证\",{\"1\":{\"162\":1}}],[\"不储存状态信息\",{\"1\":{\"139\":1}}],[\"不可重复读常在数据更新时出现\",{\"1\":{\"269\":1}}],[\"不可重复读指的是在同一事务内\",{\"1\":{\"269\":1}}],[\"不可重复读\",{\"1\":{\"269\":2}}],[\"不可靠性\",{\"1\":{\"160\":1}}],[\"不可靠\",{\"1\":{\"139\":1}}],[\"不可否认\",{\"1\":{\"137\":1}}],[\"不可篡改\",{\"1\":{\"137\":1}}],[\"不支持自动生成\",{\"1\":{\"196\":1}}],[\"不支持自动化文档\",{\"1\":{\"196\":1}}],[\"不支持模板引擎\",{\"1\":{\"196\":2}}],[\"不支持\",{\"1\":{\"135\":4,\"196\":4}}],[\"不支持默认参数\",{\"1\":{\"52\":1}}],[\"不通过则显示警告信息\",{\"1\":{\"134\":1}}],[\"不返回响应体\",{\"1\":{\"131\":1}}],[\"不包含数据\",{\"1\":{\"267\":2}}],[\"不包含\",{\"1\":{\"106\":1}}],[\"不是线程安全的\",{\"1\":{\"103\":1}}],[\"不能寻址的对象\",{\"1\":{\"274\":1}}],[\"不能解析的报文\",{\"1\":{\"173\":1}}],[\"不能修改\",{\"1\":{\"75\":1}}],[\"不能是直接转载的内容\",{\"1\":{\"1\":1}}],[\"不定参数\",{\"1\":{\"52\":1}}],[\"不好管理和配置\",{\"1\":{\"36\":1}}],[\"不需要额外的空间\",{\"1\":{\"293\":1}}],[\"不需要回表查询数据\",{\"1\":{\"259\":1}}],[\"不需要再次查询数据\",{\"1\":{\"258\":1}}],[\"不需要运行完整的操作系统\",{\"1\":{\"181\":1}}],[\"不需要建立连接\",{\"1\":{\"139\":1}}],[\"不需要包名\",{\"1\":{\"53\":1}}],[\"不需要转义\",{\"1\":{\"19\":1}}],[\"不需要重命名\",{\"1\":{\"9\":1}}],[\"不容易区分\",{\"1\":{\"16\":1}}],[\"不一定是我们想要的\",{\"1\":{\"16\":1}}],[\"不要在\",{\"0\":{\"44\":1}}],[\"不要在公共的结构中使用嵌入类型\",{\"0\":{\"36\":1},\"1\":{\"36\":1}}],[\"不要用\",{\"1\":{\"9\":1}}],[\"不要使用\",{\"1\":{\"29\":1}}],[\"不要使用无意义的名称\",{\"1\":{\"10\":1}}],[\"不要使用下划线分隔单词\",{\"1\":{\"10\":1}}],[\"不要使用复数\",{\"1\":{\"9\":1}}],[\"不要使用大写或下划线或其他特殊符号\",{\"1\":{\"9\":1}}],[\"不属于\",{\"1\":{\"5\":1}}],[\"不推荐\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"16\":2,\"17\":3,\"19\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"39\":1,\"41\":1}}],[\"不相关的声明不要放一起\",{\"0\":{\"5\":1}}],[\"基本类型\",{\"1\":{\"276\":1}}],[\"基本规范\",{\"0\":{\"3\":1}}],[\"基于代码生成的静态类型\",{\"1\":{\"210\":1}}],[\"基于\",{\"1\":{\"180\":1}}],[\"基于僵尸网络的\",{\"1\":{\"168\":1}}],[\"基于云的ddos防护解决方案\",{\"1\":{\"163\":1}}],[\"基于字节流的传输层通信协议\",{\"1\":{\"146\":1}}],[\"基于链接的本地地址和路由公告\",{\"1\":{\"143\":1}}],[\"基于系统架构\",{\"1\":{\"72\":1}}],[\"基础\",{\"0\":{\"127\":1,\"227\":1,\"270\":1},\"1\":{\"1\":1}}],[\"本地和远程调试\",{\"1\":{\"193\":1}}],[\"本地地址\",{\"1\":{\"170\":1}}],[\"本地库和私有库\",{\"1\":{\"7\":1}}],[\"本身不是安全的\",{\"1\":{\"133\":1}}],[\"本规范参考了\",{\"1\":{\"2\":1}}],[\"本栏目主要提供\",{\"1\":{\"1\":1}}],[\"欢迎提交\",{\"1\":{\"1\":2}}],[\"介绍\",{\"0\":{\"1\":1,\"111\":1,\"119\":1,\"165\":1,\"170\":1,\"175\":1,\"180\":1,\"196\":1,\"200\":1,\"205\":1,\"210\":1,\"217\":1,\"224\":1},\"1\":{\"49\":1,\"72\":1,\"140\":1,\"228\":1,\"299\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
